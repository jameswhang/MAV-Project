cmake_minimum_required(VERSION 2.8.3)
project(obj_test)

find_package(catkin REQUIRED COMPONENTS
  roscpp
  std_msgs
  cmake_modules
  geometry_msgs
  message_generation
)

find_package(Eigen REQUIRED) 
include_directories( ${Eigen_INCLUDE_DIRS} )
add_definitions(${EIGEN_DEFINITIONS})

#find_package(Ope REQUIRED)
add_message_files(
    FILES
    MoveCommand.msg
    JoyCommand.msg
 )

generate_messages(
   DEPENDENCIES
   geometry_msgs
   std_msgs
 )

catkin_package(
  INCLUDE_DIRS include
  LIBRARIES obj_test
  CATKIN_DEPENDS roscpp rospy std_msgs message_runtime
  DEPENDS system_lib
)




include_directories(
  ${catkin_INCLUDE_DIRS}
  /opt/opencv/include
  /opt/OpenNI-Linux-x64-2.2/Include
)



link_directories(
/usr/lib
/usr/local/lib
/opt/OpenNI-Linux-x64-2.2/Redist
)

set(CMAKE_CXX_FLAGS  "-std=c++11")
set(CMAKE_C_FLGAS "-std=gnu++11")


add_library(
SURF
src/SURF.cpp 
src/OrbDetSurfDesc.cpp
src/SIFT.cpp 
src/AsusProLiveOpenNI2.cpp
src/Frame.cpp
)

target_link_libraries(SURF
${catkin_LIBRARIES}
OpenNI2
opencv_core
opencv_highgui
opencv_calib3d
opencv_xfeatures2d
opencv_features2d
opencv_flann
opencv_videoio
opencv_imgproc
opencv_imgcodecs
)


add_executable(test01 src/test01.cpp src/SURF.cpp src/Frame.cpp src/AsusProLiveOpenNI2.cpp)
target_link_libraries(test01 ${catkin_LIBRARIES} SURF)

#add_executable(TestFly1 src/TestFly1.cpp)
#target_link_libraries(TestFly1 ${catkin_LIBRARIES} SURF)

add_executable(TestFly3 src/TestFly3.cpp)
target_link_libraries(TestFly3 ${catkin_LIBRARIES} SURF)

