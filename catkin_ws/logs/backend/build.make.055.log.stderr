
/usr/include/boost/system/error_code.hpp:189: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/error_code.hpp:189: note: === vect_analyze_data_refs ===

/usr/include/boost/system/error_code.hpp:189: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/system/error_code.hpp:189: note: vectype: vector(2) long unsigned int
/usr/include/boost/system/error_code.hpp:189: note: === vect_pattern_recog ===
/usr/include/boost/system/error_code.hpp:189: note: === vect_analyze_dependences ===
/usr/include/boost/system/error_code.hpp:189: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/system/error_code.hpp:189: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/error_code.hpp:189: note: can't force alignment of ref: this_2(D)->_vptr.error_category
/usr/include/boost/system/error_code.hpp:189: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/system/error_code.hpp:189: note: not consecutive access this_2(D)->_vptr.error_category = &MEM[(void *)&_ZTVN5boost6system14error_categoryE + 16B];

/usr/include/boost/system/error_code.hpp:189: note: === vect_analyze_slp ===
/usr/include/boost/system/error_code.hpp:189: note: Failed to SLP the basic block.
/usr/include/boost/system/error_code.hpp:189: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/system/error_code.hpp:495: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/error_code.hpp:495: note: === vect_analyze_data_refs ===

/usr/include/boost/system/error_code.hpp:495: note: get vectype with 4 units of type int
/usr/include/boost/system/error_code.hpp:495: note: vectype: vector(4) int
/usr/include/boost/system/error_code.hpp:495: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/system/error_code.hpp:495: note: vectype: vector(2) long unsigned int
/usr/include/boost/system/error_code.hpp:495: note: === vect_pattern_recog ===
/usr/include/boost/system/error_code.hpp:495: note: === vect_analyze_dependences ===
/usr/include/boost/system/error_code.hpp:495: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/system/error_code.hpp:495: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/error_code.hpp:495: note: force alignment of MEM[(struct error_condition *)&D.1054934]
/usr/include/boost/system/error_code.hpp:495: note: misalign = 0 bytes of ref MEM[(struct error_condition *)&D.1054934]
/usr/include/boost/system/error_code.hpp:495: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/error_code.hpp:495: note: misalign = 8 bytes of ref MEM[(struct error_condition *)&D.1054934 + 8B]
/usr/include/boost/system/error_code.hpp:495: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/system/error_code.hpp:495: note: not consecutive access MEM[(struct error_condition *)&D.1054934] = ev_2(D);

/usr/include/boost/system/error_code.hpp:495: note: not consecutive access MEM[(struct error_condition *)&D.1054934 + 8B] = this_3(D);

/usr/include/boost/system/error_code.hpp:495: note: === vect_analyze_slp ===
/usr/include/boost/system/error_code.hpp:495: note: Failed to SLP the basic block.
/usr/include/boost/system/error_code.hpp:495: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/system/error_code.hpp:501: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/error_code.hpp:501: note: === vect_analyze_data_refs ===

/usr/include/boost/system/error_code.hpp:501: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/system/error_code.hpp:501: note: vectype: vector(2) long unsigned int
/usr/include/boost/system/error_code.hpp:501: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/system/error_code.hpp:501: note: vectype: vector(2) long unsigned int
/usr/include/boost/system/error_code.hpp:501: note: === vect_pattern_recog ===
/usr/include/boost/system/error_code.hpp:501: note: === vect_analyze_dependences ===
/usr/include/boost/system/error_code.hpp:501: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/system/error_code.hpp:501: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/error_code.hpp:501: note: can't force alignment of ref: this_2(D)->_vptr.error_category
/usr/include/boost/system/error_code.hpp:501: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/error_code.hpp:501: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_3 + 32B]
/usr/include/boost/system/error_code.hpp:501: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/system/error_code.hpp:501: note: not consecutive access _3 = this_2(D)->_vptr.error_category;

/usr/include/boost/system/error_code.hpp:501: note: not consecutive access _4 = MEM[(int (*__vtbl_ptr_type) () *)_3 + 32B];

/usr/include/boost/system/error_code.hpp:501: note: === vect_analyze_slp ===
/usr/include/boost/system/error_code.hpp:501: note: Failed to SLP the basic block.
/usr/include/boost/system/error_code.hpp:501: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/system/error_code.hpp:292: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/error_code.hpp:292: note: === vect_analyze_data_refs ===

/usr/include/boost/system/error_code.hpp:292: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/system/error_code.hpp:498: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/error_code.hpp:498: note: === vect_analyze_data_refs ===

/usr/include/boost/system/error_code.hpp:498: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/system/error_code.hpp:501: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/error_code.hpp:501: note: === vect_analyze_data_refs ===

/usr/include/boost/system/error_code.hpp:501: note: not vectorized: no vectype for stmt: D.112618 ={v} {CLOBBER};
 scalar_type: struct error_condition
/usr/include/boost/system/error_code.hpp:501: note: === vect_pattern_recog ===
/usr/include/boost/system/error_code.hpp:501: note: === vect_analyze_dependences ===
/usr/include/boost/system/error_code.hpp:501: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/system/error_code.hpp:501: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/system/error_code.hpp:501: note: === vect_analyze_slp ===
/usr/include/boost/system/error_code.hpp:501: note: Failed to SLP the basic block.
/usr/include/boost/system/error_code.hpp:501: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/system/error_code.hpp:504: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/error_code.hpp:504: note: === vect_analyze_data_refs ===

/usr/include/boost/system/error_code.hpp:504: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/system/error_code.hpp:504: note: vectype: vector(2) long unsigned int
/usr/include/boost/system/error_code.hpp:504: note: === vect_pattern_recog ===
/usr/include/boost/system/error_code.hpp:504: note: === vect_analyze_dependences ===
/usr/include/boost/system/error_code.hpp:504: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/system/error_code.hpp:504: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/error_code.hpp:504: note: can't force alignment of ref: MEM[(const struct error_code *)code_3(D) + 8B]
/usr/include/boost/system/error_code.hpp:504: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/system/error_code.hpp:504: note: not consecutive access _4 = MEM[(const struct error_code *)code_3(D) + 8B];

/usr/include/boost/system/error_code.hpp:504: note: === vect_analyze_slp ===
/usr/include/boost/system/error_code.hpp:504: note: Failed to SLP the basic block.
/usr/include/boost/system/error_code.hpp:504: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/system/error_code.hpp:504: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/error_code.hpp:504: note: === vect_analyze_data_refs ===

/usr/include/boost/system/error_code.hpp:504: note: get vectype with 4 units of type const int
/usr/include/boost/system/error_code.hpp:504: note: vectype: const vector(4) int
/usr/include/boost/system/error_code.hpp:504: note: === vect_pattern_recog ===
/usr/include/boost/system/error_code.hpp:504: note: === vect_analyze_dependences ===
/usr/include/boost/system/error_code.hpp:504: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/system/error_code.hpp:504: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/error_code.hpp:504: note: can't force alignment of ref: MEM[(const struct error_code *)code_3(D)]
/usr/include/boost/system/error_code.hpp:504: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/system/error_code.hpp:504: note: not consecutive access _6 = MEM[(const struct error_code *)code_3(D)];

/usr/include/boost/system/error_code.hpp:504: note: === vect_analyze_slp ===
/usr/include/boost/system/error_code.hpp:504: note: Failed to SLP the basic block.
/usr/include/boost/system/error_code.hpp:504: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/system/error_code.hpp:504: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/error_code.hpp:504: note: === vect_analyze_data_refs ===

/usr/include/boost/system/error_code.hpp:504: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/system/error_code.hpp:507: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/error_code.hpp:507: note: === vect_analyze_data_refs ===

/usr/include/boost/system/error_code.hpp:507: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: this_2(D)->_vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access this_2(D)->_vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: vect_compute_data_ref_alignment:
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: can't force alignment of ref: this_2(D)->_vptr.sp_counted_base
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: not consecutive access this_2(D)->_vptr.sp_counted_base = &MEM[(void *)&_ZTVN5boost6detail15sp_counted_baseE + 16B];

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: === vect_analyze_slp ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: Failed to SLP the basic block.
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: vect_compute_data_ref_alignment:
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: can't force alignment of ref: this_2(D)->_vptr.sp_counted_base
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: vect_compute_data_ref_alignment:
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_4 + 8B]
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: not consecutive access _4 = this_2(D)->_vptr.sp_counted_base;

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: not consecutive access _5 = MEM[(int (*__vtbl_ptr_type) () *)_4 + 8B];

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: === vect_analyze_slp ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: Failed to SLP the basic block.
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:126: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:127: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:127: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:127: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:36: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:36: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:36: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:68: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:68: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:68: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:98: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:98: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:98: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: can't determine dependence between this_2(D)->D.825861._vptr.sp_counted_base and MEM[(struct sp_counted_base *)this_2(D)]._vptr.sp_counted_base
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: can't determine dependence between this_2(D)->D.825805._vptr.sp_counted_base and MEM[(struct sp_counted_base *)this_2(D)]._vptr.sp_counted_base
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/asio/impl/error.ipp:93: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:93: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:93: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/impl/error.ipp:93: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/impl/error.ipp:93: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/impl/error.ipp:93: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/impl/error.ipp:93: note: === vect_pattern_recog ===
/usr/include/boost/asio/impl/error.ipp:93: note: === vect_analyze_dependences ===
/usr/include/boost/asio/impl/error.ipp:93: note: can't determine dependence between this_2(D)->D.286019._vptr.error_category and MEM[(struct error_category *)this_2(D)]._vptr.error_category
/usr/include/boost/asio/impl/error.ipp:93: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/asio/impl/error.ipp:63: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:63: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:63: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/impl/error.ipp:63: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/impl/error.ipp:63: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/impl/error.ipp:63: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/impl/error.ipp:63: note: === vect_pattern_recog ===
/usr/include/boost/asio/impl/error.ipp:63: note: === vect_analyze_dependences ===
/usr/include/boost/asio/impl/error.ipp:63: note: can't determine dependence between this_2(D)->D.285952._vptr.error_category and MEM[(struct error_category *)this_2(D)]._vptr.error_category
/usr/include/boost/asio/impl/error.ipp:63: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/asio/impl/error.ipp:31: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:31: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:31: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/impl/error.ipp:31: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/impl/error.ipp:31: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/impl/error.ipp:31: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/impl/error.ipp:31: note: === vect_pattern_recog ===
/usr/include/boost/asio/impl/error.ipp:31: note: === vect_analyze_dependences ===
/usr/include/boost/asio/impl/error.ipp:31: note: can't determine dependence between this_2(D)->D.285871._vptr.error_category and MEM[(struct error_category *)this_2(D)]._vptr.error_category
/usr/include/boost/asio/impl/error.ipp:31: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/asio/detail/tss_ptr.hpp:39: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/detail/tss_ptr.hpp:39: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/detail/tss_ptr.hpp:39: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/io_service.hpp:741: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/io_service.hpp:741: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/io_service.hpp:741: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/io_service.hpp:741: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/io_service.hpp:741: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/io_service.hpp:741: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/detail/tss_ptr.hpp:39: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/detail/tss_ptr.hpp:39: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/detail/tss_ptr.hpp:39: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/io_service.hpp:741: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/io_service.hpp:741: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/io_service.hpp:741: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: vect_compute_data_ref_alignment:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: can't force alignment of ref: this_2(D)->px_
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: not consecutive access _3 = this_2(D)->px_;

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: === vect_analyze_slp ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: Failed to SLP the basic block.
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/checked_delete.hpp:34: note: ===vect_slp_analyze_bb===

/usr/include/boost/checked_delete.hpp:34: note: === vect_analyze_data_refs ===

/usr/include/boost/checked_delete.hpp:34: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/checked_delete.hpp:34: note: vectype: vector(2) long unsigned int
/usr/include/boost/checked_delete.hpp:34: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/checked_delete.hpp:34: note: vectype: vector(2) long unsigned int
/usr/include/boost/checked_delete.hpp:34: note: === vect_pattern_recog ===
/usr/include/boost/checked_delete.hpp:34: note: === vect_analyze_dependences ===
/usr/include/boost/checked_delete.hpp:34: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/checked_delete.hpp:34: note: vect_compute_data_ref_alignment:
/usr/include/boost/checked_delete.hpp:34: note: can't force alignment of ref: _3->D.700734.D.202397._vptr.exception
/usr/include/boost/checked_delete.hpp:34: note: vect_compute_data_ref_alignment:
/usr/include/boost/checked_delete.hpp:34: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B]
/usr/include/boost/checked_delete.hpp:34: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/checked_delete.hpp:34: note: not consecutive access _5 = _3->D.700734.D.202397._vptr.exception;

/usr/include/boost/checked_delete.hpp:34: note: not consecutive access _6 = MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B];

/usr/include/boost/checked_delete.hpp:34: note: === vect_analyze_slp ===
/usr/include/boost/checked_delete.hpp:34: note: Failed to SLP the basic block.
/usr/include/boost/checked_delete.hpp:34: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:79: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:79: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:79: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:83: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:83: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:83: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:88: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:88: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:88: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: vect_compute_data_ref_alignment:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: can't force alignment of ref: this_2(D)->px_
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: not consecutive access _3 = this_2(D)->px_;

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: === vect_analyze_slp ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: Failed to SLP the basic block.
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:78: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/checked_delete.hpp:34: note: ===vect_slp_analyze_bb===

/usr/include/boost/checked_delete.hpp:34: note: === vect_analyze_data_refs ===

/usr/include/boost/checked_delete.hpp:34: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/checked_delete.hpp:34: note: vectype: vector(2) long unsigned int
/usr/include/boost/checked_delete.hpp:34: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/checked_delete.hpp:34: note: vectype: vector(2) long unsigned int
/usr/include/boost/checked_delete.hpp:34: note: === vect_pattern_recog ===
/usr/include/boost/checked_delete.hpp:34: note: === vect_analyze_dependences ===
/usr/include/boost/checked_delete.hpp:34: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/checked_delete.hpp:34: note: vect_compute_data_ref_alignment:
/usr/include/boost/checked_delete.hpp:34: note: can't force alignment of ref: _3->D.700536.D.202345._vptr.exception
/usr/include/boost/checked_delete.hpp:34: note: vect_compute_data_ref_alignment:
/usr/include/boost/checked_delete.hpp:34: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B]
/usr/include/boost/checked_delete.hpp:34: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/checked_delete.hpp:34: note: not consecutive access _5 = _3->D.700536.D.202345._vptr.exception;

/usr/include/boost/checked_delete.hpp:34: note: not consecutive access _6 = MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B];

/usr/include/boost/checked_delete.hpp:34: note: === vect_analyze_slp ===
/usr/include/boost/checked_delete.hpp:34: note: Failed to SLP the basic block.
/usr/include/boost/checked_delete.hpp:34: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:79: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:79: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:79: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:83: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:83: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:83: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:88: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:88: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:88: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/system/error_code.hpp:189: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/error_code.hpp:189: note: === vect_analyze_data_refs ===

/usr/include/boost/system/error_code.hpp:189: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/system/error_code.hpp:189: note: vectype: vector(2) long unsigned int
/usr/include/boost/system/error_code.hpp:189: note: === vect_pattern_recog ===
/usr/include/boost/system/error_code.hpp:189: note: === vect_analyze_dependences ===
/usr/include/boost/system/error_code.hpp:189: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/system/error_code.hpp:189: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/error_code.hpp:189: note: can't force alignment of ref: this_2(D)->_vptr.error_category
/usr/include/boost/system/error_code.hpp:189: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/system/error_code.hpp:189: note: not consecutive access this_2(D)->_vptr.error_category = &MEM[(void *)&_ZTVN5boost6system14error_categoryE + 16B];

/usr/include/boost/system/error_code.hpp:189: note: === vect_analyze_slp ===
/usr/include/boost/system/error_code.hpp:189: note: Failed to SLP the basic block.
/usr/include/boost/system/error_code.hpp:189: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: this_2(D)->_vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access this_2(D)->_vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: vect_compute_data_ref_alignment:
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: can't force alignment of ref: this_2(D)->_vptr.sp_counted_base
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: not consecutive access this_2(D)->_vptr.sp_counted_base = &MEM[(void *)&_ZTVN5boost6detail15sp_counted_baseE + 16B];

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: === vect_analyze_slp ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: Failed to SLP the basic block.
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:114: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: can't determine dependence between this_2(D)->D.825861._vptr.sp_counted_base and MEM[(struct sp_counted_base *)this_2(D)]._vptr.sp_counted_base
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: can't determine dependence between this_2(D)->D.825805._vptr.sp_counted_base and MEM[(struct sp_counted_base *)this_2(D)]._vptr.sp_counted_base
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/asio/impl/error.ipp:93: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:93: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:93: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/impl/error.ipp:93: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/impl/error.ipp:93: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/impl/error.ipp:93: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/impl/error.ipp:93: note: === vect_pattern_recog ===
/usr/include/boost/asio/impl/error.ipp:93: note: === vect_analyze_dependences ===
/usr/include/boost/asio/impl/error.ipp:93: note: can't determine dependence between this_2(D)->D.286019._vptr.error_category and MEM[(struct error_category *)this_2(D)]._vptr.error_category
/usr/include/boost/asio/impl/error.ipp:93: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/asio/impl/error.ipp:63: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:63: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:63: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/impl/error.ipp:63: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/impl/error.ipp:63: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/impl/error.ipp:63: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/impl/error.ipp:63: note: === vect_pattern_recog ===
/usr/include/boost/asio/impl/error.ipp:63: note: === vect_analyze_dependences ===
/usr/include/boost/asio/impl/error.ipp:63: note: can't determine dependence between this_2(D)->D.285952._vptr.error_category and MEM[(struct error_category *)this_2(D)]._vptr.error_category
/usr/include/boost/asio/impl/error.ipp:63: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/asio/impl/error.ipp:31: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:31: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:31: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/impl/error.ipp:31: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/impl/error.ipp:31: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/impl/error.ipp:31: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/impl/error.ipp:31: note: === vect_pattern_recog ===
/usr/include/boost/asio/impl/error.ipp:31: note: === vect_analyze_dependences ===
/usr/include/boost/asio/impl/error.ipp:31: note: can't determine dependence between this_2(D)->D.285871._vptr.error_category and MEM[(struct error_category *)this_2(D)]._vptr.error_category
/usr/include/boost/asio/impl/error.ipp:31: note: not vectorized: unhandled data dependence in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type size_type
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: can't force alignment of ref: MEM[(const struct basic_string *)this_6(D) + 32B]._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: can't force alignment of ref: MEM[(struct _Rep *)_27 + -24B].D.20112._M_length
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _27 = MEM[(const struct basic_string *)this_6(D) + 32B]._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _28 = MEM[(struct _Rep *)_27 + -24B].D.20112._M_length;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/system/system_error.hpp:68: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:68: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:68: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type size_type
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: can't force alignment of ref: MEM[(const struct basic_string *)this_6(D) + 32B]._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: can't force alignment of ref: MEM[(struct _Rep *)_29 + -24B].D.20112._M_length
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _29 = MEM[(const struct basic_string *)this_6(D) + 32B]._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _30 = MEM[(struct _Rep *)_29 + -24B].D.20112._M_length;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/system/error_code.hpp:358: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/error_code.hpp:358: note: === vect_analyze_data_refs ===

/usr/include/boost/system/error_code.hpp:358: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/system/error_code.hpp:358: note: vectype: vector(2) long unsigned int
/usr/include/boost/system/error_code.hpp:358: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/system/error_code.hpp:358: note: vectype: vector(2) long unsigned int
/usr/include/boost/system/error_code.hpp:358: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/system/error_code.hpp:358: note: vectype: vector(2) long unsigned int
/usr/include/boost/system/error_code.hpp:358: note: get vectype with 4 units of type const int
/usr/include/boost/system/error_code.hpp:358: note: vectype: const vector(4) int
/usr/include/boost/system/error_code.hpp:358: note: === vect_pattern_recog ===
/usr/include/boost/system/error_code.hpp:358: note: === vect_analyze_dependences ===
/usr/include/boost/system/error_code.hpp:358: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/system/error_code.hpp:358: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/error_code.hpp:358: note: can't force alignment of ref: MEM[(const struct error_code *)this_6(D) + 16B].m_cat
/usr/include/boost/system/error_code.hpp:358: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/error_code.hpp:358: note: can't force alignment of ref: _31->_vptr.error_category
/usr/include/boost/system/error_code.hpp:358: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/error_code.hpp:358: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_32 + 24B]
/usr/include/boost/system/error_code.hpp:358: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/error_code.hpp:358: note: can't force alignment of ref: MEM[(const struct error_code *)this_6(D) + 16B]
/usr/include/boost/system/error_code.hpp:358: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/system/error_code.hpp:358: note: not consecutive access _31 = MEM[(const struct error_code *)this_6(D) + 16B].m_cat;

/usr/include/boost/system/error_code.hpp:358: note: not consecutive access _32 = _31->_vptr.error_category;

/usr/include/boost/system/error_code.hpp:358: note: not consecutive access _33 = MEM[(int (*__vtbl_ptr_type) () *)_32 + 24B];

/usr/include/boost/system/error_code.hpp:358: note: not consecutive access _34 = MEM[(const struct error_code *)this_6(D) + 16B];

/usr/include/boost/system/error_code.hpp:358: note: === vect_analyze_slp ===
/usr/include/boost/system/error_code.hpp:358: note: Failed to SLP the basic block.
/usr/include/boost/system/error_code.hpp:358: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/c++/4.8/bits/basic_string.h:1009: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:1009: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:1009: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/system/system_error.hpp:59: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:59: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:59: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/system/system_error.hpp:59: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:59: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:59: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:933: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:933: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:933: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: misalign = 0 bytes of ref D.112797._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _35 = D.112797._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/system/system_error.hpp:59: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:59: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:59: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/system/system_error.hpp:59: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:59: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:59: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: misalign = 0 bytes of ref D.112797._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _38 = D.112797._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/system/system_error.hpp:59: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:59: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:59: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/system/system_error.hpp:59: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:59: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:59: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/system/system_error.hpp:73: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:73: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:73: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/system/system_error.hpp:59: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:59: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:59: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/system/system_error.hpp:59: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:59: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:59: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/system/system_error.hpp:59: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:59: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:59: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:41: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:41: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:41: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:42: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:42: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:42: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:43: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:43: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:43: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:44: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:44: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:44: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:45: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:45: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:45: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:46: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:46: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:46: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:47: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:47: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:47: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:48: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:48: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:48: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:49: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:49: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:49: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:39: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:39: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:39: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:73: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:73: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:73: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:74: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:74: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:75: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:75: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:75: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:76: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:76: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:76: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:77: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:77: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:77: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:71: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:71: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:71: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:103: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:103: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:103: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:104: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:104: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:104: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:105: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:105: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:105: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:106: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:106: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:106: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:107: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:107: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:107: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:108: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:108: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:108: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:109: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:109: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:109: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:110: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:110: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:110: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:111: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:111: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:111: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:101: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:101: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:101: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: can't force alignment of ref: this_2(D)->D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: not consecutive access this_2(D)->D.133507.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian16bad_day_of_monthE + 16B];

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: can't force alignment of ref: this_2(D)->D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: not consecutive access this_2(D)->D.133507.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian16bad_day_of_monthE + 16B];

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: can't force alignment of ref: this_2(D)->D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: not consecutive access this_2(D)->D.136409.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian9bad_monthE + 16B];

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: can't force alignment of ref: this_2(D)->D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: not consecutive access this_2(D)->D.136409.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian9bad_monthE + 16B];

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: can't force alignment of ref: this_2(D)->D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: not consecutive access this_2(D)->D.133659.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian8bad_yearE + 16B];

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: can't force alignment of ref: this_2(D)->D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: not consecutive access this_2(D)->D.133659.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian8bad_yearE + 16B];

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/c++/4.8/ostream:533: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:533: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:533: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/ostream:533: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/ostream:533: note: get vectype with 2 units of type long int
/usr/include/c++/4.8/ostream:533: note: vectype: vector(2) long int
/usr/include/c++/4.8/ostream:533: note: get vectype with 4 units of type signed int
/usr/include/c++/4.8/ostream:533: note: vectype: vector(4) signed int
/usr/include/c++/4.8/ostream:533: note: === vect_pattern_recog ===
/usr/include/c++/4.8/ostream:533: note: vect_is_simple_use: operand _6
/usr/include/c++/4.8/ostream:533: note: def_stmt: _6 = MEM[(const struct basic_ios *)_5 + 32B];

/usr/include/c++/4.8/ostream:533: note: type of def: 3.
/usr/include/c++/4.8/ostream:533: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/ostream:533: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/ostream:533: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/ostream:533: note: can't force alignment of ref: __out_1(D)->_vptr.basic_ostream
/usr/include/c++/4.8/ostream:533: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/ostream:533: note: can't force alignment of ref: MEM[(long int *)_2 + -24B]
/usr/include/c++/4.8/ostream:533: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/ostream:533: note: can't force alignment of ref: MEM[(const struct basic_ios *)_5 + 32B]
/usr/include/c++/4.8/ostream:533: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/ostream:533: note: not consecutive access _2 = __out_1(D)->_vptr.basic_ostream;

/usr/include/c++/4.8/ostream:533: note: not consecutive access _3 = MEM[(long int *)_2 + -24B];

/usr/include/c++/4.8/ostream:533: note: not consecutive access _6 = MEM[(const struct basic_ios *)_5 + 32B];

/usr/include/c++/4.8/ostream:533: note: === vect_analyze_slp ===
/usr/include/c++/4.8/ostream:533: note: Failed to SLP the basic block.
/usr/include/c++/4.8/ostream:533: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:621: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:621: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:621: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:605: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:605: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:605: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:234: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:234: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:234: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:234: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:234: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:234: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:249: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:249: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:249: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:232: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:232: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:232: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/CommaInitializer.h:54: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/CommaInitializer.h:54: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/CommaInitializer.h:54: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ext/string_conversions.h:90: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ext/string_conversions.h:90: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ext/string_conversions.h:90: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:354: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:354: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:354: note: get vectype with 16 units of type const char_type
/usr/include/c++/4.8/bits/basic_string.h:354: note: vectype: const vector(16) char
/usr/include/c++/4.8/bits/basic_string.h:354: note: get vectype with 16 units of type char_type
/usr/include/c++/4.8/bits/basic_string.h:354: note: vectype: vector(16) char
/usr/include/c++/4.8/bits/basic_string.h:354: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:354: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:354: note: can't determine dependence between MEM[(const char_type &)__s_2] and MEM[(char_type &)__r_24 + 24]
/usr/include/c++/4.8/bits/basic_string.h:354: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:354: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:354: note: misalign = 0 bytes of ref MEM[(const char_type &)__s_2]
/usr/include/c++/4.8/bits/basic_string.h:354: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:354: note: can't force alignment of ref: MEM[(char_type &)__r_24 + 24]
/usr/include/c++/4.8/bits/basic_string.h:354: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:354: note: not consecutive access _26 = MEM[(const char_type &)__s_2];

/usr/include/c++/4.8/bits/basic_string.h:354: note: not consecutive access MEM[(char_type &)__r_24 + 24] = _26;

/usr/include/c++/4.8/bits/basic_string.h:354: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:354: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:354: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/c++/4.8/bits/char_traits.h:271: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/char_traits.h:271: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/char_traits.h:271: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:210: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:210: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:210: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:204: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:204: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:204: note: get vectype with 4 units of type _Atomic_word
/usr/include/c++/4.8/bits/basic_string.h:204: note: vectype: vector(4) int
/usr/include/c++/4.8/bits/basic_string.h:204: note: get vectype with 2 units of type size_type
/usr/include/c++/4.8/bits/basic_string.h:204: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:204: note: get vectype with 16 units of type char_type
/usr/include/c++/4.8/bits/basic_string.h:204: note: vectype: vector(16) char
/usr/include/c++/4.8/bits/basic_string.h:204: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:204: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:204: note: can't determine dependence between MEM[(_Atomic_word *)__r_24 + 16B] and MEM[(char_type &)_30]
/usr/include/c++/4.8/bits/basic_string.h:204: note: not vectorized: unhandled data dependence in basic block.

/usr/include/c++/4.8/bits/basic_string.h:275: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:275: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:275: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:275: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:275: note: not vectorized: no vectype for stmt: D.1129114 ={v} {CLOBBER};
 scalar_type: struct allocator
/usr/include/c++/4.8/bits/basic_string.h:275: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:275: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:275: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:275: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:275: note: can't force alignment of ref: MEM[(struct _Alloc_hider *)_1(D)]._M_p
/usr/include/c++/4.8/bits/basic_string.h:275: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:275: note: not consecutive access MEM[(struct _Alloc_hider *)_1(D)]._M_p = _31;

/usr/include/c++/4.8/bits/basic_string.h:275: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:275: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:275: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/c++/4.8/bits/stl_iterator_base_funcs.h:96: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/stl_iterator_base_funcs.h:96: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/stl_iterator_base_funcs.h:96: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:532: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:532: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:532: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:533: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:533: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:533: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/ostream:533: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/ostream:533: note: get vectype with 2 units of type long int
/usr/include/c++/4.8/ostream:533: note: vectype: vector(2) long int
/usr/include/c++/4.8/ostream:533: note: get vectype with 4 units of type signed int
/usr/include/c++/4.8/ostream:533: note: vectype: vector(4) signed int
/usr/include/c++/4.8/ostream:533: note: === vect_pattern_recog ===
/usr/include/c++/4.8/ostream:533: note: vect_is_simple_use: operand _12
/usr/include/c++/4.8/ostream:533: note: def_stmt: _12 = MEM[(const struct basic_ios *)_11 + 32B];

/usr/include/c++/4.8/ostream:533: note: type of def: 3.
/usr/include/c++/4.8/ostream:533: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/ostream:533: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/ostream:533: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/ostream:533: note: can't force alignment of ref: cout._vptr.basic_ostream
/usr/include/c++/4.8/ostream:533: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/ostream:533: note: can't force alignment of ref: MEM[(long int *)_8 + -24B]
/usr/include/c++/4.8/ostream:533: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/ostream:533: note: can't force alignment of ref: MEM[(const struct basic_ios *)_11 + 32B]
/usr/include/c++/4.8/ostream:533: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/ostream:533: note: not consecutive access _8 = cout._vptr.basic_ostream;

/usr/include/c++/4.8/ostream:533: note: not consecutive access _9 = MEM[(long int *)_8 + -24B];

/usr/include/c++/4.8/ostream:533: note: not consecutive access _12 = MEM[(const struct basic_ios *)_11 + 32B];

/usr/include/c++/4.8/ostream:533: note: === vect_analyze_slp ===
/usr/include/c++/4.8/ostream:533: note: Failed to SLP the basic block.
/usr/include/c++/4.8/ostream:533: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/c++/4.8/bits/char_traits.h:259: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/char_traits.h:259: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/char_traits.h:259: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:537: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:537: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:537: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/system/system_error.hpp:47: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:47: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:47: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/system/system_error.hpp:47: note: vectype: vector(2) long unsigned int
/usr/include/boost/system/system_error.hpp:47: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/system/system_error.hpp:47: note: vectype: vector(2) long unsigned int
/usr/include/boost/system/system_error.hpp:47: note: === vect_pattern_recog ===
/usr/include/boost/system/system_error.hpp:47: note: === vect_analyze_dependences ===
/usr/include/boost/system/system_error.hpp:47: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/system/system_error.hpp:47: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/system_error.hpp:47: note: can't force alignment of ref: this_2(D)->D.112731.D.51926._vptr.exception
/usr/include/boost/system/system_error.hpp:47: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/system_error.hpp:47: note: can't force alignment of ref: MEM[(const struct basic_string *)this_2(D) + 32B]._M_dataplus._M_p
/usr/include/boost/system/system_error.hpp:47: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/system/system_error.hpp:47: note: not consecutive access this_2(D)->D.112731.D.51926._vptr.exception = &MEM[(void *)&_ZTVN5boost6system12system_errorE + 16B];

/usr/include/boost/system/system_error.hpp:47: note: not consecutive access _7 = MEM[(const struct basic_string *)this_2(D) + 32B]._M_dataplus._M_p;

/usr/include/boost/system/system_error.hpp:47: note: === vect_analyze_slp ===
/usr/include/boost/system/system_error.hpp:47: note: Failed to SLP the basic block.
/usr/include/boost/system/system_error.hpp:47: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/system/system_error.hpp:47: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:47: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:47: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:246: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:246: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:246: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ext/atomicity.h:49: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ext/atomicity.h:49: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ext/atomicity.h:49: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ext/atomicity.h:67: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ext/atomicity.h:67: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ext/atomicity.h:67: note: get vectype with 4 units of type _Atomic_word
/usr/include/c++/4.8/ext/atomicity.h:67: note: vectype: vector(4) int
/usr/include/c++/4.8/ext/atomicity.h:67: note: get vectype with 4 units of type _Atomic_word
/usr/include/c++/4.8/ext/atomicity.h:67: note: vectype: vector(4) int
/usr/include/c++/4.8/ext/atomicity.h:67: note: === vect_pattern_recog ===
/usr/include/c++/4.8/ext/atomicity.h:67: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/ext/atomicity.h:67: note: determined dependence between MEM[(_Atomic_word *)_7 + -8B] and MEM[(_Atomic_word *)_7 + -8B]
/usr/include/c++/4.8/ext/atomicity.h:67: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/ext/atomicity.h:67: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/ext/atomicity.h:67: note: can't force alignment of ref: MEM[(_Atomic_word *)_7 + -8B]
/usr/include/c++/4.8/ext/atomicity.h:67: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/ext/atomicity.h:67: note: can't force alignment of ref: MEM[(_Atomic_word *)_7 + -8B]
/usr/include/c++/4.8/ext/atomicity.h:67: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/ext/atomicity.h:67: note: not consecutive access __result_17 = MEM[(_Atomic_word *)_7 + -8B];

/usr/include/c++/4.8/ext/atomicity.h:67: note: not consecutive access MEM[(_Atomic_word *)_7 + -8B] = _18;

/usr/include/c++/4.8/ext/atomicity.h:67: note: === vect_analyze_slp ===
/usr/include/c++/4.8/ext/atomicity.h:67: note: Failed to SLP the basic block.
/usr/include/c++/4.8/ext/atomicity.h:67: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/c++/4.8/bits/basic_string.h:245: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:245: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:245: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:249: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:249: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:249: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:539: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:539: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:539: note: not vectorized: no vectype for stmt: D.1092264 ={v} {CLOBBER};
 scalar_type: struct allocator_type
/usr/include/c++/4.8/bits/basic_string.h:539: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:539: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:539: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:539: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:539: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:539: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:539: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/system/system_error.hpp:47: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:47: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:47: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/system/system_error.hpp:47: note: vectype: vector(2) long unsigned int
/usr/include/boost/system/system_error.hpp:47: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/system/system_error.hpp:47: note: vectype: vector(2) long unsigned int
/usr/include/boost/system/system_error.hpp:47: note: === vect_pattern_recog ===
/usr/include/boost/system/system_error.hpp:47: note: === vect_analyze_dependences ===
/usr/include/boost/system/system_error.hpp:47: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/system/system_error.hpp:47: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/system_error.hpp:47: note: can't force alignment of ref: this_2(D)->D.112731.D.51926._vptr.exception
/usr/include/boost/system/system_error.hpp:47: note: vect_compute_data_ref_alignment:
/usr/include/boost/system/system_error.hpp:47: note: can't force alignment of ref: MEM[(const struct basic_string *)this_2(D) + 32B]._M_dataplus._M_p
/usr/include/boost/system/system_error.hpp:47: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/system/system_error.hpp:47: note: not consecutive access this_2(D)->D.112731.D.51926._vptr.exception = &MEM[(void *)&_ZTVN5boost6system12system_errorE + 16B];

/usr/include/boost/system/system_error.hpp:47: note: not consecutive access _5 = MEM[(const struct basic_string *)this_2(D) + 32B]._M_dataplus._M_p;

/usr/include/boost/system/system_error.hpp:47: note: === vect_analyze_slp ===
/usr/include/boost/system/system_error.hpp:47: note: Failed to SLP the basic block.
/usr/include/boost/system/system_error.hpp:47: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/system/system_error.hpp:47: note: ===vect_slp_analyze_bb===

/usr/include/boost/system/system_error.hpp:47: note: === vect_analyze_data_refs ===

/usr/include/boost/system/system_error.hpp:47: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:246: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:246: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:246: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ext/atomicity.h:49: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ext/atomicity.h:49: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ext/atomicity.h:49: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ext/atomicity.h:67: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ext/atomicity.h:67: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ext/atomicity.h:67: note: get vectype with 4 units of type _Atomic_word
/usr/include/c++/4.8/ext/atomicity.h:67: note: vectype: vector(4) int
/usr/include/c++/4.8/ext/atomicity.h:67: note: get vectype with 4 units of type _Atomic_word
/usr/include/c++/4.8/ext/atomicity.h:67: note: vectype: vector(4) int
/usr/include/c++/4.8/ext/atomicity.h:67: note: === vect_pattern_recog ===
/usr/include/c++/4.8/ext/atomicity.h:67: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/ext/atomicity.h:67: note: determined dependence between MEM[(_Atomic_word *)_5 + -8B] and MEM[(_Atomic_word *)_5 + -8B]
/usr/include/c++/4.8/ext/atomicity.h:67: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/ext/atomicity.h:67: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/ext/atomicity.h:67: note: can't force alignment of ref: MEM[(_Atomic_word *)_5 + -8B]
/usr/include/c++/4.8/ext/atomicity.h:67: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/ext/atomicity.h:67: note: can't force alignment of ref: MEM[(_Atomic_word *)_5 + -8B]
/usr/include/c++/4.8/ext/atomicity.h:67: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/ext/atomicity.h:67: note: not consecutive access __result_14 = MEM[(_Atomic_word *)_5 + -8B];

/usr/include/c++/4.8/ext/atomicity.h:67: note: not consecutive access MEM[(_Atomic_word *)_5 + -8B] = _15;

/usr/include/c++/4.8/ext/atomicity.h:67: note: === vect_analyze_slp ===
/usr/include/c++/4.8/ext/atomicity.h:67: note: Failed to SLP the basic block.
/usr/include/c++/4.8/ext/atomicity.h:67: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/c++/4.8/bits/basic_string.h:245: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:245: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:245: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:249: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:249: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:249: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:539: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:539: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:539: note: not vectorized: no vectype for stmt: D.1129446 ={v} {CLOBBER};
 scalar_type: struct allocator_type
/usr/include/c++/4.8/bits/basic_string.h:539: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:539: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:539: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:539: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:539: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:539: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:539: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:466: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:466: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:466: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:55: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:55: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:55: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:100: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: === vect_pattern_recog ===
/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/stdexcept:100: note: can't determine dependence between MEM[(struct out_of_range *)_3].D.51896.D.51787._vptr.exception and MEM[(struct bad_month *)_3].D.136409.D.51896.D.51787._vptr.exception
/usr/include/c++/4.8/stdexcept:100: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(const struct exception &)this_4(D) + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_3].D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_3].D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct clone_impl *)_3].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct clone_impl *)_3].D.823097.D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct error_info_injector *)_3].D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct error_info_injector *)_3].D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct clone_impl *)_3].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct clone_impl *)_3].D.823097.D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct exception *)_3 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct exception *)_3 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_3].D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_3].D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct clone_impl *)_3].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct clone_impl *)_3].D.823097.D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct error_info_injector *)_3].D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct error_info_injector *)_3].D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct clone_impl *)_3].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct clone_impl *)_3].D.823097.D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct exception *)_3 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_3].D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_3].D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct clone_impl *)_3].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct clone_impl *)_3].D.823097.D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct error_info_injector *)_3].D.823030.D.136409.D.51896.D.51787._vptr.exception and MEM[(struct error_info_injector *)_3].D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct error_info_injector *)_3].D.823030.D.136409.D.51896.D.51787._vptr.exception and MEM[(struct clone_impl *)_3].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _18->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_19 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _19 = _18->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _20 = MEM[(int (*__vtbl_ptr_type) () *)_19 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: can't force alignment of ref: MEM[(struct bad_month *)_3].D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: not consecutive access MEM[(struct bad_month *)_3].D.136409.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian9bad_monthE + 16B];

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:464: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:464: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:464: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:464: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:464: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:464: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:466: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:466: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:466: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:466: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:466: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:466: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:55: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:55: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:55: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:100: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: === vect_pattern_recog ===
/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/stdexcept:100: note: can't determine dependence between MEM[(struct out_of_range *)_3].D.51896.D.51787._vptr.exception and MEM[(struct bad_year *)_3].D.133659.D.51896.D.51787._vptr.exception
/usr/include/c++/4.8/stdexcept:100: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(const struct exception &)this_4(D) + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_3].D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_3].D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct clone_impl *)_3].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct clone_impl *)_3].D.822947.D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct error_info_injector *)_3].D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct error_info_injector *)_3].D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct clone_impl *)_3].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct clone_impl *)_3].D.822947.D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct exception *)_3 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct exception *)_3 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_3].D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_3].D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct clone_impl *)_3].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct clone_impl *)_3].D.822947.D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct error_info_injector *)_3].D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct error_info_injector *)_3].D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct clone_impl *)_3].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct clone_impl *)_3].D.822947.D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct exception *)_3 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_3].D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_3].D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct clone_impl *)_3].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct clone_impl *)_3].D.822947.D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct error_info_injector *)_3].D.822880.D.133659.D.51896.D.51787._vptr.exception and MEM[(struct error_info_injector *)_3].D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct error_info_injector *)_3].D.822880.D.133659.D.51896.D.51787._vptr.exception and MEM[(struct clone_impl *)_3].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _18->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_19 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _19 = _18->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _20 = MEM[(int (*__vtbl_ptr_type) () *)_19 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: can't force alignment of ref: MEM[(struct bad_year *)_3].D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: not consecutive access MEM[(struct bad_year *)_3].D.133659.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian8bad_yearE + 16B];

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:464: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:464: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:464: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:464: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:464: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:464: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:466: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:466: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:466: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:466: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:466: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:466: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:55: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:55: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:55: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:100: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: === vect_pattern_recog ===
/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/stdexcept:100: note: can't determine dependence between MEM[(struct out_of_range *)_3].D.51896.D.51787._vptr.exception and MEM[(struct bad_day_of_month *)_3].D.133507.D.51896.D.51787._vptr.exception
/usr/include/c++/4.8/stdexcept:100: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(const struct exception &)this_4(D) + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_3].D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_3].D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct clone_impl *)_3].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct clone_impl *)_3].D.695654.D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct error_info_injector *)_3].D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct error_info_injector *)_3].D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct clone_impl *)_3].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct clone_impl *)_3].D.695654.D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct exception *)_3 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct exception *)_3 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_3].D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_3].D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct clone_impl *)_3].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct clone_impl *)_3].D.695654.D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct error_info_injector *)_3].D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct error_info_injector *)_3].D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct clone_impl *)_3].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct clone_impl *)_3].D.695654.D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct exception *)_3 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_3].D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_3].D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct clone_impl *)_3].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct clone_impl *)_3].D.695654.D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct error_info_injector *)_3].D.695587.D.133507.D.51896.D.51787._vptr.exception and MEM[(struct error_info_injector *)_3].D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct error_info_injector *)_3].D.695587.D.133507.D.51896.D.51787._vptr.exception and MEM[(struct clone_impl *)_3].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _18->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_19 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _19 = _18->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _20 = MEM[(int (*__vtbl_ptr_type) () *)_19 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: can't force alignment of ref: MEM[(struct bad_day_of_month *)_3].D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: not consecutive access MEM[(struct bad_day_of_month *)_3].D.133507.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian16bad_day_of_monthE + 16B];

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:464: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:464: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:464: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:464: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:464: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:464: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:466: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:466: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:466: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:466: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:466: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:466: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:112: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:112: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:112: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B]._vptr.exception and MEM[(struct refcount_ptr *)_3 + 24B].px_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct refcount_ptr &)this_4(D) + 24].px_ and MEM[(struct refcount_ptr *)_3 + 24B].px_
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:208: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:208: note: can't force alignment of ref: MEM[(struct exception *)_3 + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:208: note: can't force alignment of ref: MEM[(const struct refcount_ptr &)this_4(D) + 24].px_
/usr/include/boost/exception/exception.hpp:208: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:208: note: can't force alignment of ref: MEM[(struct refcount_ptr *)_3 + 24B].px_
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving of size 2
/usr/include/boost/exception/exception.hpp:208: note: not consecutive access _18 = MEM[(const struct refcount_ptr &)this_4(D) + 24].px_;

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: Build SLP for MEM[(struct exception *)_3 + 16B]._vptr.exception = &MEM[(void *)&_ZTVN5boost9exceptionE + 16B];

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vect_is_simple_use: operand &MEM[(void *)&_ZTVN5boost9exceptionE + 16B]
/usr/include/boost/exception/exception.hpp:208: note: Build SLP failed: can't find def for &MEM[(void *)&_ZTVN5boost9exceptionE + 16B]
/usr/include/boost/exception/exception.hpp:208: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(const struct exception &)this_4(D) + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_3].D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_3].D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct clone_impl *)_3].D.695067.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct clone_impl *)_3].D.695067.D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_function_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct exception *)_3 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct error_info_injector *)_3].D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct error_info_injector *)_3].D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct clone_impl *)_3].D.695067.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct clone_impl *)_3].D.695067.D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_function_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct exception *)_3 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct exception *)_3 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_3].D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_3].D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct clone_impl *)_3].D.695067.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct clone_impl *)_3].D.695067.D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_file_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct error_info_injector *)_3].D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct error_info_injector *)_3].D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct clone_impl *)_3].D.695067.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct clone_impl *)_3].D.695067.D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_3 + 16B].throw_file_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct exception *)_3 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_3].D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_3].D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct clone_impl *)_3].D.695067.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct clone_impl *)_3].D.695067.D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_4(D) + 16].throw_line_ and MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct error_info_injector *)_3].D.695000.D.51926._vptr.exception and MEM[(struct error_info_injector *)_3].D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct error_info_injector *)_3].D.695000.D.51926._vptr.exception and MEM[(struct clone_impl *)_3].D.695067.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _18->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_19 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _19 = _18->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _20 = MEM[(int (*__vtbl_ptr_type) () *)_19 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:320: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:320: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:320: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:464: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:464: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:464: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:464: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:464: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:464: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_3 + 56B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:466: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:466: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:466: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:144: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:144: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:144: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:142: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:142: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:142: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: vect_compute_data_ref_alignment:
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: can't force alignment of ref: this_2(D)->_vptr.sp_counted_base
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: vect_compute_data_ref_alignment:
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_6 + 16B]
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: not consecutive access _6 = this_2(D)->_vptr.sp_counted_base;

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: not consecutive access _7 = MEM[(int (*__vtbl_ptr_type) () *)_6 + 16B];

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: === vect_analyze_slp ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: Failed to SLP the basic block.
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: vect_compute_data_ref_alignment:
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: can't force alignment of ref: this_2(D)->_vptr.sp_counted_base
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: vect_compute_data_ref_alignment:
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_16 + 24B]
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: not consecutive access _16 = this_2(D)->_vptr.sp_counted_base;

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: not consecutive access _17 = MEM[(int (*__vtbl_ptr_type) () *)_16 + 24B];

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: === vect_analyze_slp ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: Failed to SLP the basic block.
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:160: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:149: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:149: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:149: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: vect_compute_data_ref_alignment:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: can't force alignment of ref: MEM[(struct shared_count *)this_1(D) + 8B].pi_
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not consecutive access _4 = MEM[(struct shared_count *)this_1(D) + 8B].pi_;

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_slp ===
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: Failed to SLP the basic block.
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:38: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:38: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:38: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: vect_compute_data_ref_alignment:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: can't force alignment of ref: MEM[(struct shared_count *)this_1(D) + 168B].pi_
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not consecutive access _14 = MEM[(struct shared_count *)this_1(D) + 168B].pi_;

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_slp ===
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: Failed to SLP the basic block.
/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: get vectype with 2 units of type long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vectype: vector(2) long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: can't force alignment of ref: MEM[(struct shared_count *)this_1(D) + 152B].pi_
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not consecutive access _15 = MEM[(struct shared_count *)this_1(D) + 152B].pi_;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: get vectype with 2 units of type long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vectype: vector(2) long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: can't force alignment of ref: MEM[(struct shared_count *)this_1(D) + 136B].pi_
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not consecutive access _16 = MEM[(struct shared_count *)this_1(D) + 136B].pi_;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: get vectype with 2 units of type long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vectype: vector(2) long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: can't force alignment of ref: MEM[(struct shared_count *)this_1(D) + 120B].pi_
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not consecutive access _17 = MEM[(struct shared_count *)this_1(D) + 120B].pi_;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: get vectype with 2 units of type long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vectype: vector(2) long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: can't force alignment of ref: MEM[(struct shared_count *)this_1(D) + 104B].pi_
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not consecutive access _18 = MEM[(struct shared_count *)this_1(D) + 104B].pi_;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: get vectype with 2 units of type long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vectype: vector(2) long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: can't force alignment of ref: MEM[(struct shared_count *)this_1(D) + 88B].pi_
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not consecutive access _19 = MEM[(struct shared_count *)this_1(D) + 88B].pi_;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: get vectype with 2 units of type long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vectype: vector(2) long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: can't force alignment of ref: MEM[(struct shared_count *)this_1(D) + 72B].pi_
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not consecutive access _20 = MEM[(struct shared_count *)this_1(D) + 72B].pi_;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: get vectype with 2 units of type long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vectype: vector(2) long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: can't force alignment of ref: MEM[(struct shared_count *)this_1(D) + 56B].pi_
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not consecutive access _21 = MEM[(struct shared_count *)this_1(D) + 56B].pi_;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: get vectype with 2 units of type long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vectype: vector(2) long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: can't force alignment of ref: MEM[(struct shared_count *)this_1(D) + 40B].pi_
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not consecutive access _22 = MEM[(struct shared_count *)this_1(D) + 40B].pi_;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: get vectype with 2 units of type long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vectype: vector(2) long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: can't force alignment of ref: MEM[(struct shared_count *)this_1(D) + 24B].pi_
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not consecutive access _23 = MEM[(struct shared_count *)this_1(D) + 24B].pi_;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: get vectype with 2 units of type long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vectype: vector(2) long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: can't force alignment of ref: MEM[(struct shared_count *)this_1(D) + 8B].pi_
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not consecutive access _24 = MEM[(struct shared_count *)this_1(D) + 8B].pi_;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:94: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/exception:60: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/exception:60: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/exception:60: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/exception:60: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/exception:60: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/exception:60: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/exception:60: note: === vect_pattern_recog ===
/usr/include/c++/4.8/exception:60: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/exception:60: note: can't determine dependence between MEM[(struct exception *)this_2(D)]._vptr.exception and this_2(D)->D.51787._vptr.exception
/usr/include/c++/4.8/exception:60: note: not vectorized: unhandled data dependence in basic block.

/usr/include/c++/4.8/stdexcept:55: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:55: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:55: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:55: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:55: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:55: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)]._vptr.exception and MEM[(struct refcount_ptr *)this_2(D) + 8B].px_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct refcount_ptr &)_1(D) + 8].px_ and MEM[(struct refcount_ptr *)this_2(D) + 8B].px_
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:208: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:208: note: can't force alignment of ref: MEM[(struct exception *)this_2(D)]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:208: note: can't force alignment of ref: MEM[(const struct refcount_ptr &)_1(D) + 8].px_
/usr/include/boost/exception/exception.hpp:208: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:208: note: can't force alignment of ref: MEM[(struct refcount_ptr *)this_2(D) + 8B].px_
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving of size 2
/usr/include/boost/exception/exception.hpp:208: note: not consecutive access _8 = MEM[(const struct refcount_ptr &)_1(D) + 8].px_;

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: Build SLP for MEM[(struct exception *)this_2(D)]._vptr.exception = &MEM[(void *)&_ZTVN5boost9exceptionE + 16B];

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vect_is_simple_use: operand &MEM[(void *)&_ZTVN5boost9exceptionE + 16B]
/usr/include/boost/exception/exception.hpp:208: note: Build SLP failed: can't find def for &MEM[(void *)&_ZTVN5boost9exceptionE + 16B]
/usr/include/boost/exception/exception.hpp:208: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _8->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_9 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _9 = _8->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _10 = MEM[(int (*__vtbl_ptr_type) () *)_9 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_function_ and MEM[(struct exception *)this_2(D)].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)_1(D)].throw_function_ and MEM[(const struct exception &)_1(D)].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_function_ and MEM[(struct exception *)this_2(D)].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_function_ and MEM[(struct exception *)this_2(D)].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_function_ and MEM[(struct exception *)this_2(D) + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_function_ and MEM[(struct bad_alloc *)this_2(D) + 40B].D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_function_ and this_2(D)->D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_function_ and this_2(D)->D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_function_ and MEM[(struct exception *)this_2(D)].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_function_ and MEM[(struct exception *)this_2(D) + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_function_ and MEM[(struct bad_alloc *)this_2(D) + 40B].D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_function_ and this_2(D)->D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_function_ and this_2(D)->D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_file_ and MEM[(struct exception *)this_2(D)].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_file_ and MEM[(struct exception *)this_2(D)].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_file_ and MEM[(struct exception *)this_2(D) + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_file_ and MEM[(struct bad_alloc *)this_2(D) + 40B].D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_file_ and this_2(D)->D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_file_ and this_2(D)->D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_file_ and MEM[(struct exception *)this_2(D) + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_file_ and MEM[(struct bad_alloc *)this_2(D) + 40B].D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_file_ and this_2(D)->D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_file_ and this_2(D)->D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_line_ and MEM[(struct exception *)this_2(D)].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_line_ and MEM[(struct exception *)this_2(D) + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_line_ and MEM[(struct bad_alloc *)this_2(D) + 40B].D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_line_ and this_2(D)->D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_line_ and this_2(D)->D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct exception *)this_2(D) + 40B]._vptr.exception and MEM[(struct bad_alloc *)this_2(D) + 40B].D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:466: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:466: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:466: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:431: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:431: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:431: note: Detected interleaving MEM[(struct clone_impl *)_3].D.700536.D.202345._vptr.exception and MEM[(struct clone_impl *)_3].D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:431: note: Detected interleaving MEM[(struct clone_impl *)_3].D.700536.D.202345._vptr.exception and MEM[(struct clone_base *)_3 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:431: note: Detected interleaving MEM[(struct clone_impl *)_3].D.700536.D.202346.D.10135._vptr.exception and MEM[(struct clone_base *)_3 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:431: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:431: note: can't force alignment of ref: MEM[(struct clone_impl *)_3].D.700536.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:431: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:431: note: can't force alignment of ref: MEM[(struct clone_impl *)_3].D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:431: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:431: note: can't force alignment of ref: MEM[(struct clone_base *)_3 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:431: note: interleaved store with gaps
/usr/include/boost/exception/exception.hpp:431: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:431: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:431: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_3 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_3 + 48B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:466: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:466: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:466: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)]._vptr.exception and MEM[(struct refcount_ptr *)this_2(D) + 8B].px_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct refcount_ptr &)_1(D) + 8].px_ and MEM[(struct refcount_ptr *)this_2(D) + 8B].px_
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:208: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:208: note: can't force alignment of ref: MEM[(struct exception *)this_2(D)]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:208: note: can't force alignment of ref: MEM[(const struct refcount_ptr &)_1(D) + 8].px_
/usr/include/boost/exception/exception.hpp:208: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:208: note: can't force alignment of ref: MEM[(struct refcount_ptr *)this_2(D) + 8B].px_
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving of size 2
/usr/include/boost/exception/exception.hpp:208: note: not consecutive access _8 = MEM[(const struct refcount_ptr &)_1(D) + 8].px_;

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: Build SLP for MEM[(struct exception *)this_2(D)]._vptr.exception = &MEM[(void *)&_ZTVN5boost9exceptionE + 16B];

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vect_is_simple_use: operand &MEM[(void *)&_ZTVN5boost9exceptionE + 16B]
/usr/include/boost/exception/exception.hpp:208: note: Build SLP failed: can't find def for &MEM[(void *)&_ZTVN5boost9exceptionE + 16B]
/usr/include/boost/exception/exception.hpp:208: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _8->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_9 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _9 = _8->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _10 = MEM[(int (*__vtbl_ptr_type) () *)_9 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_function_ and MEM[(struct exception *)this_2(D)].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)_1(D)].throw_function_ and MEM[(const struct exception &)_1(D)].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_function_ and MEM[(struct exception *)this_2(D)].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_function_ and MEM[(struct exception *)this_2(D)].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_function_ and MEM[(struct exception *)this_2(D) + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_function_ and MEM[(struct bad_exception *)this_2(D) + 40B].D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_function_ and this_2(D)->D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_function_ and this_2(D)->D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_function_ and MEM[(struct exception *)this_2(D)].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_function_ and MEM[(struct exception *)this_2(D) + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_function_ and MEM[(struct bad_exception *)this_2(D) + 40B].D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_function_ and this_2(D)->D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_function_ and this_2(D)->D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_file_ and MEM[(struct exception *)this_2(D)].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_file_ and MEM[(struct exception *)this_2(D)].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_file_ and MEM[(struct exception *)this_2(D) + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_file_ and MEM[(struct bad_exception *)this_2(D) + 40B].D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_file_ and this_2(D)->D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_file_ and this_2(D)->D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_file_ and MEM[(struct exception *)this_2(D) + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_file_ and MEM[(struct bad_exception *)this_2(D) + 40B].D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_file_ and this_2(D)->D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)this_2(D)].throw_file_ and this_2(D)->D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_line_ and MEM[(struct exception *)this_2(D)].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_line_ and MEM[(struct exception *)this_2(D) + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_line_ and MEM[(struct bad_exception *)this_2(D) + 40B].D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_line_ and this_2(D)->D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)_1(D)].throw_line_ and this_2(D)->D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct exception *)this_2(D) + 40B]._vptr.exception and MEM[(struct bad_exception *)this_2(D) + 40B].D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:466: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:466: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:466: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:431: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:431: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:431: note: Detected interleaving MEM[(struct clone_impl *)_3].D.700734.D.202397._vptr.exception and MEM[(struct clone_impl *)_3].D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:431: note: Detected interleaving MEM[(struct clone_impl *)_3].D.700734.D.202397._vptr.exception and MEM[(struct clone_base *)_3 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:431: note: Detected interleaving MEM[(struct clone_impl *)_3].D.700734.D.202398.D.3094._vptr.exception and MEM[(struct clone_base *)_3 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:431: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:431: note: can't force alignment of ref: MEM[(struct clone_impl *)_3].D.700734.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:431: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:431: note: can't force alignment of ref: MEM[(struct clone_impl *)_3].D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:431: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:431: note: can't force alignment of ref: MEM[(struct clone_base *)_3 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:431: note: interleaved store with gaps
/usr/include/boost/exception/exception.hpp:431: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:431: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:431: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_3 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_3 + 48B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:466: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:466: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:466: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:78: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:78: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:78: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:78: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:78: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:78: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:78: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:78: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:78: note: can't force alignment of ref: this_5(D)->px_
/usr/include/boost/exception/exception.hpp:78: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:78: note: not consecutive access _6 = this_5(D)->px_;

/usr/include/boost/exception/exception.hpp:78: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:78: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:78: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:78: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:78: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:78: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:78: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:78: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:78: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:78: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:78: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:78: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:78: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:78: note: can't force alignment of ref: _6->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:78: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:78: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_7 + 32B]
/usr/include/boost/exception/exception.hpp:78: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:78: note: not consecutive access _7 = _6->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:78: note: not consecutive access _8 = MEM[(int (*__vtbl_ptr_type) () *)_7 + 32B];

/usr/include/boost/exception/exception.hpp:78: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:78: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:78: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:80: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:80: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:80: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:76: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:76: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:76: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:79: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:79: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:79: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:79: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:79: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:79: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:79: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:79: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:79: note: can't force alignment of ref: this_5(D)->px_
/usr/include/boost/exception/exception.hpp:79: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:79: note: not consecutive access this_5(D)->px_ = 0B;

/usr/include/boost/exception/exception.hpp:79: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:79: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:79: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: === vect_pattern_recog ===
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: === vect_analyze_dependences ===
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: Detected interleaving this_2(D)->D.202345._vptr.exception and this_2(D)->D.202346.D.10135._vptr.exception
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: can't force alignment of ref: this_2(D)->D.202345._vptr.exception
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: can't force alignment of ref: this_2(D)->D.202346.D.10135._vptr.exception
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: interleaved store with gaps
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: === vect_analyze_slp ===
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: Failed to SLP the basic block.
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: === vect_pattern_recog ===
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: === vect_analyze_dependences ===
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: Detected interleaving this_2(D)->D.202397._vptr.exception and this_2(D)->D.202398.D.3094._vptr.exception
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: can't force alignment of ref: this_2(D)->D.202397._vptr.exception
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: can't force alignment of ref: this_2(D)->D.202398.D.3094._vptr.exception
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: interleaved store with gaps
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: === vect_analyze_slp ===
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: Failed to SLP the basic block.
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:332: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.695000.D.51926._vptr.exception and this_2(D)->D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.695000.D.51926._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: can't determine dependence between this_2(D)->D.695001._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:332: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.695587.D.133507.D.51896.D.51787._vptr.exception and this_2(D)->D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.695587.D.133507.D.51896.D.51787._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: can't determine dependence between this_2(D)->D.695588._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:332: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.823030.D.136409.D.51896.D.51787._vptr.exception and this_2(D)->D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.823030.D.136409.D.51896.D.51787._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: can't determine dependence between this_2(D)->D.823031._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:332: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.822880.D.133659.D.51896.D.51787._vptr.exception and this_2(D)->D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.822880.D.133659.D.51896.D.51787._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: can't determine dependence between this_2(D)->D.822881._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception and this_2(D)->D.695654.D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception and MEM[(struct clone_base *)this_2(D) + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: can't determine dependence between this_2(D)->D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception and MEM[(struct error_info_injector *)this_2(D)].D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception and this_2(D)->D.822947.D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception and MEM[(struct clone_base *)this_2(D) + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: can't determine dependence between this_2(D)->D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception and MEM[(struct error_info_injector *)this_2(D)].D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception and this_2(D)->D.823097.D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception and MEM[(struct clone_base *)this_2(D) + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: can't determine dependence between this_2(D)->D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception and MEM[(struct error_info_injector *)this_2(D)].D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.695067.D.695000.D.51926._vptr.exception and this_2(D)->D.695067.D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.695067.D.695000.D.51926._vptr.exception and MEM[(struct clone_base *)this_2(D) + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: can't determine dependence between this_2(D)->D.695067.D.695000.D.51926._vptr.exception and MEM[(struct error_info_injector *)this_2(D)].D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:332: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.823030.D.136409.D.51896.D.51787._vptr.exception and this_2(D)->D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.823030.D.136409.D.51896.D.51787._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: can't determine dependence between this_2(D)->D.823031._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:332: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.695587.D.133507.D.51896.D.51787._vptr.exception and this_2(D)->D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.695587.D.133507.D.51896.D.51787._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: can't determine dependence between this_2(D)->D.695588._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:332: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.822880.D.133659.D.51896.D.51787._vptr.exception and this_2(D)->D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.822880.D.133659.D.51896.D.51787._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: can't determine dependence between this_2(D)->D.822881._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:332: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:332: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:332: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.695000.D.51926._vptr.exception and this_2(D)->D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: Detected interleaving this_2(D)->D.695000.D.51926._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: can't determine dependence between this_2(D)->D.695001._vptr.exception and MEM[(struct exception *)this_2(D) + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:332: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception and this_2(D)->D.695654.D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception and MEM[(struct clone_base *)this_2(D) + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: can't determine dependence between this_2(D)->D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception and MEM[(struct error_info_injector *)this_2(D)].D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception and this_2(D)->D.823097.D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception and MEM[(struct clone_base *)this_2(D) + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: can't determine dependence between this_2(D)->D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception and MEM[(struct error_info_injector *)this_2(D)].D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception and this_2(D)->D.822947.D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception and MEM[(struct clone_base *)this_2(D) + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: can't determine dependence between this_2(D)->D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception and MEM[(struct error_info_injector *)this_2(D)].D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.700536.D.202345._vptr.exception and this_2(D)->D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.700536.D.202345._vptr.exception and MEM[(struct clone_base *)this_2(D) + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: can't determine dependence between this_2(D)->D.700536.D.202345._vptr.exception and MEM[(struct bad_alloc_ *)this_2(D)].D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.700734.D.202397._vptr.exception and this_2(D)->D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.700734.D.202397._vptr.exception and MEM[(struct clone_base *)this_2(D) + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: can't determine dependence between this_2(D)->D.700734.D.202397._vptr.exception and MEM[(struct bad_exception_ *)this_2(D)].D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.695067.D.695000.D.51926._vptr.exception and this_2(D)->D.695067.D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.695067.D.695000.D.51926._vptr.exception and MEM[(struct clone_base *)this_2(D) + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: can't determine dependence between this_2(D)->D.695067.D.695000.D.51926._vptr.exception and MEM[(struct error_info_injector *)this_2(D)].D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: === vect_pattern_recog ===
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: === vect_analyze_dependences ===
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: Detected interleaving this_2(D)->D.202397._vptr.exception and this_2(D)->D.202398.D.3094._vptr.exception
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: can't force alignment of ref: this_2(D)->D.202397._vptr.exception
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: can't force alignment of ref: this_2(D)->D.202398.D.3094._vptr.exception
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: interleaved store with gaps
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: === vect_analyze_slp ===
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: Failed to SLP the basic block.
/usr/include/boost/exception/detail/exception_ptr.hpp:112: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: === vect_pattern_recog ===
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: === vect_analyze_dependences ===
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: Detected interleaving this_2(D)->D.202345._vptr.exception and this_2(D)->D.202346.D.10135._vptr.exception
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: can't force alignment of ref: this_2(D)->D.202345._vptr.exception
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: can't force alignment of ref: this_2(D)->D.202346.D.10135._vptr.exception
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: interleaved store with gaps
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: === vect_analyze_slp ===
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: Failed to SLP the basic block.
/usr/include/boost/exception/detail/exception_ptr.hpp:104: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.700734.D.202397._vptr.exception and this_2(D)->D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.700734.D.202397._vptr.exception and MEM[(struct clone_base *)this_2(D) + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: can't determine dependence between this_2(D)->D.700734.D.202397._vptr.exception and MEM[(struct bad_exception_ *)this_2(D)].D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.700536.D.202345._vptr.exception and this_2(D)->D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving this_2(D)->D.700536.D.202345._vptr.exception and MEM[(struct clone_base *)this_2(D) + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: can't determine dependence between this_2(D)->D.700536.D.202345._vptr.exception and MEM[(struct bad_alloc_ *)this_2(D)].D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:28: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref data.px_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: can't force alignment of ref: MEM[(const struct refcount_ptr *)b_5(D) + 8B].px_
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:28: note: not consecutive access data.px_ = 0B;

/usr/include/boost/exception/exception.hpp:28: note: not consecutive access _26 = MEM[(const struct refcount_ptr *)b_5(D) + 8B].px_;

/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:28: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:28: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:416: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:416: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:416: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:416: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:416: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:416: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:416: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:416: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:416: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:416: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:416: note: can't force alignment of ref: _26->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:416: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:416: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_6 + 40B]
/usr/include/boost/exception/exception.hpp:416: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:416: note: not consecutive access _6 = _26->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:416: note: not consecutive access _7 = MEM[(int (*__vtbl_ptr_type) () *)_6 + 40B];

/usr/include/boost/exception/exception.hpp:416: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:416: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:416: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:46: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:46: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:46: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:46: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:46: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:46: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:46: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:46: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:46: note: misalign = 0 bytes of ref D.125769.px_
/usr/include/boost/exception/exception.hpp:46: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:46: note: not consecutive access _27 = D.125769.px_;

/usr/include/boost/exception/exception.hpp:46: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:46: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:46: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:54: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:54: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:54: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:54: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:54: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:54: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:54: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:54: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:54: note: misalign = 0 bytes of ref data.px_
/usr/include/boost/exception/exception.hpp:54: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:54: note: not consecutive access data.px_ = _27;

/usr/include/boost/exception/exception.hpp:54: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:54: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:54: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:34: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:34: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:34: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _27->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_36 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _36 = _27->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _37 = MEM[(int (*__vtbl_ptr_type) () *)_36 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:412: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:412: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:412: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:417: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:417: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:417: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:417: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:417: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:417: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:417: note: can't determine dependence between b_5(D)->throw_file_ and a_15(D)->throw_file_
/usr/include/boost/exception/exception.hpp:417: note: can't determine dependence between b_5(D)->throw_file_ and a_15(D)->throw_line_
/usr/include/boost/exception/exception.hpp:417: note: Detected interleaving b_5(D)->throw_file_ and b_5(D)->throw_function_
/usr/include/boost/exception/exception.hpp:417: note: can't determine dependence between b_5(D)->throw_file_ and a_15(D)->throw_function_
/usr/include/boost/exception/exception.hpp:417: note: Detected interleaving a_15(D)->throw_file_ and a_15(D)->throw_function_
/usr/include/boost/exception/exception.hpp:417: note: can't determine dependence between b_5(D)->throw_line_ and a_15(D)->throw_line_
/usr/include/boost/exception/exception.hpp:417: note: can't determine dependence between b_5(D)->throw_line_ and a_15(D)->throw_function_
/usr/include/boost/exception/exception.hpp:417: note: can't determine dependence between b_5(D)->throw_function_ and a_15(D)->throw_function_
/usr/include/boost/exception/exception.hpp:417: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:417: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:417: note: can't force alignment of ref: b_5(D)->throw_file_
/usr/include/boost/exception/exception.hpp:417: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:417: note: can't force alignment of ref: a_15(D)->throw_file_
/usr/include/boost/exception/exception.hpp:417: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:417: note: can't force alignment of ref: b_5(D)->throw_line_
/usr/include/boost/exception/exception.hpp:417: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:417: note: can't force alignment of ref: a_15(D)->throw_line_
/usr/include/boost/exception/exception.hpp:417: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:417: note: can't force alignment of ref: b_5(D)->throw_function_
/usr/include/boost/exception/exception.hpp:417: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:417: note: can't force alignment of ref: a_15(D)->throw_function_
/usr/include/boost/exception/exception.hpp:417: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:417: note: not consecutive access _17 = b_5(D)->throw_line_;

/usr/include/boost/exception/exception.hpp:417: note: not consecutive access a_15(D)->throw_line_ = _17;

/usr/include/boost/exception/exception.hpp:417: note: Detected interleaving of size 2
/usr/include/boost/exception/exception.hpp:417: note: Detected interleaving of size 2
/usr/include/boost/exception/exception.hpp:417: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:417: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: Build SLP for a_15(D)->throw_function_ = _19;

/usr/include/boost/exception/exception.hpp:417: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vect_is_simple_use: operand _19
/usr/include/boost/exception/exception.hpp:417: note: def_stmt: _19 = b_5(D)->throw_function_;

/usr/include/boost/exception/exception.hpp:417: note: type of def: 3.
/usr/include/boost/exception/exception.hpp:417: note: vect_model_store_cost: unaligned supported by hardware.
/usr/include/boost/exception/exception.hpp:417: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/boost/exception/exception.hpp:417: note: Build SLP for a_15(D)->throw_file_ = _14;

/usr/include/boost/exception/exception.hpp:417: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vect_is_simple_use: operand _14
/usr/include/boost/exception/exception.hpp:417: note: def_stmt: _14 = b_5(D)->throw_file_;

/usr/include/boost/exception/exception.hpp:417: note: type of def: 3.
/usr/include/boost/exception/exception.hpp:417: note: Build SLP for _19 = b_5(D)->throw_function_;

/usr/include/boost/exception/exception.hpp:417: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/boost/exception/exception.hpp:417: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/boost/exception/exception.hpp:417: note: Build SLP for _14 = b_5(D)->throw_file_;

/usr/include/boost/exception/exception.hpp:417: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(2) long unsigned intnode 
	stmt 0 a_15(D)->throw_function_ = _19;

	stmt 1 a_15(D)->throw_file_ = _14;

node 
	stmt 0 _19 = b_5(D)->throw_function_;

	stmt 1 _14 = b_5(D)->throw_file_;


/usr/include/boost/exception/exception.hpp:417: note: Vectorizing an unaligned access.
/usr/include/boost/exception/exception.hpp:417: note: Vectorizing an unaligned access.
/usr/include/boost/exception/exception.hpp:417: note: ==> examining statement: _19 = b_5(D)->throw_function_;

/usr/include/boost/exception/exception.hpp:417: note: get vectype for scalar type:  const char *
/usr/include/boost/exception/exception.hpp:417: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype:  vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vect_is_simple_use: operand b_5(D)->throw_function_
/usr/include/boost/exception/exception.hpp:417: note: not ssa-name.
/usr/include/boost/exception/exception.hpp:417: note: use not simple.
/usr/include/boost/exception/exception.hpp:417: note: vect_is_simple_use: operand b_5(D)->throw_function_
/usr/include/boost/exception/exception.hpp:417: note: not ssa-name.
/usr/include/boost/exception/exception.hpp:417: note: use not simple.
/usr/include/boost/exception/exception.hpp:417: note: ==> examining statement: _14 = b_5(D)->throw_file_;

/usr/include/boost/exception/exception.hpp:417: note: get vectype for scalar type:  const char *
/usr/include/boost/exception/exception.hpp:417: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype:  vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vect_is_simple_use: operand b_5(D)->throw_file_
/usr/include/boost/exception/exception.hpp:417: note: not ssa-name.
/usr/include/boost/exception/exception.hpp:417: note: use not simple.
/usr/include/boost/exception/exception.hpp:417: note: vect_is_simple_use: operand b_5(D)->throw_file_
/usr/include/boost/exception/exception.hpp:417: note: not ssa-name.
/usr/include/boost/exception/exception.hpp:417: note: use not simple.
/usr/include/boost/exception/exception.hpp:417: note: ==> examining statement: a_15(D)->throw_function_ = _19;

/usr/include/boost/exception/exception.hpp:417: note: get vectype for scalar type:  const char *
/usr/include/boost/exception/exception.hpp:417: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype:  vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vect_is_simple_use: operand _19
/usr/include/boost/exception/exception.hpp:417: note: def_stmt: _19 = b_5(D)->throw_function_;

/usr/include/boost/exception/exception.hpp:417: note: type of def: 3.
/usr/include/boost/exception/exception.hpp:417: note: vect_is_simple_use: operand _14
/usr/include/boost/exception/exception.hpp:417: note: def_stmt: _14 = b_5(D)->throw_file_;

/usr/include/boost/exception/exception.hpp:417: note: type of def: 3.
/usr/include/boost/exception/exception.hpp:417: note: ==> examining statement: a_15(D)->throw_file_ = _14;

/usr/include/boost/exception/exception.hpp:417: note: get vectype for scalar type:  const char *
/usr/include/boost/exception/exception.hpp:417: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vectype:  vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:417: note: vect_is_simple_use: operand _14
/usr/include/boost/exception/exception.hpp:417: note: def_stmt: _14 = b_5(D)->throw_file_;

/usr/include/boost/exception/exception.hpp:417: note: type of def: 3.
/usr/include/boost/exception/exception.hpp:417: note: Cost model analysis: 
  Vector inside of basic block cost: 4
  Vector prologue cost: 0
  Vector epilogue cost: 0
  Scalar cost of basic block: 4
/usr/include/boost/exception/exception.hpp:417: note: not vectorized: vectorization is not profitable.

/usr/include/boost/exception/exception.hpp:412: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:412: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:412: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:54: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:54: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:54: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:54: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:54: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:54: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:54: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:54: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:54: note: can't force alignment of ref: MEM[(struct refcount_ptr *)a_15(D) + 8B].px_
/usr/include/boost/exception/exception.hpp:54: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:54: note: not consecutive access MEM[(struct refcount_ptr *)a_15(D) + 8B].px_ = prephitmp_50;

/usr/include/boost/exception/exception.hpp:54: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:54: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:54: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:34: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:34: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:34: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: prephitmp_50->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_38 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _38 = prephitmp_50->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _39 = MEM[(int (*__vtbl_ptr_type) () *)_38 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:412: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:412: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:412: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:412: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:412: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:412: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:34: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:34: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:34: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:412: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:412: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:412: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:412: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:412: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:412: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:34: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:34: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:34: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:28: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&ba + 8B].px_ and MEM[(struct exception *)&ba].throw_function_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&ba + 8B].px_ and MEM[(struct exception *)&ba].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&ba + 8B].px_ and ba.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&ba + 8B].px_ and ba.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&ba].throw_function_ and MEM[(struct exception *)&ba].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&ba].throw_function_ and ba.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&ba].throw_function_ and ba.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&ba].throw_file_ and ba.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&ba].throw_file_ and ba.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving ba.D.202345._vptr.exception and ba.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&c + 8B].px_ and MEM[(struct exception *)&c].throw_function_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&c + 8B].px_ and MEM[(struct exception *)&c].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&c + 8B].px_ and c.D.700536.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&c + 8B].px_ and c.D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&c + 8B].px_ and MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&c].throw_function_ and MEM[(struct exception *)&c].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&c].throw_function_ and c.D.700536.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&c].throw_function_ and c.D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&c].throw_function_ and MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&c].throw_file_ and c.D.700536.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&c].throw_file_ and c.D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&c].throw_file_ and MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving c.D.700536.D.202345._vptr.exception and c.D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving c.D.700536.D.202345._vptr.exception and MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving c.D.700536.D.202346.D.10135._vptr.exception and MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 8 bytes of ref MEM[(struct refcount_ptr *)&ba + 8B].px_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref MEM[(struct exception *)&ba].throw_function_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 8 bytes of ref MEM[(struct exception *)&ba].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref MEM[(struct exception *)&ba].throw_line_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref ba.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 8 bytes of ref ba.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 8 bytes of ref MEM[(struct refcount_ptr *)&c + 8B].px_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref MEM[(struct exception *)&c].throw_function_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 8 bytes of ref MEM[(struct exception *)&c].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref MEM[(struct exception *)&c].throw_line_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref c.D.700536.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 8 bytes of ref c.D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:28: note: not consecutive access MEM[(struct exception *)&ba].throw_line_ = -1;

/usr/include/boost/exception/exception.hpp:28: note: interleaved store with gaps
/usr/include/boost/exception/exception.hpp:28: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/exception.hpp:28: note: not consecutive access MEM[(struct exception *)&c].throw_line_ = -1;

/usr/include/boost/exception/exception.hpp:28: note: interleaved store with gaps
/usr/include/boost/exception/exception.hpp:28: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:28: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:28: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:446: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:446: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:446: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: misalign = 0 bytes of ref MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)&c + 48B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:287: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:287: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:287: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:287: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:287: note: get vectype with 16 units of type char
/usr/include/boost/exception/exception.hpp:287: note: vectype: vector(16) char
/usr/include/boost/exception/exception.hpp:287: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:287: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:287: note: Detected interleaving c.D.700536.D.202345.throw_function_ and c.D.700536.D.202345.throw_file_
/usr/include/boost/exception/exception.hpp:287: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:287: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:287: note: misalign = 0 bytes of ref c.D.700536.D.202345.throw_function_
/usr/include/boost/exception/exception.hpp:287: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:287: note: misalign = 8 bytes of ref c.D.700536.D.202345.throw_file_
/usr/include/boost/exception/exception.hpp:287: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:287: note: misalign = 0 bytes of ref c.D.700536.D.202345.throw_line_
/usr/include/boost/exception/exception.hpp:287: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:287: note: force alignment of MEM[(char *)&_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE2ep]
/usr/include/boost/exception/exception.hpp:287: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE2ep]
/usr/include/boost/exception/exception.hpp:287: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:287: note: Detected interleaving of size 2
/usr/include/boost/exception/exception.hpp:287: note: not consecutive access c.D.700536.D.202345.throw_line_ = 124;

/usr/include/boost/exception/exception.hpp:287: note: not consecutive access _13 = MEM[(char *)&_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_10bad_alloc_EEENS_13exception_ptrEvE2ep];

/usr/include/boost/exception/exception.hpp:287: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:287: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: Build SLP for c.D.700536.D.202345.throw_function_ = &__PRETTY_FUNCTION__;

/usr/include/boost/exception/exception.hpp:287: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: vect_is_simple_use: operand &__PRETTY_FUNCTION__
/usr/include/boost/exception/exception.hpp:287: note: Build SLP failed: can't find def for &__PRETTY_FUNCTION__
/usr/include/boost/exception/exception.hpp:287: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:287: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:392: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:392: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:392: note: can't force alignment of ref: MEM[(struct clone_base *)_17 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:392: note: not consecutive access MEM[(struct clone_base *)_17 + 48B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:392: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:392: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:431: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:431: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:431: note: Detected interleaving MEM[(struct clone_impl *)_17].D.700536.D.202345._vptr.exception and MEM[(struct clone_impl *)_17].D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:431: note: Detected interleaving MEM[(struct clone_impl *)_17].D.700536.D.202345._vptr.exception and MEM[(struct clone_base *)_17 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:431: note: Detected interleaving MEM[(struct clone_impl *)_17].D.700536.D.202346.D.10135._vptr.exception and MEM[(struct clone_base *)_17 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:431: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:431: note: can't force alignment of ref: MEM[(struct clone_impl *)_17].D.700536.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:431: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:431: note: can't force alignment of ref: MEM[(struct clone_impl *)_17].D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:431: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:431: note: can't force alignment of ref: MEM[(struct clone_base *)_17 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:431: note: interleaved store with gaps
/usr/include/boost/exception/exception.hpp:431: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:431: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:431: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: get vectype with 4 units of type int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: vectype: vector(4) int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: get vectype with 4 units of type int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: vectype: vector(4) int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: not vectorized: no vectype for stmt: D.1129828 ={v} {CLOBBER};
 scalar_type: struct shared_count
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: can't determine dependence between MEM[(struct sp_counted_base *)_99]._vptr.sp_counted_base and MEM[(struct sp_counted_impl_p *)_99].D.825805._vptr.sp_counted_base
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_17 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_17 + 48B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: no vectype for stmt: D.700658 ={v} {CLOBBER};
 scalar_type: struct shared_ptr
/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_pattern_recog ===
/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_dependences ===
/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_slp ===
/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: Failed to SLP the basic block.
/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: can't determine dependence between MEM[(const struct shared_ptr &)&ep].px and MEM[(struct shared_ptr *)_28(D)].px
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: Detected interleaving MEM[(const struct shared_ptr &)&ep].px and MEM[(const struct shared_count &)&ep + 8].pi_
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: can't determine dependence between MEM[(struct shared_ptr *)_28(D)].px and MEM[(const struct shared_count &)&ep + 8].pi_
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:134: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:134: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:134: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving MEM[(struct clone_base *)&c + 48B]._vptr.clone_base and MEM[(struct bad_alloc_ *)&c].D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving MEM[(struct clone_base *)&c + 48B]._vptr.clone_base and MEM[(struct bad_alloc_ *)&c].D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving MEM[(struct bad_alloc_ *)&c].D.202345._vptr.exception and MEM[(struct bad_alloc_ *)&c].D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:453: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:453: note: misalign = 0 bytes of ref MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:453: note: misalign = 0 bytes of ref MEM[(struct bad_alloc_ *)&c].D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:453: note: misalign = 8 bytes of ref MEM[(struct bad_alloc_ *)&c].D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:453: note: interleaved store with gaps
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:453: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving c.D.700536.D.202345._vptr.exception and c.D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving c.D.700536.D.202345._vptr.exception and MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving c.D.700536.D.202346.D.10135._vptr.exception and MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:453: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:453: note: misalign = 0 bytes of ref c.D.700536.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:453: note: misalign = 8 bytes of ref c.D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:453: note: misalign = 0 bytes of ref MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:453: note: interleaved store with gaps
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:453: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:126: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:126: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:126: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:28: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&ba + 8B].px_ and MEM[(struct exception *)&ba].throw_function_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&ba + 8B].px_ and MEM[(struct exception *)&ba].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&ba + 8B].px_ and ba.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&ba + 8B].px_ and ba.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&ba].throw_function_ and MEM[(struct exception *)&ba].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&ba].throw_function_ and ba.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&ba].throw_function_ and ba.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&ba].throw_file_ and ba.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&ba].throw_file_ and ba.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving ba.D.202397._vptr.exception and ba.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&c + 8B].px_ and MEM[(struct exception *)&c].throw_function_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&c + 8B].px_ and MEM[(struct exception *)&c].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&c + 8B].px_ and c.D.700734.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&c + 8B].px_ and c.D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&c + 8B].px_ and MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&c].throw_function_ and MEM[(struct exception *)&c].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&c].throw_function_ and c.D.700734.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&c].throw_function_ and c.D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&c].throw_function_ and MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&c].throw_file_ and c.D.700734.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&c].throw_file_ and c.D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct exception *)&c].throw_file_ and MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving c.D.700734.D.202397._vptr.exception and c.D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving c.D.700734.D.202397._vptr.exception and MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving c.D.700734.D.202398.D.3094._vptr.exception and MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 8 bytes of ref MEM[(struct refcount_ptr *)&ba + 8B].px_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref MEM[(struct exception *)&ba].throw_function_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 8 bytes of ref MEM[(struct exception *)&ba].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref MEM[(struct exception *)&ba].throw_line_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref ba.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 8 bytes of ref ba.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 8 bytes of ref MEM[(struct refcount_ptr *)&c + 8B].px_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref MEM[(struct exception *)&c].throw_function_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 8 bytes of ref MEM[(struct exception *)&c].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref MEM[(struct exception *)&c].throw_line_
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref c.D.700734.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 8 bytes of ref c.D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:28: note: misalign = 0 bytes of ref MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:28: note: not consecutive access MEM[(struct exception *)&ba].throw_line_ = -1;

/usr/include/boost/exception/exception.hpp:28: note: interleaved store with gaps
/usr/include/boost/exception/exception.hpp:28: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/exception.hpp:28: note: not consecutive access MEM[(struct exception *)&c].throw_line_ = -1;

/usr/include/boost/exception/exception.hpp:28: note: interleaved store with gaps
/usr/include/boost/exception/exception.hpp:28: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:28: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:28: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:446: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:446: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:446: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: misalign = 0 bytes of ref MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)&c + 48B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:287: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:287: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:287: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:287: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:287: note: get vectype with 16 units of type char
/usr/include/boost/exception/exception.hpp:287: note: vectype: vector(16) char
/usr/include/boost/exception/exception.hpp:287: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:287: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:287: note: Detected interleaving c.D.700734.D.202397.throw_function_ and c.D.700734.D.202397.throw_file_
/usr/include/boost/exception/exception.hpp:287: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:287: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:287: note: misalign = 0 bytes of ref c.D.700734.D.202397.throw_function_
/usr/include/boost/exception/exception.hpp:287: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:287: note: misalign = 8 bytes of ref c.D.700734.D.202397.throw_file_
/usr/include/boost/exception/exception.hpp:287: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:287: note: misalign = 0 bytes of ref c.D.700734.D.202397.throw_line_
/usr/include/boost/exception/exception.hpp:287: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:287: note: force alignment of MEM[(char *)&_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEvE2ep]
/usr/include/boost/exception/exception.hpp:287: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEvE2ep]
/usr/include/boost/exception/exception.hpp:287: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:287: note: Detected interleaving of size 2
/usr/include/boost/exception/exception.hpp:287: note: not consecutive access c.D.700734.D.202397.throw_line_ = 124;

/usr/include/boost/exception/exception.hpp:287: note: not consecutive access _13 = MEM[(char *)&_ZGVZN5boost16exception_detail27get_static_exception_objectINS0_14bad_exception_EEENS_13exception_ptrEvE2ep];

/usr/include/boost/exception/exception.hpp:287: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:287: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: Build SLP for c.D.700734.D.202397.throw_function_ = &__PRETTY_FUNCTION__;

/usr/include/boost/exception/exception.hpp:287: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:287: note: vect_is_simple_use: operand &__PRETTY_FUNCTION__
/usr/include/boost/exception/exception.hpp:287: note: Build SLP failed: can't find def for &__PRETTY_FUNCTION__
/usr/include/boost/exception/exception.hpp:287: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:287: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:392: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:392: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:392: note: can't force alignment of ref: MEM[(struct clone_base *)_17 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:392: note: not consecutive access MEM[(struct clone_base *)_17 + 48B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:392: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:392: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:431: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:431: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:431: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:431: note: Detected interleaving MEM[(struct clone_impl *)_17].D.700734.D.202397._vptr.exception and MEM[(struct clone_impl *)_17].D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:431: note: Detected interleaving MEM[(struct clone_impl *)_17].D.700734.D.202397._vptr.exception and MEM[(struct clone_base *)_17 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:431: note: Detected interleaving MEM[(struct clone_impl *)_17].D.700734.D.202398.D.3094._vptr.exception and MEM[(struct clone_base *)_17 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:431: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:431: note: can't force alignment of ref: MEM[(struct clone_impl *)_17].D.700734.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:431: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:431: note: can't force alignment of ref: MEM[(struct clone_impl *)_17].D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:431: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:431: note: can't force alignment of ref: MEM[(struct clone_base *)_17 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:431: note: interleaved store with gaps
/usr/include/boost/exception/exception.hpp:431: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/exception.hpp:431: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:431: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:431: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: get vectype with 4 units of type int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: vectype: vector(4) int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: get vectype with 4 units of type int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: vectype: vector(4) int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: not vectorized: no vectype for stmt: D.1129872 ={v} {CLOBBER};
 scalar_type: struct shared_count
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: can't determine dependence between MEM[(struct sp_counted_base *)_99]._vptr.sp_counted_base and MEM[(struct sp_counted_impl_p *)_99].D.825861._vptr.sp_counted_base
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:109: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_17 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_17 + 48B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/shared_count.hpp:371: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: no vectype for stmt: D.700805 ={v} {CLOBBER};
 scalar_type: struct shared_ptr
/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_pattern_recog ===
/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_dependences ===
/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_slp ===
/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: Failed to SLP the basic block.
/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: vectype: vector(2) long unsigned int
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: === vect_pattern_recog ===
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: === vect_analyze_dependences ===
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: can't determine dependence between MEM[(const struct shared_ptr &)&ep].px and MEM[(struct shared_ptr *)_28(D)].px
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: Detected interleaving MEM[(const struct shared_ptr &)&ep].px and MEM[(const struct shared_count &)&ep + 8].pi_
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: can't determine dependence between MEM[(struct shared_ptr *)_28(D)].px and MEM[(const struct shared_count &)&ep + 8].pi_
/usr/include/boost/smart_ptr/shared_ptr.hpp:397: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:134: note: ===vect_slp_analyze_bb===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:134: note: === vect_analyze_data_refs ===

/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:134: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving MEM[(struct clone_base *)&c + 48B]._vptr.clone_base and MEM[(struct bad_exception_ *)&c].D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving MEM[(struct clone_base *)&c + 48B]._vptr.clone_base and MEM[(struct bad_exception_ *)&c].D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving MEM[(struct bad_exception_ *)&c].D.202397._vptr.exception and MEM[(struct bad_exception_ *)&c].D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:453: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:453: note: misalign = 0 bytes of ref MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:453: note: misalign = 0 bytes of ref MEM[(struct bad_exception_ *)&c].D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:453: note: misalign = 8 bytes of ref MEM[(struct bad_exception_ *)&c].D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:453: note: interleaved store with gaps
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:453: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:125: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:453: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:453: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving c.D.700734.D.202397._vptr.exception and c.D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving c.D.700734.D.202397._vptr.exception and MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: Detected interleaving c.D.700734.D.202398.D.3094._vptr.exception and MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:453: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:453: note: misalign = 0 bytes of ref c.D.700734.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:453: note: misalign = 8 bytes of ref c.D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:453: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:453: note: misalign = 0 bytes of ref MEM[(struct clone_base *)&c + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:453: note: interleaved store with gaps
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/exception.hpp:453: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:453: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:453: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:126: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:126: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:126: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:112: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:112: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:112: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:28: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.695008 + 24B].px_ and MEM[(struct exception *)&D.695008 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.695008 + 24B].px_ and MEM[(struct exception *)&D.695008 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.695008 + 24B].px_ and D.695008.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.695008 + 24B].px_ and D.695008.D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: can't determine dependence between MEM[(struct refcount_ptr *)&D.695008 + 24B].px_ and MEM[(struct exception *)_5]._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: not vectorized: unhandled data dependence in basic block.

/usr/include/c++/4.8/stdexcept:112: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:112: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:112: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct exception *)_5 + 16B]._vptr.exception and MEM[(const struct refcount_ptr &)&D.695008 + 24].px_
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.695008 + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)&D.695008 + 16].throw_function_ and MEM[(const struct exception &)&D.695008 + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.695008 + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.695008 + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.695008 + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.695067.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.695008 + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.695067.D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(const struct exception &)&D.695008 + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _31->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_32 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _32 = _31->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _33 = MEM[(int (*__vtbl_ptr_type) () *)_32 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:320: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:320: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:320: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:446: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:446: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:446: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/c_time.hpp:85: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/c_time.hpp:85: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/c_time.hpp:85: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/c_time.hpp:88: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/c_time.hpp:88: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/c_time.hpp:88: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/c_time.hpp:88: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/c_time.hpp:88: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/c_time.hpp:88: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/c_time.hpp:89: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/c_time.hpp:89: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/c_time.hpp:89: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/c_time.hpp:88: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/c_time.hpp:88: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/c_time.hpp:88: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/c_time.hpp:75: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/c_time.hpp:75: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/c_time.hpp:75: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/c_time.hpp:75: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/c_time.hpp:75: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/c_time.hpp:75: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: misalign = 0 bytes of ref D.125892._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _13 = D.125892._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:28: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.695595 + 24B].px_ and MEM[(struct exception *)&D.695595 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.695595 + 24B].px_ and MEM[(struct exception *)&D.695595 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.695595 + 24B].px_ and D.695595.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.695595 + 24B].px_ and D.695595.D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: can't determine dependence between MEM[(struct refcount_ptr *)&D.695595 + 24B].px_ and MEM[(struct exception *)_5]._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: not vectorized: unhandled data dependence in basic block.

/usr/include/c++/4.8/stdexcept:55: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:55: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:55: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:100: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: === vect_pattern_recog ===
/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/stdexcept:100: note: can't determine dependence between MEM[(struct out_of_range *)_5].D.51896.D.51787._vptr.exception and MEM[(struct bad_day_of_month *)_5].D.133507.D.51896.D.51787._vptr.exception
/usr/include/c++/4.8/stdexcept:100: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.695595 + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)&D.695595 + 16].throw_function_ and MEM[(const struct exception &)&D.695595 + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.695595 + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.695595 + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.695595 + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.695595 + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.695654.D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(const struct exception &)&D.695595 + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _31->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_32 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _32 = _31->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _33 = MEM[(int (*__vtbl_ptr_type) () *)_32 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: can't force alignment of ref: MEM[(struct bad_day_of_month *)_5].D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: not consecutive access MEM[(struct bad_day_of_month *)_5].D.133507.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian16bad_day_of_monthE + 16B];

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:446: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:446: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:446: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/gregorian/greg_day.hpp:23: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_day.hpp:23: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_day.hpp:23: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: misalign = 0 bytes of ref D.1129983._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _7 = D.1129983._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: misalign = 0 bytes of ref D.1129983._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _9 = D.1129983._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: misalign = 0 bytes of ref D.1093043.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: not consecutive access D.1093043.D.133507.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian16bad_day_of_monthE + 16B];

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:392: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:392: note: Detected interleaving MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base and MEM[(struct exception *)_5]._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: Detected interleaving MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base and MEM[(struct logic_error *)_5].D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: can't determine dependence between MEM[(struct exception *)_5]._vptr.exception and MEM[(struct logic_error *)_5].D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: not vectorized: unhandled data dependence in basic block.

/usr/include/c++/4.8/stdexcept:55: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:55: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:55: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:100: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: === vect_pattern_recog ===
/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/stdexcept:100: note: can't determine dependence between MEM[(struct out_of_range *)_5].D.51896.D.51787._vptr.exception and MEM[(struct bad_month *)_5].D.136409.D.51896.D.51787._vptr.exception
/usr/include/c++/4.8/stdexcept:100: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(const struct exception &)this_6(D) + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.823097.D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct error_info_injector *)_5].D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct error_info_injector *)_5].D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct clone_impl *)_5].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct clone_impl *)_5].D.823097.D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct exception *)_5 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct exception *)_5 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_5].D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_5].D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct clone_impl *)_5].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct clone_impl *)_5].D.823097.D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct error_info_injector *)_5].D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct error_info_injector *)_5].D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct clone_impl *)_5].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct clone_impl *)_5].D.823097.D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct exception *)_5 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_5].D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_5].D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct clone_impl *)_5].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct clone_impl *)_5].D.823097.D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct error_info_injector *)_5].D.823030.D.136409.D.51896.D.51787._vptr.exception and MEM[(struct error_info_injector *)_5].D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct error_info_injector *)_5].D.823030.D.136409.D.51896.D.51787._vptr.exception and MEM[(struct clone_impl *)_5].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _19->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_20 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _20 = _19->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _21 = MEM[(int (*__vtbl_ptr_type) () *)_20 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: can't force alignment of ref: MEM[(struct bad_month *)_5].D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: not consecutive access MEM[(struct bad_month *)_5].D.136409.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian9bad_monthE + 16B];

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:437: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:437: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:437: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:460: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:460: note: get vectype with 2 units of type long int
/usr/include/boost/exception/exception.hpp:460: note: vectype: vector(2) long int
/usr/include/boost/exception/exception.hpp:460: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:460: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:460: note: can't force alignment of ref: MEM[(struct clone_impl *)_5].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:460: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:460: note: can't force alignment of ref: MEM[(long int *)_8 + -24B]
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:460: note: not consecutive access _8 = MEM[(struct clone_impl *)_5].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception;

/usr/include/boost/exception/exception.hpp:460: note: not consecutive access _9 = MEM[(long int *)_8 + -24B];

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:460: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:460: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:392: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:392: note: Detected interleaving MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base and MEM[(struct exception *)_5]._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: Detected interleaving MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base and MEM[(struct logic_error *)_5].D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: can't determine dependence between MEM[(struct exception *)_5]._vptr.exception and MEM[(struct logic_error *)_5].D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: not vectorized: unhandled data dependence in basic block.

/usr/include/c++/4.8/stdexcept:55: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:55: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:55: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:100: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: === vect_pattern_recog ===
/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/stdexcept:100: note: can't determine dependence between MEM[(struct out_of_range *)_5].D.51896.D.51787._vptr.exception and MEM[(struct bad_year *)_5].D.133659.D.51896.D.51787._vptr.exception
/usr/include/c++/4.8/stdexcept:100: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(const struct exception &)this_6(D) + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.822947.D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct error_info_injector *)_5].D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct error_info_injector *)_5].D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct clone_impl *)_5].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct clone_impl *)_5].D.822947.D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct exception *)_5 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct exception *)_5 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_5].D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_5].D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct clone_impl *)_5].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct clone_impl *)_5].D.822947.D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct error_info_injector *)_5].D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct error_info_injector *)_5].D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct clone_impl *)_5].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct clone_impl *)_5].D.822947.D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct exception *)_5 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_5].D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_5].D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct clone_impl *)_5].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct clone_impl *)_5].D.822947.D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct error_info_injector *)_5].D.822880.D.133659.D.51896.D.51787._vptr.exception and MEM[(struct error_info_injector *)_5].D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct error_info_injector *)_5].D.822880.D.133659.D.51896.D.51787._vptr.exception and MEM[(struct clone_impl *)_5].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _19->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_20 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _20 = _19->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _21 = MEM[(int (*__vtbl_ptr_type) () *)_20 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: can't force alignment of ref: MEM[(struct bad_year *)_5].D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: not consecutive access MEM[(struct bad_year *)_5].D.133659.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian8bad_yearE + 16B];

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:437: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:437: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:437: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:460: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:460: note: get vectype with 2 units of type long int
/usr/include/boost/exception/exception.hpp:460: note: vectype: vector(2) long int
/usr/include/boost/exception/exception.hpp:460: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:460: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:460: note: can't force alignment of ref: MEM[(struct clone_impl *)_5].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:460: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:460: note: can't force alignment of ref: MEM[(long int *)_8 + -24B]
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:460: note: not consecutive access _8 = MEM[(struct clone_impl *)_5].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception;

/usr/include/boost/exception/exception.hpp:460: note: not consecutive access _9 = MEM[(long int *)_8 + -24B];

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:460: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:460: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:392: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:392: note: Detected interleaving MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base and MEM[(struct exception *)_5]._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: Detected interleaving MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base and MEM[(struct refcount_ptr *)_5 + 8B].px_
/usr/include/boost/exception/exception.hpp:392: note: Detected interleaving MEM[(struct exception *)_5]._vptr.exception and MEM[(struct refcount_ptr *)_5 + 8B].px_
/usr/include/boost/exception/exception.hpp:392: note: can't determine dependence between MEM[(const struct refcount_ptr &)this_6(D) + 8].px_ and MEM[(struct refcount_ptr *)_5 + 8B].px_
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:392: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:392: note: can't force alignment of ref: MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:392: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:392: note: can't force alignment of ref: MEM[(struct exception *)_5]._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:392: note: can't force alignment of ref: MEM[(const struct refcount_ptr &)this_6(D) + 8].px_
/usr/include/boost/exception/exception.hpp:392: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:392: note: can't force alignment of ref: MEM[(struct refcount_ptr *)_5 + 8B].px_
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:392: note: interleaved store with gaps
/usr/include/boost/exception/exception.hpp:392: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/exception.hpp:392: note: not consecutive access _17 = MEM[(const struct refcount_ptr &)this_6(D) + 8].px_;

/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:392: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:392: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct exception *)_5].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(const struct exception &)this_6(D)].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct exception *)_5].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct exception *)_5].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct exception *)_5 + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct bad_exception *)_5 + 40B].D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct bad_exception_ *)_5].D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct bad_exception_ *)_5].D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct clone_impl *)_5].D.700734.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct clone_impl *)_5].D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct exception *)_5].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct exception *)_5 + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct bad_exception *)_5 + 40B].D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct bad_exception_ *)_5].D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct bad_exception_ *)_5].D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct clone_impl *)_5].D.700734.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct clone_impl *)_5].D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct exception *)_5].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct exception *)_5].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct exception *)_5 + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct bad_exception *)_5 + 40B].D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct bad_exception_ *)_5].D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct bad_exception_ *)_5].D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct clone_impl *)_5].D.700734.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct clone_impl *)_5].D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_file_ and MEM[(struct exception *)_5 + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_file_ and MEM[(struct bad_exception *)_5 + 40B].D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_file_ and MEM[(struct bad_exception_ *)_5].D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_file_ and MEM[(struct bad_exception_ *)_5].D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_file_ and MEM[(struct clone_impl *)_5].D.700734.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_file_ and MEM[(struct clone_impl *)_5].D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_file_ and MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct exception *)_5].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct exception *)_5 + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct bad_exception *)_5 + 40B].D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct bad_exception_ *)_5].D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct bad_exception_ *)_5].D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct clone_impl *)_5].D.700734.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct clone_impl *)_5].D.700734.D.202398.D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct exception *)_5 + 40B]._vptr.exception and MEM[(struct bad_exception *)_5 + 40B].D.3094._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _17->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_18 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _18 = _17->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _19 = MEM[(int (*__vtbl_ptr_type) () *)_18 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:437: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:437: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:437: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:460: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:460: note: get vectype with 2 units of type long int
/usr/include/boost/exception/exception.hpp:460: note: vectype: vector(2) long int
/usr/include/boost/exception/exception.hpp:460: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:460: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:460: note: can't force alignment of ref: MEM[(struct clone_impl *)_5].D.700734.D.202397._vptr.exception
/usr/include/boost/exception/exception.hpp:460: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:460: note: can't force alignment of ref: MEM[(long int *)_8 + -24B]
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:460: note: not consecutive access _8 = MEM[(struct clone_impl *)_5].D.700734.D.202397._vptr.exception;

/usr/include/boost/exception/exception.hpp:460: note: not consecutive access _9 = MEM[(long int *)_8 + -24B];

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:460: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:460: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:392: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:392: note: Detected interleaving MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base and MEM[(struct exception *)_5]._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: Detected interleaving MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base and MEM[(struct refcount_ptr *)_5 + 8B].px_
/usr/include/boost/exception/exception.hpp:392: note: Detected interleaving MEM[(struct exception *)_5]._vptr.exception and MEM[(struct refcount_ptr *)_5 + 8B].px_
/usr/include/boost/exception/exception.hpp:392: note: can't determine dependence between MEM[(const struct refcount_ptr &)this_6(D) + 8].px_ and MEM[(struct refcount_ptr *)_5 + 8B].px_
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:392: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:392: note: can't force alignment of ref: MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:392: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:392: note: can't force alignment of ref: MEM[(struct exception *)_5]._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:392: note: can't force alignment of ref: MEM[(const struct refcount_ptr &)this_6(D) + 8].px_
/usr/include/boost/exception/exception.hpp:392: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:392: note: can't force alignment of ref: MEM[(struct refcount_ptr *)_5 + 8B].px_
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:392: note: interleaved store with gaps
/usr/include/boost/exception/exception.hpp:392: note: not vectorized: complicated access pattern.
/usr/include/boost/exception/exception.hpp:392: note: not consecutive access _17 = MEM[(const struct refcount_ptr &)this_6(D) + 8].px_;

/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:392: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:392: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct exception *)_5].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(const struct exception &)this_6(D)].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct exception *)_5].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct exception *)_5].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct exception *)_5 + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct bad_alloc *)_5 + 40B].D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct bad_alloc_ *)_5].D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct bad_alloc_ *)_5].D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct clone_impl *)_5].D.700536.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct clone_impl *)_5].D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_function_ and MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct exception *)_5].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct exception *)_5 + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct bad_alloc *)_5 + 40B].D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct bad_alloc_ *)_5].D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct bad_alloc_ *)_5].D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct clone_impl *)_5].D.700536.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct clone_impl *)_5].D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_function_ and MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct exception *)_5].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct exception *)_5].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct exception *)_5 + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct bad_alloc *)_5 + 40B].D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct bad_alloc_ *)_5].D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct bad_alloc_ *)_5].D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct clone_impl *)_5].D.700536.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct clone_impl *)_5].D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_file_ and MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_file_ and MEM[(struct exception *)_5 + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_file_ and MEM[(struct bad_alloc *)_5 + 40B].D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_file_ and MEM[(struct bad_alloc_ *)_5].D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_file_ and MEM[(struct bad_alloc_ *)_5].D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_file_ and MEM[(struct clone_impl *)_5].D.700536.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_file_ and MEM[(struct clone_impl *)_5].D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5].throw_file_ and MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct exception *)_5].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct exception *)_5 + 40B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct bad_alloc *)_5 + 40B].D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct bad_alloc_ *)_5].D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct bad_alloc_ *)_5].D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct clone_impl *)_5].D.700536.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct clone_impl *)_5].D.700536.D.202346.D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D)].throw_line_ and MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct exception *)_5 + 40B]._vptr.exception and MEM[(struct bad_alloc *)_5 + 40B].D.10135._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _17->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_18 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _18 = _17->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _19 = MEM[(int (*__vtbl_ptr_type) () *)_18 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:437: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:437: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:437: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_5 + 48B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:460: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:460: note: get vectype with 2 units of type long int
/usr/include/boost/exception/exception.hpp:460: note: vectype: vector(2) long int
/usr/include/boost/exception/exception.hpp:460: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:460: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:460: note: can't force alignment of ref: MEM[(struct clone_impl *)_5].D.700536.D.202345._vptr.exception
/usr/include/boost/exception/exception.hpp:460: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:460: note: can't force alignment of ref: MEM[(long int *)_8 + -24B]
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:460: note: not consecutive access _8 = MEM[(struct clone_impl *)_5].D.700536.D.202345._vptr.exception;

/usr/include/boost/exception/exception.hpp:460: note: not consecutive access _9 = MEM[(long int *)_8 + -24B];

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:460: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:460: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:392: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:392: note: Detected interleaving MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base and MEM[(struct exception *)_5]._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: Detected interleaving MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base and MEM[(struct logic_error *)_5].D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: can't determine dependence between MEM[(struct exception *)_5]._vptr.exception and MEM[(struct logic_error *)_5].D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: not vectorized: unhandled data dependence in basic block.

/usr/include/c++/4.8/stdexcept:55: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:55: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:55: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:100: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: === vect_pattern_recog ===
/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/stdexcept:100: note: can't determine dependence between MEM[(struct out_of_range *)_5].D.51896.D.51787._vptr.exception and MEM[(struct bad_day_of_month *)_5].D.133507.D.51896.D.51787._vptr.exception
/usr/include/c++/4.8/stdexcept:100: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(const struct exception &)this_6(D) + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.695654.D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct error_info_injector *)_5].D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct error_info_injector *)_5].D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct clone_impl *)_5].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct clone_impl *)_5].D.695654.D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct exception *)_5 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct exception *)_5 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_5].D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_5].D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct clone_impl *)_5].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct clone_impl *)_5].D.695654.D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct error_info_injector *)_5].D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct error_info_injector *)_5].D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct clone_impl *)_5].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct clone_impl *)_5].D.695654.D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct exception *)_5 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_5].D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_5].D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct clone_impl *)_5].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct clone_impl *)_5].D.695654.D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct error_info_injector *)_5].D.695587.D.133507.D.51896.D.51787._vptr.exception and MEM[(struct error_info_injector *)_5].D.695588._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct error_info_injector *)_5].D.695587.D.133507.D.51896.D.51787._vptr.exception and MEM[(struct clone_impl *)_5].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _19->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_20 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _20 = _19->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _21 = MEM[(int (*__vtbl_ptr_type) () *)_20 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: can't force alignment of ref: MEM[(struct bad_day_of_month *)_5].D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: not consecutive access MEM[(struct bad_day_of_month *)_5].D.133507.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian16bad_day_of_monthE + 16B];

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:437: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:437: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:437: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:460: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:460: note: get vectype with 2 units of type long int
/usr/include/boost/exception/exception.hpp:460: note: vectype: vector(2) long int
/usr/include/boost/exception/exception.hpp:460: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:460: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:460: note: can't force alignment of ref: MEM[(struct clone_impl *)_5].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:460: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:460: note: can't force alignment of ref: MEM[(long int *)_8 + -24B]
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:460: note: not consecutive access _8 = MEM[(struct clone_impl *)_5].D.695654.D.695587.D.133507.D.51896.D.51787._vptr.exception;

/usr/include/boost/exception/exception.hpp:460: note: not consecutive access _9 = MEM[(long int *)_8 + -24B];

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:460: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:460: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:392: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:392: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:392: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:392: note: Detected interleaving MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base and MEM[(struct exception *)_5]._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: Detected interleaving MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base and MEM[(struct runtime_error *)_5].D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: can't determine dependence between MEM[(struct exception *)_5]._vptr.exception and MEM[(struct runtime_error *)_5].D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:392: note: not vectorized: unhandled data dependence in basic block.

/usr/include/c++/4.8/stdexcept:112: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:112: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:112: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B]._vptr.exception and MEM[(struct refcount_ptr *)_5 + 24B].px_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct refcount_ptr &)this_6(D) + 24].px_ and MEM[(struct refcount_ptr *)_5 + 24B].px_
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:208: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:208: note: can't force alignment of ref: MEM[(struct exception *)_5 + 16B]._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:208: note: can't force alignment of ref: MEM[(const struct refcount_ptr &)this_6(D) + 24].px_
/usr/include/boost/exception/exception.hpp:208: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:208: note: can't force alignment of ref: MEM[(struct refcount_ptr *)_5 + 24B].px_
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving of size 2
/usr/include/boost/exception/exception.hpp:208: note: not consecutive access _19 = MEM[(const struct refcount_ptr &)this_6(D) + 24].px_;

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: Build SLP for MEM[(struct exception *)_5 + 16B]._vptr.exception = &MEM[(void *)&_ZTVN5boost9exceptionE + 16B];

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vect_is_simple_use: operand &MEM[(void *)&_ZTVN5boost9exceptionE + 16B]
/usr/include/boost/exception/exception.hpp:208: note: Build SLP failed: can't find def for &MEM[(void *)&_ZTVN5boost9exceptionE + 16B]
/usr/include/boost/exception/exception.hpp:208: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(const struct exception &)this_6(D) + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.695067.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.695067.D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_function_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct error_info_injector *)_5].D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct error_info_injector *)_5].D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct clone_impl *)_5].D.695067.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct clone_impl *)_5].D.695067.D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct exception *)_5 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct exception *)_5 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_5].D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct error_info_injector *)_5].D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct clone_impl *)_5].D.695067.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct clone_impl *)_5].D.695067.D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_file_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct error_info_injector *)_5].D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct error_info_injector *)_5].D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct clone_impl *)_5].D.695067.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct clone_impl *)_5].D.695067.D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct exception *)_5 + 16B].throw_file_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct exception *)_5 + 16B].throw_line_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_5].D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct error_info_injector *)_5].D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct clone_impl *)_5].D.695067.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct clone_impl *)_5].D.695067.D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)this_6(D) + 16].throw_line_ and MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(struct error_info_injector *)_5].D.695000.D.51926._vptr.exception and MEM[(struct error_info_injector *)_5].D.695001._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct error_info_injector *)_5].D.695000.D.51926._vptr.exception and MEM[(struct clone_impl *)_5].D.695067.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _19->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_20 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _20 = _19->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _21 = MEM[(int (*__vtbl_ptr_type) () *)_20 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:320: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:320: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:320: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:437: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:437: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:437: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:460: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:460: note: get vectype with 2 units of type long int
/usr/include/boost/exception/exception.hpp:460: note: vectype: vector(2) long int
/usr/include/boost/exception/exception.hpp:460: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:460: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:460: note: can't force alignment of ref: MEM[(struct clone_impl *)_5].D.695067.D.695000.D.51926._vptr.exception
/usr/include/boost/exception/exception.hpp:460: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:460: note: can't force alignment of ref: MEM[(long int *)_8 + -24B]
/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:460: note: not consecutive access _8 = MEM[(struct clone_impl *)_5].D.695067.D.695000.D.51926._vptr.exception;

/usr/include/boost/exception/exception.hpp:460: note: not consecutive access _9 = MEM[(long int *)_8 + -24B];

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:460: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:460: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/exception.hpp:460: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:460: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:460: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:458: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:458: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:458: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:115: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:115: note: get vectype with 2 units of type const int_type
/usr/include/boost/date_time/int_adapter.hpp:115: note: vectype: const vector(2) long int
/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_pattern_recog ===
/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/int_adapter.hpp:115: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/int_adapter.hpp:115: note: can't force alignment of ref: MEM[(const struct int_adapter *)lhs_4(D)].value_
/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/int_adapter.hpp:115: note: not consecutive access _16 = MEM[(const struct int_adapter *)lhs_4(D)].value_;

/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_slp ===
/usr/include/boost/date_time/int_adapter.hpp:115: note: Failed to SLP the basic block.
/usr/include/boost/date_time/int_adapter.hpp:115: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/int_adapter.hpp:115: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:115: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:264: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:264: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:264: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:264: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:264: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:264: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:264: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:264: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:264: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:277: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:277: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:277: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:282: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:282: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:282: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:102: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:102: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:102: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:103: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:103: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:103: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/time_system_counted.hpp:233: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/time_system_counted.hpp:233: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/time_system_counted.hpp:233: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/time_duration.hpp:68: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/time_duration.hpp:68: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/time_duration.hpp:68: note: get vectype with 2 units of type int_type
/usr/include/boost/date_time/time_duration.hpp:68: note: vectype: vector(2) long int
/usr/include/boost/date_time/time_duration.hpp:68: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/time_duration.hpp:68: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/time_duration.hpp:68: note: === vect_pattern_recog ===
/usr/include/boost/date_time/time_duration.hpp:68: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/time_duration.hpp:68: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/time_duration.hpp:68: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/time_duration.hpp:68: note: can't force alignment of ref: MEM[(struct time_duration *)_9(D)]
/usr/include/boost/date_time/time_duration.hpp:68: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/time_duration.hpp:68: note: misalign = 0 bytes of ref D.756586
/usr/include/boost/date_time/time_duration.hpp:68: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/time_duration.hpp:68: note: not consecutive access MEM[(struct time_duration *)_9(D)] = SR.8508_92;

/usr/include/boost/date_time/time_duration.hpp:68: note: not consecutive access D.756586 ={v} {CLOBBER};

/usr/include/boost/date_time/time_duration.hpp:68: note: === vect_analyze_slp ===
/usr/include/boost/date_time/time_duration.hpp:68: note: Failed to SLP the basic block.
/usr/include/boost/date_time/time_duration.hpp:68: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/time_system_counted.hpp:233: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/time_system_counted.hpp:233: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/time_system_counted.hpp:233: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:131: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:131: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:131: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:115: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:115: note: get vectype with 2 units of type const int_type
/usr/include/boost/date_time/int_adapter.hpp:115: note: vectype: const vector(2) long int
/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_pattern_recog ===
/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/int_adapter.hpp:115: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/int_adapter.hpp:115: note: can't force alignment of ref: MEM[(const struct int_adapter *)rhs_5(D)].value_
/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/int_adapter.hpp:115: note: not consecutive access _19 = MEM[(const struct int_adapter *)rhs_5(D)].value_;

/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_slp ===
/usr/include/boost/date_time/int_adapter.hpp:115: note: Failed to SLP the basic block.
/usr/include/boost/date_time/int_adapter.hpp:115: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/int_adapter.hpp:131: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:131: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:131: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/time_system_counted.hpp:241: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/time_system_counted.hpp:241: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/time_system_counted.hpp:241: note: get vectype with 2 units of type int_type
/usr/include/boost/date_time/time_system_counted.hpp:241: note: vectype: vector(2) long int
/usr/include/boost/date_time/time_system_counted.hpp:241: note: === vect_pattern_recog ===
/usr/include/boost/date_time/time_system_counted.hpp:241: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/time_system_counted.hpp:241: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/time_system_counted.hpp:241: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/time_system_counted.hpp:241: note: can't force alignment of ref: MEM[(struct int_adapter *)_9(D)].value_
/usr/include/boost/date_time/time_system_counted.hpp:241: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/time_system_counted.hpp:241: note: not consecutive access MEM[(struct int_adapter *)_9(D)].value_ = fs_14;

/usr/include/boost/date_time/time_system_counted.hpp:241: note: === vect_analyze_slp ===
/usr/include/boost/date_time/time_system_counted.hpp:241: note: Failed to SLP the basic block.
/usr/include/boost/date_time/time_system_counted.hpp:241: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/int_adapter.hpp:131: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:131: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:131: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:264: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:264: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:264: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:273: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:273: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:273: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/time_system_counted.hpp:112: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/time_system_counted.hpp:112: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/time_system_counted.hpp:112: note: get vectype with 2 units of type int_type
/usr/include/boost/date_time/time_system_counted.hpp:112: note: vectype: vector(2) long int
/usr/include/boost/date_time/time_system_counted.hpp:112: note: === vect_pattern_recog ===
/usr/include/boost/date_time/time_system_counted.hpp:112: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/time_system_counted.hpp:112: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/time_system_counted.hpp:112: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/time_system_counted.hpp:112: note: can't force alignment of ref: MEM[(const struct counted_time_rep *)rhs_5(D)]
/usr/include/boost/date_time/time_system_counted.hpp:112: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/time_system_counted.hpp:112: note: not consecutive access SR.3476_99 = MEM[(const struct counted_time_rep *)rhs_5(D)];

/usr/include/boost/date_time/time_system_counted.hpp:112: note: === vect_analyze_slp ===
/usr/include/boost/date_time/time_system_counted.hpp:112: note: Failed to SLP the basic block.
/usr/include/boost/date_time/time_system_counted.hpp:112: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/time_system_counted.hpp:233: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/time_system_counted.hpp:233: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/time_system_counted.hpp:233: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:115: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:115: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: Detected interleaving MEM[(const Scalar &)mat_5(D) + 64] and MEM[(const Scalar &)mat_5(D) + 32]
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: Detected interleaving MEM[(const Scalar &)mat_5(D) + 64] and MEM[(const Scalar &)mat_5(D)]
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: Detected interleaving MEM[(const Scalar &)mat_5(D) + 32] and MEM[(const Scalar &)mat_5(D)]
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: can't force alignment of ref: MEM[(const Scalar &)mat_5(D) + 64]
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: can't force alignment of ref: MEM[(const Scalar &)mat_5(D) + 32]
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: can't force alignment of ref: MEM[(const Scalar &)mat_5(D)]
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: Detected interleaving of size 3
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Core/Diagonal.h:114: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: vect_is_simple_use: operand t_7
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: def_stmt: t_7 = sqrt (_6);

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: vect_is_simple_use: operand t_11
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: def_stmt: t_11 = 5.0e-1 / t_7;

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: vect_is_simple_use: operand t_11
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: def_stmt: t_11 = 5.0e-1 / t_7;

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: vect_is_simple_use: operand t_11
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: def_stmt: t_11 = 5.0e-1 / t_7;

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: can't determine dependence between MEM[(Scalar &)q_8(D) + 24] and MEM[(const Scalar &)mat_5(D) + 40]
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:733: note: not vectorized: unhandled data dependence in basic block.

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: get vectype with 2 units of type DenseIndex
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: vect_is_simple_use: operand _118
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: def_stmt: _118 = _58 > _60;

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: get vectype with 2 units of type CoeffReturnType
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: get vectype with 2 units of type unsigned long
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: vectype: vector(2) unsigned long
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: vect_recog_bool_pattern: detected: 
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: pattern recognized: patt_247 = (DenseIndex) patt_249;

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: additional pattern stmt: patt_249 = _58 > _60 ? 1 : 0;

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: vect_is_simple_use: operand i_117
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: def_stmt: i_117 = (DenseIndex) _118;

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: vect_is_simple_use: operand _118
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: def_stmt: _118 = _58 > _60;

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: vect_is_simple_use: operand 3
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: vect_is_simple_use: operand _65
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: def_stmt: _65 = (long unsigned int) _64;

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: can't force alignment of ref: *_67
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: not consecutive access _27 = *_67;

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:743: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: can't force alignment of ref: MEM[(const Scalar &)pretmp_180]
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: not consecutive access pretmp_181 = MEM[(const Scalar &)pretmp_180];

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:725: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand t_38
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: t_38 = sqrt (_37);

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _44
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _44 = _42 - _43;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _49
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _49 = _48 + _47;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _54
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _54 = _53 + _52;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't determine dependence between *_77 and *_86
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't determine dependence between *_77 and MEM[(Scalar &)q_8(D) + 24]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't determine dependence between *_77 and *_97
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't determine dependence between *_77 and *_108
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't determine dependence between *_82 and *_86
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't determine dependence between *_82 and MEM[(Scalar &)q_8(D) + 24]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't determine dependence between *_82 and *_97
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't determine dependence between *_82 and *_108
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't determine dependence between *_86 and *_90
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: not vectorized: unhandled data dependence in basic block.

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:757: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:757: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Geometry/Quaternion.h:757: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:28: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.822888 + 24B].px_ and MEM[(struct exception *)&D.822888 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.822888 + 24B].px_ and MEM[(struct exception *)&D.822888 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.822888 + 24B].px_ and D.822888.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.822888 + 24B].px_ and D.822888.D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: can't determine dependence between MEM[(struct refcount_ptr *)&D.822888 + 24B].px_ and MEM[(struct exception *)_5]._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: not vectorized: unhandled data dependence in basic block.

/usr/include/c++/4.8/stdexcept:55: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:55: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:55: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:100: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: === vect_pattern_recog ===
/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/stdexcept:100: note: can't determine dependence between MEM[(struct out_of_range *)_5].D.51896.D.51787._vptr.exception and MEM[(struct bad_year *)_5].D.133659.D.51896.D.51787._vptr.exception
/usr/include/c++/4.8/stdexcept:100: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.822888 + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)&D.822888 + 16].throw_function_ and MEM[(const struct exception &)&D.822888 + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.822888 + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.822888 + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.822888 + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.822947.D.822880.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.822888 + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.822947.D.822881._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(const struct exception &)&D.822888 + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _31->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_32 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _32 = _31->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _33 = MEM[(int (*__vtbl_ptr_type) () *)_32 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: can't force alignment of ref: MEM[(struct bad_year *)_5].D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: not consecutive access MEM[(struct bad_year *)_5].D.133659.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian8bad_yearE + 16B];

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:446: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:446: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:446: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/gregorian/greg_year.hpp:23: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_year.hpp:23: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_year.hpp:23: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: misalign = 0 bytes of ref D.1130252._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _7 = D.1130252._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: misalign = 0 bytes of ref D.1130252._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _9 = D.1130252._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: misalign = 0 bytes of ref D.1099147.D.133659.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: not consecutive access D.1099147.D.133659.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian8bad_yearE + 16B];

/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_year.hpp:20: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:28: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:28: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:28: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.823038 + 24B].px_ and MEM[(struct exception *)&D.823038 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.823038 + 24B].px_ and MEM[(struct exception *)&D.823038 + 16B].throw_file_
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.823038 + 24B].px_ and D.823038.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: Detected interleaving MEM[(struct refcount_ptr *)&D.823038 + 24B].px_ and D.823038.D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: can't determine dependence between MEM[(struct refcount_ptr *)&D.823038 + 24B].px_ and MEM[(struct exception *)_5]._vptr.exception
/usr/include/boost/exception/exception.hpp:28: note: not vectorized: unhandled data dependence in basic block.

/usr/include/c++/4.8/stdexcept:55: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:55: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:55: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/stdexcept:100: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/stdexcept:100: note: === vect_pattern_recog ===
/usr/include/c++/4.8/stdexcept:100: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/stdexcept:100: note: can't determine dependence between MEM[(struct out_of_range *)_5].D.51896.D.51787._vptr.exception and MEM[(struct bad_month *)_5].D.136409.D.51896.D.51787._vptr.exception
/usr/include/c++/4.8/stdexcept:100: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:208: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 4 units of type int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(4) int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:208: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:208: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.823038 + 16].throw_function_ and MEM[(struct exception *)_5 + 16B].throw_function_
/usr/include/boost/exception/exception.hpp:208: note: Detected interleaving MEM[(const struct exception &)&D.823038 + 16].throw_function_ and MEM[(const struct exception &)&D.823038 + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.823038 + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.823038 + 16].throw_function_ and MEM[(struct error_info_injector *)_5].D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.823038 + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.823097.D.823030.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(const struct exception &)&D.823038 + 16].throw_function_ and MEM[(struct clone_impl *)_5].D.823097.D.823031._vptr.exception
/usr/include/boost/exception/exception.hpp:208: note: can't determine dependence between MEM[(struct exception *)_5 + 16B].throw_function_ and MEM[(const struct exception &)&D.823038 + 16].throw_file_
/usr/include/boost/exception/exception.hpp:208: note: not vectorized: unhandled data dependence in basic block.

/usr/include/boost/exception/exception.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:72: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: _31->_vptr.error_info_container
/usr/include/boost/exception/exception.hpp:72: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:72: note: can't force alignment of ref: MEM[(int (*__vtbl_ptr_type) () *)_32 + 24B]
/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _32 = _31->_vptr.error_info_container;

/usr/include/boost/exception/exception.hpp:72: note: not consecutive access _33 = MEM[(int (*__vtbl_ptr_type) () *)_32 + 24B];

/usr/include/boost/exception/exception.hpp:72: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:72: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:72: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: can't force alignment of ref: MEM[(struct bad_month *)_5].D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: not consecutive access MEM[(struct bad_month *)_5].D.136409.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian9bad_monthE + 16B];

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:446: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:446: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:446: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/exception.hpp:401: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/exception.hpp:401: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: vectype: vector(2) long unsigned int
/usr/include/boost/exception/exception.hpp:401: note: === vect_pattern_recog ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_dependences ===
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/exception.hpp:401: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/exception.hpp:401: note: can't force alignment of ref: MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base
/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/exception.hpp:401: note: not consecutive access MEM[(struct clone_base *)_5 + 56B]._vptr.clone_base = &MEM[(void *)&_ZTVN5boost16exception_detail10clone_baseE + 16B];

/usr/include/boost/exception/exception.hpp:401: note: === vect_analyze_slp ===
/usr/include/boost/exception/exception.hpp:401: note: Failed to SLP the basic block.
/usr/include/boost/exception/exception.hpp:401: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:60: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:60: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:60: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/throw_exception.hpp:67: note: ===vect_slp_analyze_bb===

/usr/include/boost/throw_exception.hpp:67: note: === vect_analyze_data_refs ===

/usr/include/boost/throw_exception.hpp:67: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/gregorian/greg_month.hpp:46: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_month.hpp:46: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_month.hpp:46: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: misalign = 0 bytes of ref D.1130294._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _7 = D.1130294._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: misalign = 0 bytes of ref D.1130294._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _9 = D.1130294._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: misalign = 0 bytes of ref D.1099192.D.136409.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: not consecutive access D.1099192.D.136409.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian9bad_monthE + 16B];

/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_month.hpp:44: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/microsec_time_clock.hpp:84: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/microsec_time_clock.hpp:84: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/microsec_time_clock.hpp:84: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/c_time.hpp:88: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/c_time.hpp:88: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/c_time.hpp:88: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/c_time.hpp:88: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/c_time.hpp:88: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/c_time.hpp:88: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: get vectype with 4 units of type int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vectype: vector(4) int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_pattern_recog ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vect_is_simple_use: operand _21
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: def_stmt: _21 = curr_ptr_37->tm_mday;

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: type of def: 3.
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: can't force alignment of ref: curr_ptr_37->tm_mday
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: not consecutive access _21 = curr_ptr_37->tm_mday;

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_slp ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: Failed to SLP the basic block.
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/c_time.hpp:88: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/c_time.hpp:88: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/c_time.hpp:88: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: ===vect_slp_analyze_bb===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: === vect_analyze_data_refs ===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: ===vect_slp_analyze_bb===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: === vect_analyze_data_refs ===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: misalign = 0 bytes of ref D.1130324._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _38 = D.1130324._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/constrained_value.hpp:69: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/constrained_value.hpp:69: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/constrained_value.hpp:69: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/constrained_value.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/constrained_value.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/constrained_value.hpp:72: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: get vectype with 4 units of type int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vectype: vector(4) int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_pattern_recog ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: can't force alignment of ref: curr_ptr_37->tm_mon
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: not consecutive access _23 = curr_ptr_37->tm_mon;

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_slp ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: Failed to SLP the basic block.
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/constrained_value.hpp:69: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/constrained_value.hpp:69: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/constrained_value.hpp:69: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/constrained_value.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/constrained_value.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/constrained_value.hpp:72: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: get vectype with 4 units of type int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vectype: vector(4) int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_pattern_recog ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: can't force alignment of ref: curr_ptr_37->tm_year
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: not consecutive access _27 = curr_ptr_37->tm_year;

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_slp ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: Failed to SLP the basic block.
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/constrained_value.hpp:69: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/constrained_value.hpp:69: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/constrained_value.hpp:69: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/constrained_value.hpp:72: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/constrained_value.hpp:72: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/constrained_value.hpp:72: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/date.hpp:71: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/date.hpp:71: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/date.hpp:71: note: not vectorized: no vectype for stmt: D.1130346 ={v} {CLOBBER};
 scalar_type: struct ymd_type
/usr/include/boost/date_time/date.hpp:71: note: === vect_pattern_recog ===
/usr/include/boost/date_time/date.hpp:71: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/date.hpp:71: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/date.hpp:71: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/date.hpp:71: note: === vect_analyze_slp ===
/usr/include/boost/date_time/date.hpp:71: note: Failed to SLP the basic block.
/usr/include/boost/date_time/date.hpp:71: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: ===vect_slp_analyze_bb===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: === vect_analyze_data_refs ===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: ===vect_slp_analyze_bb===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: === vect_analyze_data_refs ===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: ===vect_slp_analyze_bb===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: === vect_analyze_data_refs ===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/gregorian_calendar.ipp:167: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian_calendar.ipp:167: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian_calendar.ipp:167: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/gregorian_calendar.ipp:167: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian_calendar.ipp:167: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian_calendar.ipp:167: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: ===vect_slp_analyze_bb===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: === vect_analyze_data_refs ===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/gregorian/greg_date.hpp:58: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_date.hpp:58: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_date.hpp:58: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/gregorian/greg_date.hpp:59: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_date.hpp:59: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_date.hpp:59: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/gregorian/greg_day.hpp:27: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_day.hpp:27: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_day.hpp:27: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:27: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:27: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:27: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:27: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:27: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_day.hpp:27: note: misalign = 0 bytes of ref D.1130349.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_day.hpp:27: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:27: note: not consecutive access D.1130349.D.133507.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian16bad_day_of_monthE + 16B];

/usr/include/boost/date_time/gregorian/greg_day.hpp:27: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:27: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_day.hpp:27: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_pattern_recog ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: misalign = 0 bytes of ref D.1130349.D.133507.D.51896.D.51787._vptr.exception
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: not consecutive access D.1130349.D.133507.D.51896.D.51787._vptr.exception = &MEM[(void *)&_ZTVN5boost9gregorian16bad_day_of_monthE + 16B];

/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: === vect_analyze_slp ===
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: Failed to SLP the basic block.
/usr/include/boost/date_time/gregorian/greg_day.hpp:20: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: ===vect_slp_analyze_bb===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: === vect_analyze_data_refs ===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: ===vect_slp_analyze_bb===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: === vect_analyze_data_refs ===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: misalign = 0 bytes of ref D.1130348._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _51 = D.1130348._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: get vectype with 8 units of type short unsigned int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vectype: vector(8) short unsigned int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: get vectype with 8 units of type short unsigned int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vectype: vector(8) short unsigned int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: get vectype with 8 units of type short unsigned int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vectype: vector(8) short unsigned int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: get vectype with 4 units of type int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vectype: vector(4) int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: get vectype with 4 units of type int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vectype: vector(4) int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: get vectype with 4 units of type int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vectype: vector(4) int
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_pattern_recog ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vect_is_simple_use: operand _18
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: def_stmt: _18 = tv.tv_usec;

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: type of def: 2.
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: Detected interleaving curr_ptr_37->tm_sec and curr_ptr_37->tm_min
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: Detected interleaving curr_ptr_37->tm_sec and curr_ptr_37->tm_hour
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: Detected interleaving curr_ptr_37->tm_min and curr_ptr_37->tm_hour
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: misalign = 0 bytes of ref D.1130315
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: misalign = 0 bytes of ref D.1130314
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: misalign = 0 bytes of ref D.1130313
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: can't force alignment of ref: curr_ptr_37->tm_sec
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: can't force alignment of ref: curr_ptr_37->tm_min
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: can't force alignment of ref: curr_ptr_37->tm_hour
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: not consecutive access D.1130315 ={v} {CLOBBER};

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: not consecutive access D.1130314 ={v} {CLOBBER};

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: not consecutive access D.1130313 ={v} {CLOBBER};

/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: Detected interleaving of size 3
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: === vect_analyze_slp ===
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: Failed to SLP the basic block.
/usr/include/boost/date_time/microsec_time_clock.hpp:103: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/time_resolution_traits.hpp:117: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/time_resolution_traits.hpp:117: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/time_resolution_traits.hpp:117: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/time_resolution_traits.hpp:27: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/time_resolution_traits.hpp:27: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/time_resolution_traits.hpp:27: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/time_resolution_traits.hpp:130: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/time_resolution_traits.hpp:130: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/time_resolution_traits.hpp:130: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:115: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:115: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/microsec_time_clock.hpp:116: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/microsec_time_clock.hpp:116: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/microsec_time_clock.hpp:116: note: not vectorized: no vectype for stmt: D.1130317 ={v} {CLOBBER};
 scalar_type: struct time_duration_type
/usr/include/boost/date_time/microsec_time_clock.hpp:116: note: === vect_pattern_recog ===
/usr/include/boost/date_time/microsec_time_clock.hpp:116: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/microsec_time_clock.hpp:116: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/microsec_time_clock.hpp:116: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/microsec_time_clock.hpp:116: note: === vect_analyze_slp ===
/usr/include/boost/date_time/microsec_time_clock.hpp:116: note: Failed to SLP the basic block.
/usr/include/boost/date_time/microsec_time_clock.hpp:116: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/int_adapter.hpp:115: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:115: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:115: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:115: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:211: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:211: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:211: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:215: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:215: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:215: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:215: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:215: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:215: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:215: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:215: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:215: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: ===vect_slp_analyze_bb===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: === vect_analyze_data_refs ===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:228: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:228: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:228: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:233: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:233: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:233: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/time_system_counted.hpp:227: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/time_system_counted.hpp:227: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/time_system_counted.hpp:227: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/date_time/time_system_counted.hpp:227: note: vectype: vector(2) long unsigned int
/usr/include/boost/date_time/time_system_counted.hpp:227: note: === vect_pattern_recog ===
/usr/include/boost/date_time/time_system_counted.hpp:227: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/time_system_counted.hpp:227: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/time_system_counted.hpp:227: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/time_system_counted.hpp:227: note: misalign = 0 bytes of ref D.1130410
/usr/include/boost/date_time/time_system_counted.hpp:227: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/time_system_counted.hpp:227: note: not consecutive access D.1130410 ={v} {CLOBBER};

/usr/include/boost/date_time/time_system_counted.hpp:227: note: === vect_analyze_slp ===
/usr/include/boost/date_time/time_system_counted.hpp:227: note: Failed to SLP the basic block.
/usr/include/boost/date_time/time_system_counted.hpp:227: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/time_system_counted.hpp:38: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/time_system_counted.hpp:38: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/time_system_counted.hpp:38: note: get vectype with 4 units of type unsigned int
/usr/include/boost/date_time/time_system_counted.hpp:38: note: vectype: vector(4) unsigned int
/usr/include/boost/date_time/time_system_counted.hpp:38: note: === vect_pattern_recog ===
/usr/include/boost/date_time/time_system_counted.hpp:38: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/time_system_counted.hpp:38: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/time_system_counted.hpp:38: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/time_system_counted.hpp:38: note: misalign = 0 bytes of ref D.1130383
/usr/include/boost/date_time/time_system_counted.hpp:38: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/time_system_counted.hpp:38: note: not consecutive access D.1130383 ={v} {CLOBBER};

/usr/include/boost/date_time/time_system_counted.hpp:38: note: === vect_analyze_slp ===
/usr/include/boost/date_time/time_system_counted.hpp:38: note: Failed to SLP the basic block.
/usr/include/boost/date_time/time_system_counted.hpp:38: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/gregorian_calendar.ipp:78: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/gregorian_calendar.ipp:78: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/gregorian_calendar.ipp:78: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:131: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:131: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:131: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:115: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:115: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:115: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:131: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:131: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:131: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/time_system_counted.hpp:230: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/time_system_counted.hpp:230: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/time_system_counted.hpp:230: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:215: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:215: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:215: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/int_adapter.hpp:224: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:224: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:224: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: ===vect_slp_analyze_bb===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: === vect_analyze_data_refs ===

/usr/include/boost/thread/pthread/thread_data.hpp:253: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/thread/pthread/thread_data.hpp:255: note: ===vect_slp_analyze_bb===

/usr/include/boost/thread/pthread/thread_data.hpp:255: note: === vect_analyze_data_refs ===

/usr/include/boost/thread/pthread/thread_data.hpp:255: note: get vectype with 2 units of type int_type
/usr/include/boost/thread/pthread/thread_data.hpp:255: note: vectype: vector(2) long int
/usr/include/boost/thread/pthread/thread_data.hpp:255: note: not vectorized: no vectype for stmt: D.1130461 ={v} {CLOBBER};
 scalar_type: struct ymd_type
/usr/include/boost/thread/pthread/thread_data.hpp:255: note: === vect_pattern_recog ===
/usr/include/boost/thread/pthread/thread_data.hpp:255: note: === vect_analyze_dependences ===
/usr/include/boost/thread/pthread/thread_data.hpp:255: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/thread/pthread/thread_data.hpp:255: note: vect_compute_data_ref_alignment:
/usr/include/boost/thread/pthread/thread_data.hpp:255: note: misalign = 0 bytes of ref MEM[(struct ptime *)&D.754538]
/usr/include/boost/thread/pthread/thread_data.hpp:255: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/thread/pthread/thread_data.hpp:255: note: not consecutive access MEM[(struct ptime *)&D.754538] = SR.8529_199;

/usr/include/boost/thread/pthread/thread_data.hpp:255: note: === vect_analyze_slp ===
/usr/include/boost/thread/pthread/thread_data.hpp:255: note: Failed to SLP the basic block.
/usr/include/boost/thread/pthread/thread_data.hpp:255: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/date_time/int_adapter.hpp:211: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/int_adapter.hpp:211: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/int_adapter.hpp:211: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/DenseStorage.h:78: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/DenseStorage.h:78: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/DenseStorage.h:78: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/DenseStorage.h:78: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/DenseStorage.h:78: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/DenseStorage.h:78: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/DenseStorage.h:80: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/DenseStorage.h:80: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/DenseStorage.h:80: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type long unsigned int
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) long unsigned int
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type long unsigned int
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) long unsigned int
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand i_4(D)
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: GIMPLE_NOP

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand _9
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: _9 = (long unsigned int) _8;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: Detected interleaving MEM[(struct MapBase *)this_1(D)].m_data and MEM[(struct BlockImpl_dense *)this_1(D)].m_xpr
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't force alignment of ref: MEM[(struct MapBase *)this_1(D)].m_data
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't force alignment of ref: MEM[(struct BlockImpl_dense *)this_1(D)].m_xpr
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't force alignment of ref: MEM[(Index *)this_1(D) + 24B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: interleaved store with gaps
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: not vectorized: complicated access pattern.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: not consecutive access MEM[(Index *)this_1(D) + 24B] = 3;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/Block.h:119: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Block.h:119: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Block.h:119: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at /usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ===== analyze_loop_nest =====
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_loop_form ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === get_loop_niters ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> get_loop_niters:2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_scalar_cycles ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: x_136 = PHI <x_174(7), &m(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Access function of PHI: {(Scalar * restrict) &m, +, 16}_1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: step: 16,  init: (Scalar * restrict) &m
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Detected induction.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: y_135 = PHI <y_175(7), &MEM[(void *)&m + 8B](20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Access function of PHI: {(Scalar * restrict) &MEM[(void *)&m + 8B], +, 16}_1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: step: 16,  init: (Scalar * restrict) &MEM[(void *)&m + 8B]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Detected induction.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: i_137 = PHI <i_177(7), 0(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Access function of PHI: {0, +, 1}_1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: step: 1,  init: 0
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Detected induction.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: .MEM_129 = PHI <.MEM_266(7), .MEM_22(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: ivtmp_89 = PHI <ivtmp_88(7), 2(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Access function of PHI: {2, +, 18446744073709551615}_1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: step: 18446744073709551615,  init: 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Detected induction.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand xi_164
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_166
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand xi_164
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_166
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_mark_stmts_to_be_vectorized ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: phi relevant? x_136 = PHI <x_174(7), &m(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: phi relevant? y_135 = PHI <y_175(7), &MEM[(void *)&m + 8B](20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: phi relevant? i_137 = PHI <i_177(7), 0(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: phi relevant? .MEM_129 = PHI <.MEM_266(7), .MEM_22(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: phi relevant? ivtmp_89 = PHI <ivtmp_88(7), 2(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? _167 = xi_164 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? _168 = yi_166 * rot1$8_236;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? _169 = _168 + _167;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? *x_136 = _169;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vec_stmt_relevant_p: stmt has vdefs.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? _171 = xi_164 * prephitmp_190;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? _172 = yi_166 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? _173 = _172 + _171;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? *y_135 = _173;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vec_stmt_relevant_p: stmt has vdefs.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? x_174 = x_136 + 16;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? y_175 = y_135 + 16;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? i_177 = i_137 + 1;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? ivtmp_88 = ivtmp_89 - 1;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? if (ivtmp_88 != 0)

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: *y_135 = _173;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _173
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _173 = _172 + _171;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: _173 = _172 + _171;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _172
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _172 = yi_166 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _171
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _171 = xi_164 * prephitmp_190;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: _171 = xi_164 * prephitmp_190;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand xi_164
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand prephitmp_190
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: prephitmp_190 = PHI <pretmp_189(19), prephitmp_188(5)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt is out of loop.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: _172 = yi_166 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_166
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand rot1_104
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: rot1_104 = PHI <rot1_37(19), 0.0(5)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt is out of loop.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: *x_136 = _169;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _169
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _169 = _168 + _167;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: _169 = _168 + _167;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _168
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _168 = yi_166 * rot1$8_236;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _167
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _167 = xi_164 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: _167 = xi_164 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand xi_164
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: already marked relevant/live.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand rot1_104
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: rot1_104 = PHI <rot1_37(19), 0.0(5)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt is out of loop.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: _168 = yi_166 * rot1$8_236;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_166
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: already marked relevant/live.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand rot1$8_236
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: rot1$8_236 = PHI <rot1$8_39(19), rot1$8_1(5)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt is out of loop.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Detected interleaving *x_136 and *y_135
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: dependence distance  = 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: dependence distance == 0 between *x_136 and *x_136
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: dependence distance  = 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: dependence distance == 0 between *y_135 and *y_135
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Detected interleaving *x_136 and *y_135
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_determine_vectorization_factor ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining phi: x_136 = PHI <x_174(7), &m(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining phi: y_135 = PHI <y_175(7), &MEM[(void *)&m + 8B](20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining phi: i_137 = PHI <i_177(7), 0(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining phi: .MEM_129 = PHI <.MEM_266(7), .MEM_22(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining phi: ivtmp_89 = PHI <ivtmp_88(7), 2(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _167 = xi_164 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _168 = yi_166 * rot1$8_236;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _169 = _168 + _167;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: *x_136 = _169;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _171 = xi_164 * prephitmp_190;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _172 = yi_166 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _173 = _172 + _171;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: *y_135 = _173;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: x_174 = x_136 + 16;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: skip.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: y_175 = y_135 + 16;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: skip.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: i_177 = i_137 + 1;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: skip.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: ivtmp_88 = ivtmp_89 - 1;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: skip.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: if (ivtmp_88 != 0)

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: skip.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectorization factor = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: dependence distance  = 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: accesses have the same alignment.dependence distance modulo vf == 0 between *x_136 and *x_136
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: dependence distance  = 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: accesses have the same alignment.dependence distance modulo vf == 0 between *y_135 and *y_135
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: misalign = 0 bytes of ref *x_136
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: misalign = 8 bytes of ref *y_135
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: misalign = 0 bytes of ref *x_136
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: misalign = 8 bytes of ref *y_135
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Detected interleaving of size 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Detected interleaving of size 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_prune_runtime_alias_test_list ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_enhance_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_can_advance_ivs_p:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: x_136 = PHI <x_174(7), &m(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Access function of PHI: {(Scalar * restrict) &m, +, 16}_1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: y_135 = PHI <y_175(7), &MEM[(void *)&m + 8B](20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Access function of PHI: {(Scalar * restrict) &MEM[(void *)&m + 8B], +, 16}_1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: i_137 = PHI <i_177(7), 0(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Access function of PHI: {0, +, 1}_1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: .MEM_129 = PHI <.MEM_266(7), .MEM_22(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: virtual phi. skip.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: ivtmp_89 = PHI <ivtmp_88(7), 2(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Access function of PHI: {2, +, 18446744073709551615}_1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_load_cost: aligned.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_store_cost: aligned.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Build SLP for *x_136 = _169;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _169
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _169 = _168 + _167;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_store_cost: aligned.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Build SLP for *y_135 = _173;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _173
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _173 = _172 + _171;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Build SLP for _169 = _168 + _167;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _168
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _168 = yi_166 * rot1$8_236;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _167
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _167 = xi_164 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Build SLP for _173 = _172 + _171;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _172
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _172 = yi_166 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _171
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _171 = xi_164 * prephitmp_190;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Build SLP for _168 = yi_166 * rot1$8_236;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_166
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand rot1$8_236
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: rot1$8_236 = PHI <rot1$8_39(19), rot1$8_1(5)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Build SLP for _172 = yi_166 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_166
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand rot1_104
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: rot1_104 = PHI <rot1_37(19), 0.0(5)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Build SLP for yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Build SLP for yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Build SLP for _167 = xi_164 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand xi_164
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand rot1_104
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: rot1_104 = PHI <rot1_37(19), 0.0(5)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Build SLP for _171 = xi_164 * prephitmp_190;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand xi_164
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand prephitmp_190
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: prephitmp_190 = PHI <pretmp_189(19), prephitmp_188(5)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Build SLP for xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_load_cost: aligned.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Build SLP for xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Load permutation 1 1 0 0 
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type long unsigned int
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) long unsigned intnode 
	stmt 0 *x_136 = _169;

	stmt 1 *y_135 = _173;

node 
	stmt 0 _169 = _168 + _167;

	stmt 1 _173 = _172 + _171;

node 
	stmt 0 _168 = yi_166 * rot1$8_236;

	stmt 1 _172 = yi_166 * rot1_104;

node 
	stmt 0 yi_166 = *y_135;

	stmt 1 yi_166 = *y_135;

node 
	stmt 0 _167 = xi_164 * rot1_104;

	stmt 1 _171 = xi_164 * prephitmp_190;

node 
	stmt 0 xi_164 = *x_136;

	stmt 1 xi_164 = *x_136;


/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_make_slp_decision ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Decided to SLP 1 instances. Unrolling factor 1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_detect_hybrid_slp ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_loop_operations ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Updating vectorization factor to 1 
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: examining phi: x_136 = PHI <x_174(7), &m(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: examining phi: y_135 = PHI <y_175(7), &MEM[(void *)&m + 8B](20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: examining phi: i_137 = PHI <i_177(7), 0(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: examining phi: .MEM_129 = PHI <.MEM_266(7), .MEM_22(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: examining phi: ivtmp_89 = PHI <ivtmp_88(7), 2(20)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand *x_136
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: not ssa-name.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: use not simple.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand *x_136
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: not ssa-name.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: use not simple.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand *y_135
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: not ssa-name.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: use not simple.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand *y_135
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: not ssa-name.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: use not simple.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _167 = xi_164 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand xi_164
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand rot1_104
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: rot1_104 = PHI <rot1_37(19), 0.0(5)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vectorizable_operation ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _168 = yi_166 * rot1$8_236;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_166
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand rot1$8_236
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: rot1$8_236 = PHI <rot1$8_39(19), rot1$8_1(5)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vectorizable_operation ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _169 = _168 + _167;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _168
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _168 = yi_166 * rot1$8_236;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _167
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _167 = xi_164 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vectorizable_operation ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: *x_136 = _169;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _169
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _169 = _168 + _167;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _173
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _173 = _172 + _171;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _171 = xi_164 * prephitmp_190;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand xi_164
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand prephitmp_190
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: prephitmp_190 = PHI <pretmp_189(19), prephitmp_188(5)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vectorizable_operation ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _172 = yi_166 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_166
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand rot1_104
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: rot1_104 = PHI <rot1_37(19), 0.0(5)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vectorizable_operation ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _173 = _172 + _171;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _172
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _172 = yi_166 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _171
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _171 = xi_164 * prephitmp_190;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vectorizable_operation ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: *y_135 = _173;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _173
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _173 = _172 + _171;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: x_174 = x_136 + 16;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: irrelevant.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: y_175 = y_135 + 16;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: irrelevant.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: i_177 = i_137 + 1;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: irrelevant.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: ivtmp_88 = ivtmp_89 - 1;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: irrelevant.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: if (ivtmp_88 != 0)

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: irrelevant.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectorization_factor = 1, niters = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_update_slp_costs_according_to_vf ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Cost model analysis: 
  Vector inside of loop cost: 9
  Vector prologue cost: 0
  Vector epilogue cost: 0
  Scalar iteration cost: 10
  Scalar outside cost: 0
  Vector outside cost: 0
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 1

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note:   Runtime profitability threshold = 0

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note:   Static estimate profitability threshold = 0


Vectorizing loop at /usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vec_transform_loop ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing phi: x_136 = PHI <x_174(7), &m(21)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing phi: y_135 = PHI <y_175(7), &MEM[(void *)&m + 8B](21)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing phi: i_137 = PHI <i_177(7), 0(21)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing phi: .MEM_129 = PHI <.MEM_266(7), .MEM_22(21)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing phi: ivtmp_89 = PHI <ivtmp_88(7), 2(21)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === scheduling SLP instances ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing SLP node starting from: yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: transform load. ncopies = 1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: MEM[(Scalar *)&m]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: created vect_pm.8558_218
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: add new stmt: vect_yi.8559_29 = MEM[(Scalar *)vect_pm.8555_26];

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type long unsigned int
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) long unsigned int
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: add new stmt: vect_yi.8560_30 = VEC_PERM_EXPR <vect_yi.8559_29, vect_yi.8559_29, { 0, 0 }>;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: add new stmt: vect_yi.8561_199 = VEC_PERM_EXPR <vect_yi.8559_29, vect_yi.8559_29, { 1, 1 }>;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing SLP node starting from: _168 = yi_166 * rot1$8_236;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_166
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand rot1$8_236
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: rot1$8_236 = PHI <rot1$8_39(19), rot1$8_1(5)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: transform binary/unary operation.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: created new init_stmt: vect_cst_.8563_68 = {rot1$8_236, rot1_104};

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: add new stmt: vect_var_.8562_170 = vect_yi.8561_199 * vect_cst_.8563_68;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing SLP node starting from: xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: transform load. ncopies = 1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing SLP node starting from: _167 = xi_164 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand xi_164
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: xi_164 = *x_136;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand rot1_104
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: rot1_104 = PHI <rot1_37(19), 0.0(5)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: transform binary/unary operation.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: created new init_stmt: vect_cst_.8565_69 = {rot1_104, prephitmp_190};

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: add new stmt: vect_var_.8564_70 = vect_yi.8560_30 * vect_cst_.8565_69;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing SLP node starting from: _169 = _168 + _167;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _168
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _168 = yi_166 * rot1$8_236;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _167
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _167 = xi_164 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: transform binary/unary operation.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: add new stmt: vect_var_.8566_71 = vect_var_.8562_170 + vect_var_.8564_70;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing SLP node starting from: *x_136 = _169;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _169
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _169 = _168 + _167;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _173
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _173 = _172 + _171;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: transform store. ncopies = 1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: MEM[(Scalar *)&m]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: created vect_pm.8570_73
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: add new stmt: MEM[(Scalar *)vect_pm.8567_78] = vect_var_.8566_71;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectorizing stmts using SLP.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: yi_166 = *y_135;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: vect_var_.8564_70 = vect_yi.8560_30 * vect_cst_.8565_69;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: _167 = xi_164 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: vect_var_.8562_170 = vect_yi.8561_199 * vect_cst_.8563_68;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: _168 = yi_166 * rot1$8_236;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: vect_var_.8566_71 = vect_var_.8562_170 + vect_var_.8564_70;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: _169 = _168 + _167;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: _171 = xi_164 * prephitmp_190;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: _172 = yi_166 * rot1_104;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: _173 = _172 + _171;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: MEM[(Scalar *)vect_pm.8567_78] = vect_var_.8566_71;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: x_174 = x_136 + 16;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: y_175 = y_135 + 16;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: i_177 = i_137 + 1;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: ivtmp_88 = ivtmp_89 - 1;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: vect_pm.8555_27 = vect_pm.8555_26 + 16;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: vect_pm.8567_197 = vect_pm.8567_78 + 16;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ------>vectorizing statement: if (ivtmp_88 != 0)

loop at /usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: if (ivtmp_265 < 2)

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: LOOP VECTORIZED.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: vectorized 1 loops in function.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: Completely unroll loop 1 times

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: not vectorized: no vectype for stmt: D.860775 ={v} {CLOBBER};
 scalar_type: struct CommaInitializer
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand q_5(D)
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: GIMPLE_NOP

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _52
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _52 = (long unsigned int) _51;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand p_9(D)
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: GIMPLE_NOP

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _57
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _57 = (long unsigned int) _56;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _61
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _61 = (long unsigned int) _60;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _65
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _65 = (long unsigned int) _64;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Detected interleaving MEM[(Scalar &)&m] and MEM[(Scalar &)&m + 16]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Detected interleaving MEM[(Scalar &)&m] and MEM[(Scalar &)&m + 8]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Detected interleaving MEM[(Scalar &)&m] and MEM[(Scalar &)&m + 24]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Detected interleaving MEM[(Scalar &)&m + 16] and MEM[(Scalar &)&m + 8]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Detected interleaving MEM[(Scalar &)&m + 16] and MEM[(Scalar &)&m + 24]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Detected interleaving MEM[(Scalar &)&m + 8] and MEM[(Scalar &)&m + 24]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't force alignment of ref: MEM[(const double &)_54]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't force alignment of ref: MEM[(const double &)_59]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't force alignment of ref: MEM[(const double &)_63]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't force alignment of ref: MEM[(const double &)_67]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: misalign = 0 bytes of ref MEM[(Scalar &)&m]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: misalign = 0 bytes of ref MEM[(Scalar &)&m + 16]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: misalign = 8 bytes of ref MEM[(Scalar &)&m + 8]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: misalign = 8 bytes of ref MEM[(Scalar &)&m + 24]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: not consecutive access _6 = MEM[(const double &)_54];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: not consecutive access _10 = MEM[(const double &)_59];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: not consecutive access _13 = MEM[(const double &)_63];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: not consecutive access _15 = MEM[(const double &)_67];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Detected interleaving of size 4
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Build SLP for MEM[(Scalar &)&m] = _15;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _15
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _15 = MEM[(const double &)_67];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_model_store_cost: aligned.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Build SLP for MEM[(Scalar &)&m + 8] = _10;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _10
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _10 = MEM[(const double &)_59];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Build SLP for MEM[(Scalar &)&m + 16] = _13;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _13
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _13 = MEM[(const double &)_63];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Build SLP for MEM[(Scalar &)&m + 24] = _6;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _6
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _6 = MEM[(const double &)_54];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Build SLP for _15 = MEM[(const double &)_67];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Build SLP failed: unvectorizable statement _15 = MEM[(const double &)_67];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:424: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:424: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:424: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:428: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:428: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:428: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: not vectorized: no vectype for stmt: x ={v} {CLOBBER};
 scalar_type: struct RowXpr
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: Detected interleaving j_right_42(D)->m_c and j_right_42(D)->m_s
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: can't force alignment of ref: j_right_42(D)->m_c
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: can't force alignment of ref: j_right_42(D)->m_s
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: Detected interleaving of size 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: Build SLP for j_right_42(D)->m_c = 1.0e+0;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vect_is_simple_use: operand 1.0e+0
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vect_model_store_cost: unaligned supported by hardware.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 1 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: Build SLP for j_right_42(D)->m_s = 0.0;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vect_is_simple_use: operand 0.0node 
	stmt 0 j_right_42(D)->m_c = 1.0e+0;

	stmt 1 j_right_42(D)->m_s = 0.0;


/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: Vectorizing an unaligned access.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: ==> examining statement: j_right_42(D)->m_c = 1.0e+0;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vectype:  vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vect_is_simple_use: operand 1.0e+0
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vect_is_simple_use: operand 0.0
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: ==> examining statement: j_right_42(D)->m_s = 0.0;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vectype:  vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: vect_is_simple_use: operand 0.0
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: Cost model analysis: 
  Vector inside of basic block cost: 2
  Vector prologue cost: 1
  Vector epilogue cost: 0
  Scalar cost of basic block: 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:90: note: not vectorized: vectorization is not profitable.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:96: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:96: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:96: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:101: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:101: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:101: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:105: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:105: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:105: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:107: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:107: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:107: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_is_simple_use: operand t_213
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: def_stmt: t_213 = PHI <t_210(10), t_212(11)>

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_is_simple_use: operand _222
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: def_stmt: _222 = ABS_EXPR <t_213>;

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_is_simple_use: operand _221
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: def_stmt: _221 = _222 * _220;

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_is_simple_use: operand prephitmp_186
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: def_stmt: prephitmp_186 = PHI <-1.0e+0(13), 1.0e+0(12)>

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_is_simple_use: operand rot1_18
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: def_stmt: rot1_18 = PHI <rot1_104(17), rot1_37(6)>

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_is_simple_use: operand pretmp_226
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: def_stmt: pretmp_226 = -_224;

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: Detected interleaving j_right_42(D)->m_s and j_right_42(D)->m_c
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: can't force alignment of ref: j_right_42(D)->m_s
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: can't force alignment of ref: j_right_42(D)->m_c
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: Detected interleaving of size 2
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: Build SLP for j_right_42(D)->m_c = n_217;

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_is_simple_use: operand n_217
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: def_stmt: n_217 = 1.0e+0 / _216;

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_model_store_cost: unaligned supported by hardware.
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: Build SLP for j_right_42(D)->m_s = _224;

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_is_simple_use: operand _224
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: def_stmt: _224 = prephitmp_186 * _223;

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: Build SLP for n_217 = 1.0e+0 / _216;

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: get vectype with 2 units of type RealScalar
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_is_simple_use: operand 1.0e+0
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vect_is_simple_use: operand _216
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: def_stmt: _216 = sqrt (_215);

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: Build SLP for _224 = prephitmp_186 * _223;

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: Build SLP failed: different operation in stmt _224 = prephitmp_186 * _223;

/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Core/MathFunctions.h:227: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: not vectorized: no vectype for stmt: m ={v} {CLOBBER};
 scalar_type: struct Matrix
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vect_is_simple_use: operand prephitmp_90
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: def_stmt: prephitmp_90 = PHI <1.0e+0(8), n_217(14)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vect_is_simple_use: operand rot1_18
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: def_stmt: rot1_18 = PHI <rot1_104(17), rot1_37(6)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: Detected interleaving MEM[(struct JacobiRotation *)j_left_45(D)] and MEM[(struct JacobiRotation *)j_left_45(D) + 8B]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: can't force alignment of ref: MEM[(struct JacobiRotation *)j_left_45(D)]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: can't force alignment of ref: MEM[(struct JacobiRotation *)j_left_45(D) + 8B]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: Detected interleaving of size 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: Build SLP for MEM[(struct JacobiRotation *)j_left_45(D)] = _79;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vect_is_simple_use: operand _79
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: def_stmt: _79 = _77 - prephitmp_235;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vect_model_store_cost: unaligned supported by hardware.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: Build SLP for MEM[(struct JacobiRotation *)j_left_45(D) + 8B] = _76;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vect_is_simple_use: operand _76
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: def_stmt: _76 = _75 + prephitmp_233;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: Build SLP for _79 = _77 - prephitmp_235;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vect_is_simple_use: operand _77
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: def_stmt: _77 = rot1_18 * prephitmp_90;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vect_is_simple_use: operand prephitmp_235
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: def_stmt: prephitmp_235 = PHI <-0.0(8), pretmp_234(14)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: Build SLP for _76 = _75 + prephitmp_233;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: Build SLP failed: different operation in stmt _76 = _75 + prephitmp_233;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:55: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:410: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: not vectorized: no vectype for stmt: vect_yi.8559_164 = MEM[(Scalar *)vect_pm.8558_218];
 scalar_type: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: vect_is_simple_use: operand vect_yi.8560_166
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: def_stmt: vect_yi.8560_166 = VEC_PERM_EXPR <vect_yi.8559_164, vect_yi.8559_164, { 0, 0 }>;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: vect_is_simple_use: operand vect_yi.8561_167
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: def_stmt: vect_yi.8561_167 = VEC_PERM_EXPR <vect_yi.8559_164, vect_yi.8559_164, { 1, 1 }>;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: vect_is_simple_use: operand vect_yi.8560_30
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: def_stmt: vect_yi.8560_30 = VEC_PERM_EXPR <vect_yi.8559_29, vect_yi.8559_29, { 0, 0 }>;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: vect_is_simple_use: operand vect_yi.8561_199
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: def_stmt: vect_yi.8561_199 = VEC_PERM_EXPR <vect_yi.8559_29, vect_yi.8559_29, { 1, 1 }>;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:420: note: not vectorized: failed to find SLP opportunities in basic block.

Analyzing loop at /usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ===== analyze_loop_nest =====
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_loop_form ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === get_loop_niters ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> get_loop_niters:3
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_scalar_cycles ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: x_38 = PHI <x_56(10), x_24(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Access function of PHI: {x_24, +, 8}_1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: step: 8,  init: x_24
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Detected induction.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: y_62 = PHI <y_57(10), y_33(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Access function of PHI: {y_33, +, 8}_1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: step: 8,  init: y_33
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Detected induction.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: i_35 = PHI <i_59(10), 0(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Access function of PHI: {0, +, 1}_1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: step: 1,  init: 0
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Detected induction.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: .MEM_36 = PHI <.MEM_74(10), .MEM_1(D)(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Analyze phi: ivtmp_69 = PHI <ivtmp_68(10), 3(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Access function of PHI: {3, +, 18446744073709551615}_1
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: step: 18446744073709551615,  init: 3
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Detected induction.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand xi_46
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: xi_46 = *x_38;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_48
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_48 = *y_62;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _13
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _13 = MEM[(const double &)j_7(D) + 8];

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_48
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_48 = *y_62;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_mark_stmts_to_be_vectorized ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: phi relevant? x_38 = PHI <x_56(10), x_24(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: phi relevant? y_62 = PHI <y_57(10), y_33(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: phi relevant? i_35 = PHI <i_59(10), 0(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: phi relevant? .MEM_36 = PHI <.MEM_74(10), .MEM_1(D)(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: phi relevant? ivtmp_69 = PHI <ivtmp_68(10), 3(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? xi_46 = *x_38;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? yi_48 = *y_62;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? _49 = xi_46 * _15;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? _50 = yi_48 * _14;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? _51 = _50 + _49;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? *x_38 = _51;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vec_stmt_relevant_p: stmt has vdefs.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? _53 = _13 * xi_46;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? _54 = yi_48 * _15;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? _55 = _54 + _53;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? *y_62 = _55;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vec_stmt_relevant_p: stmt has vdefs.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? x_56 = x_38 + 8;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? y_57 = y_62 + 8;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? i_59 = i_35 + 1;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? ivtmp_68 = ivtmp_69 - 1;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: init: stmt relevant? if (ivtmp_68 != 0)

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: *y_62 = _55;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _55
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _55 = _54 + _53;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: _55 = _54 + _53;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _54
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _54 = yi_48 * _15;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _53
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _53 = _13 * xi_46;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: _53 = _13 * xi_46;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _13
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _13 = MEM[(const double &)j_7(D) + 8];

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt is out of loop.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand xi_46
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: xi_46 = *x_38;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: xi_46 = *x_38;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: _54 = yi_48 * _15;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_48
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_48 = *y_62;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _15
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _15 = MEM[(const double &)j_7(D)];

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt is out of loop.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: yi_48 = *y_62;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: *x_38 = _51;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _51
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _51 = _50 + _49;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: _51 = _50 + _49;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _50
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _50 = yi_48 * _14;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _49
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _49 = xi_46 * _15;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: _49 = xi_46 * _15;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand xi_46
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: xi_46 = *x_38;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: already marked relevant/live.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _15
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _15 = MEM[(const double &)j_7(D)];

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt is out of loop.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: worklist: examine stmt: _50 = yi_48 * _14;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_48
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_48 = *y_62;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark relevant 4, live 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: already marked relevant/live.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _14
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _14 = -_13;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt is out of loop.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: dependence distance  = 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: dependence distance == 0 between *x_38 and *x_38
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: versioning for alias required: can't determine dependence between *x_38 and *y_62
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark for run-time aliasing test between *x_38 and *y_62
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: versioning for alias required: can't determine dependence between *y_62 and *x_38
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark for run-time aliasing test between *y_62 and *x_38
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: dependence distance  = 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: dependence distance == 0 between *y_62 and *y_62
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: versioning for alias required: can't determine dependence between *x_38 and *y_62
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: mark for run-time aliasing test between *x_38 and *y_62
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_determine_vectorization_factor ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining phi: x_38 = PHI <x_56(10), x_24(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining phi: y_62 = PHI <y_57(10), y_33(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining phi: i_35 = PHI <i_59(10), 0(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining phi: .MEM_36 = PHI <.MEM_74(10), .MEM_1(D)(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining phi: ivtmp_69 = PHI <ivtmp_68(10), 3(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: xi_46 = *x_38;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: yi_48 = *y_62;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _49 = xi_46 * _15;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _50 = yi_48 * _14;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _51 = _50 + _49;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: *x_38 = _51;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _53 = _13 * xi_46;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _54 = yi_48 * _15;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _55 = _54 + _53;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: *y_62 = _55;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype for scalar type:  Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: nunits = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: x_56 = x_38 + 8;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: skip.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: y_57 = y_62 + 8;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: skip.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: i_59 = i_35 + 1;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: skip.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: ivtmp_68 = ivtmp_69 - 1;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: skip.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: if (ivtmp_68 != 0)

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: skip.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectorization factor = 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: dependence distance  = 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: accesses have the same alignment.dependence distance modulo vf == 0 between *x_38 and *x_38
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: dependence distance  = 0.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: accesses have the same alignment.dependence distance modulo vf == 0 between *y_62 and *y_62
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: can't force alignment of ref: *x_38
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: can't force alignment of ref: *y_62
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: can't force alignment of ref: *x_38
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: can't force alignment of ref: *y_62
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_prune_runtime_alias_test_list ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: found equal ranges *y_62, *x_38 and *x_38, *y_62
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: found equal ranges *x_38, *y_62 and *x_38, *y_62
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_enhance_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Unknown misalignment, is_packed = 0
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Unknown misalignment, is_packed = 0
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Unknown misalignment, is_packed = 0
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Unknown misalignment, is_packed = 0
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Vectorizing an unaligned access.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Vectorizing an unaligned access.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Vectorizing an unaligned access.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Vectorizing an unaligned access.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_make_slp_decision ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_detect_hybrid_slp ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_analyze_loop_operations ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: examining phi: x_38 = PHI <x_56(10), x_24(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: examining phi: y_62 = PHI <y_57(10), y_33(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: examining phi: i_35 = PHI <i_59(10), 0(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: examining phi: .MEM_36 = PHI <.MEM_74(10), .MEM_1(D)(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: examining phi: ivtmp_69 = PHI <ivtmp_68(10), 3(7)>

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: xi_46 = *x_38;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand *x_38
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: not ssa-name.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: use not simple.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand *x_38
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: not ssa-name.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: use not simple.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: yi_48 = *y_62;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand *y_62
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: not ssa-name.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: use not simple.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand *y_62
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: not ssa-name.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: use not simple.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_load_cost: unaligned supported by hardware.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _49 = xi_46 * _15;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand xi_46
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: xi_46 = *x_38;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _15
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _15 = MEM[(const double &)j_7(D)];

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vectorizable_operation ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _50 = yi_48 * _14;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_48
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_48 = *y_62;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _14
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _14 = -_13;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vectorizable_operation ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _51 = _50 + _49;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _50
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _50 = yi_48 * _14;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _49
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _49 = xi_46 * _15;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vectorizable_operation ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: *x_38 = _51;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _51
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _51 = _50 + _49;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_store_cost: unaligned supported by hardware.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _53 = _13 * xi_46;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _13
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _13 = MEM[(const double &)j_7(D) + 8];

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand xi_46
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: xi_46 = *x_38;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vectorizable_operation ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _54 = yi_48 * _15;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand yi_48
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: yi_48 = *y_62;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _15
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _15 = MEM[(const double &)j_7(D)];

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vectorizable_operation ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: _55 = _54 + _53;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _54
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _54 = yi_48 * _15;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _53
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _53 = _13 * xi_46;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vectorizable_operation ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: *y_62 = _55;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_is_simple_use: operand _55
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: def_stmt: _55 = _54 + _53;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_store_cost: unaligned supported by hardware.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: x_56 = x_38 + 8;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: irrelevant.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: y_57 = y_62 + 8;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: irrelevant.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: i_59 = i_35 + 1;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: irrelevant.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: ivtmp_68 = ivtmp_69 - 1;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: irrelevant.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: ==> examining statement: if (ivtmp_68 != 0)

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: irrelevant.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: vectorization_factor = 2, niters = 3
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: === vect_update_slp_costs_according_to_vf ===cost model: Adding cost of checks for loop versioning aliasing.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Cost model analysis: 
  Vector inside of loop cost: 14
  Vector prologue cost: 8
  Vector epilogue cost: 10
  Scalar iteration cost: 10
  Scalar outside cost: 1
  Vector outside cost: 18
  prologue iterations: 0
  epilogue iterations: 1
  Calculated minimum iters for profitability: 4

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note:   Runtime profitability threshold = 3

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note:   Static estimate profitability threshold = 3

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: not vectorized: vectorization not profitable.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: not vectorized: iteration count smaller than user specified loop bound parameter or minimum profitable iterations (whichever is more conservative).
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: bad operation or unsupported loop bound.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:292: note: vectorized 0 loops in function.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Completely unroll loop 2 times

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: get vectype with 2 units of type const double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: get vectype with 2 units of type const double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: Detected interleaving MEM[(const double &)j_7(D) + 8] and MEM[(const double &)j_7(D)]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: can't force alignment of ref: MEM[(const double &)j_7(D) + 8]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: can't force alignment of ref: MEM[(const double &)j_7(D)]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: Detected interleaving of size 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: not vectorized: no vectype for stmt: D.863800 ={v} {CLOBBER};
 scalar_type: struct JacobiRotation
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand p_3(D)
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: GIMPLE_NOP

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand _22
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: _22 = (long unsigned int) _21;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand q_5(D)
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: GIMPLE_NOP

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand _31
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: _31 = (long unsigned int) _30;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand xi_65
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: xi_65 = *x_24;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_63
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_63 = *y_33;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand _13
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: _13 = MEM[(const double &)j_7(D) + 8];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_63
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_63 = *y_33;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand xi_34
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: xi_34 = *x_75;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_26
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_26 = *y_72;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand _13
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: _13 = MEM[(const double &)j_7(D) + 8];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_26
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_26 = *y_72;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand xi_46
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: xi_46 = *x_82;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_48
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_48 = *y_83;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand _13
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: _13 = MEM[(const double &)j_7(D) + 8];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_48
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_48 = *y_83;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: determined dependence between *x_24 and *x_24
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between *x_24 and *y_33
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: Detected interleaving *x_24 and *x_75
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between *x_24 and *x_75
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between *x_24 and *y_72
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: Detected interleaving *x_24 and *x_82
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between *x_24 and *x_82
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between *x_24 and *y_83
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between *y_33 and *x_24
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: determined dependence between *y_33 and *y_33
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: Detected interleaving *y_33 and *y_72
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between *y_33 and *x_75
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between *y_33 and *y_72
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: Detected interleaving *y_33 and *y_83
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between *y_33 and *x_82
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between *y_33 and *y_83
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between *x_24 and *y_33
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: not vectorized: unhandled data dependence in basic block.

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type long unsigned int
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) long unsigned int
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _36
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _36 = MEM[(const Scalar &)src_3(D)];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _48
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _48 = MEM[(const Scalar &)src_3(D) + 24];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _21
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _21 = MEM[(const Scalar &)src_3(D) + 48];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _85
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _85 = MEM[(const Scalar &)src_3(D) + 8];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _97
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _97 = MEM[(const Scalar &)src_3(D) + 32];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _70
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _70 = MEM[(const Scalar &)src_3(D) + 56];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _134
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _134 = MEM[(const Scalar &)src_3(D) + 16];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _146
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _146 = MEM[(const Scalar &)src_3(D) + 40];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _119
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _119 = MEM[(const Scalar &)src_3(D) + 64];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _183
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _183 = MEM[(const Scalar &)src_3(D)];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _195
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _195 = MEM[(const Scalar &)src_3(D) + 24];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _168
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _168 = MEM[(const Scalar &)src_3(D) + 48];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _232
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _232 = MEM[(const Scalar &)src_3(D) + 8];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _244
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _244 = MEM[(const Scalar &)src_3(D) + 32];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _217
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _217 = MEM[(const Scalar &)src_3(D) + 56];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _281
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _281 = MEM[(const Scalar &)src_3(D) + 16];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _293
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _293 = MEM[(const Scalar &)src_3(D) + 40];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _266
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _266 = MEM[(const Scalar &)src_3(D) + 64];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _330
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _330 = MEM[(const Scalar &)src_3(D)];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _342
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _342 = MEM[(const Scalar &)src_3(D) + 24];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _315
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _315 = MEM[(const Scalar &)src_3(D) + 48];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _379
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _379 = MEM[(const Scalar &)src_3(D) + 8];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _391
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _391 = MEM[(const Scalar &)src_3(D) + 32];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _364
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _364 = MEM[(const Scalar &)src_3(D) + 56];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _428
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _428 = MEM[(const Scalar &)src_3(D) + 16];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _440
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _440 = MEM[(const Scalar &)src_3(D) + 40];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _413
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _413 = MEM[(const Scalar &)src_3(D) + 64];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D)] and MEM[(Scalar &)dst_2(D)]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D)] and MEM[(Scalar &)dst_2(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D)] and MEM[(Scalar &)dst_2(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: determined dependence between MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D)]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D)] and MEM[(Scalar &)dst_2(D) + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D)] and MEM[(Scalar &)dst_2(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D)] and MEM[(Scalar &)dst_2(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: determined dependence between MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D)]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D)] and MEM[(Scalar &)dst_2(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D)] and MEM[(Scalar &)dst_2(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D)] and MEM[(const Scalar &)src_3(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D)] and MEM[(Scalar &)dst_2(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const struct Transpose *)src_3(D) + 72B].m_matrix and MEM[(Scalar &)dst_2(D)]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const struct Transpose *)src_3(D) + 72B].m_matrix and MEM[(Scalar &)dst_2(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const struct Transpose *)src_3(D) + 72B].m_matrix and MEM[(Scalar &)dst_2(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const struct Transpose *)src_3(D) + 72B].m_matrix and MEM[(Scalar &)dst_2(D) + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const struct Transpose *)src_3(D) + 72B].m_matrix and MEM[(Scalar &)dst_2(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const struct Transpose *)src_3(D) + 72B].m_matrix and MEM[(Scalar &)dst_2(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const struct Transpose *)src_3(D) + 72B].m_matrix and MEM[(Scalar &)dst_2(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const struct Transpose *)src_3(D) + 72B].m_matrix and MEM[(Scalar &)dst_2(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const struct Transpose *)src_3(D) + 72B].m_matrix and MEM[(Scalar &)dst_2(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37] and MEM[(Scalar &)dst_2(D)]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: determined dependence between MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37] and MEM[(Scalar &)dst_2(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: determined dependence between MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37] and MEM[(Scalar &)dst_2(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37] and MEM[(Scalar &)dst_2(D) + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37] and MEM[(Scalar &)dst_2(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37] and MEM[(Scalar &)dst_2(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37] and MEM[(Scalar &)dst_2(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37] and MEM[(Scalar &)dst_2(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37] and MEM[(const Scalar &)_37 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37] and MEM[(Scalar &)dst_2(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 24] and MEM[(Scalar &)dst_2(D)]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 24] and MEM[(Scalar &)dst_2(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 24] and MEM[(Scalar &)dst_2(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D)]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: determined dependence between MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 24] and MEM[(Scalar &)dst_2(D) + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 24] and MEM[(Scalar &)dst_2(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 24] and MEM[(Scalar &)dst_2(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D)]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: determined dependence between MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 24] and MEM[(Scalar &)dst_2(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 24] and MEM[(Scalar &)dst_2(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 24] and MEM[(const Scalar &)src_3(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 24] and MEM[(Scalar &)dst_2(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 24] and MEM[(Scalar &)dst_2(D)]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: determined dependence between MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 24] and MEM[(Scalar &)dst_2(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: determined dependence between MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 24] and MEM[(Scalar &)dst_2(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 24] and MEM[(Scalar &)dst_2(D) + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 24] and MEM[(Scalar &)dst_2(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 24] and MEM[(Scalar &)dst_2(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 24] and MEM[(Scalar &)dst_2(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 24] and MEM[(Scalar &)dst_2(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 24] and MEM[(const Scalar &)_37 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 24] and MEM[(Scalar &)dst_2(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 48] and MEM[(Scalar &)dst_2(D)]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 48] and MEM[(Scalar &)dst_2(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 48] and MEM[(Scalar &)dst_2(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D)]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: determined dependence between MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 48] and MEM[(Scalar &)dst_2(D) + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 48] and MEM[(Scalar &)dst_2(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 48] and MEM[(Scalar &)dst_2(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D)]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: determined dependence between MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 48] and MEM[(Scalar &)dst_2(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 48] and MEM[(Scalar &)dst_2(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)src_3(D) + 48] and MEM[(const Scalar &)src_3(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)src_3(D) + 48] and MEM[(Scalar &)dst_2(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 48] and MEM[(Scalar &)dst_2(D)]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: determined dependence between MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 48] and MEM[(Scalar &)dst_2(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: determined dependence between MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 48] and MEM[(Scalar &)dst_2(D) + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 48] and MEM[(Scalar &)dst_2(D) + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 48] and MEM[(Scalar &)dst_2(D) + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 48] and MEM[(Scalar &)dst_2(D) + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 48] and MEM[(Scalar &)dst_2(D) + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 48] and MEM[(Scalar &)dst_2(D) + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)_37 + 48] and MEM[(const Scalar &)_37 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(const Scalar &)_37 + 48] and MEM[(Scalar &)dst_2(D) + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: can't determine dependence between MEM[(Scalar &)dst_2(D)] and MEM[(const Scalar &)src_3(D) + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: not vectorized: unhandled data dependence in basic block.

/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D)] and MEM[(Scalar &)m_1(D) + 8]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D)] and MEM[(Scalar &)m_1(D) + 16]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D)] and MEM[(Scalar &)m_1(D) + 24]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D)] and MEM[(Scalar &)m_1(D) + 32]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D)] and MEM[(Scalar &)m_1(D) + 40]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D)] and MEM[(Scalar &)m_1(D) + 48]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D)] and MEM[(Scalar &)m_1(D) + 56]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D)] and MEM[(Scalar &)m_1(D) + 64]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 8] and MEM[(Scalar &)m_1(D) + 16]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 8] and MEM[(Scalar &)m_1(D) + 24]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 8] and MEM[(Scalar &)m_1(D) + 32]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 8] and MEM[(Scalar &)m_1(D) + 40]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 8] and MEM[(Scalar &)m_1(D) + 48]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 8] and MEM[(Scalar &)m_1(D) + 56]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 8] and MEM[(Scalar &)m_1(D) + 64]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 16] and MEM[(Scalar &)m_1(D) + 24]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 16] and MEM[(Scalar &)m_1(D) + 32]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 16] and MEM[(Scalar &)m_1(D) + 40]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 16] and MEM[(Scalar &)m_1(D) + 48]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 16] and MEM[(Scalar &)m_1(D) + 56]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 16] and MEM[(Scalar &)m_1(D) + 64]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 24] and MEM[(Scalar &)m_1(D) + 32]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 24] and MEM[(Scalar &)m_1(D) + 40]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 24] and MEM[(Scalar &)m_1(D) + 48]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 24] and MEM[(Scalar &)m_1(D) + 56]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 24] and MEM[(Scalar &)m_1(D) + 64]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 32] and MEM[(Scalar &)m_1(D) + 40]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 32] and MEM[(Scalar &)m_1(D) + 48]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 32] and MEM[(Scalar &)m_1(D) + 56]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 32] and MEM[(Scalar &)m_1(D) + 64]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 40] and MEM[(Scalar &)m_1(D) + 48]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 40] and MEM[(Scalar &)m_1(D) + 56]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 40] and MEM[(Scalar &)m_1(D) + 64]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 48] and MEM[(Scalar &)m_1(D) + 56]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 48] and MEM[(Scalar &)m_1(D) + 64]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving MEM[(Scalar &)m_1(D) + 56] and MEM[(Scalar &)m_1(D) + 64]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: can't force alignment of ref: MEM[(Scalar &)m_1(D)]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: can't force alignment of ref: MEM[(Scalar &)m_1(D) + 8]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: can't force alignment of ref: MEM[(Scalar &)m_1(D) + 16]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: can't force alignment of ref: MEM[(Scalar &)m_1(D) + 24]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: can't force alignment of ref: MEM[(Scalar &)m_1(D) + 32]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: can't force alignment of ref: MEM[(Scalar &)m_1(D) + 40]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: can't force alignment of ref: MEM[(Scalar &)m_1(D) + 48]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: can't force alignment of ref: MEM[(Scalar &)m_1(D) + 56]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: can't force alignment of ref: MEM[(Scalar &)m_1(D) + 64]
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Detected interleaving of size 9
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Build SLP failed: unrolling required in basic block SLP
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Core/Matrix.h:172: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Completely unroll loop 3 times

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:417: note: Completely unroll loop 3 times

Analyzing loop at /usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: ===== analyze_loop_nest =====
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_analyze_loop_form ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: ===== analyze_loop_nest_1 =====
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_analyze_loop_form ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === get_loop_niters ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: ==> get_loop_niters:(unsigned long) _102 + 18446744073709551615
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: Symbolic number of iterations is (unsigned long) _102 + 18446744073709551615
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: not vectorized: inner-loop count not invariant.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: bad loop form.
Analyzing loop at /usr/include/eigen3/Eigen/src/Core/Visitor.h:48

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: ===== analyze_loop_nest =====
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: === vect_analyze_loop_form ===
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: === get_loop_niters ===
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: ==> get_loop_niters:(unsigned long) _102 + 18446744073709551615
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: Symbolic number of iterations is (unsigned long) _102 + 18446744073709551615
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: === vect_analyze_scalar_cycles ===
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: Analyze phi: pos_17 = PHI <pos_190(76), 1(74)>

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: Access function of PHI: {1, +, 1}_6
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: step: 1,  init: 1
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: Detected induction.
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: Analyze phi: maxRemainingSingularValue_160 = PHI <maxRemainingSingularValue_194(76), maxRemainingSingularValue_183(74)>

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: Access function of PHI: maxRemainingSingularValue_160
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: Analyze phi: pos_149 = PHI <pos_193(76), 0(74)>

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: Access function of PHI: pos_149
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: Analyze phi: pos_149 = PHI <pos_193(76), 0(74)>

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: reduction: not commutative/associative: pos_193 = maxRemainingSingularValue_160 < maxRemainingSingularValue_188 ? pos_17 : pos_149;

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: Unknown def-use cycle pattern.
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: Analyze phi: maxRemainingSingularValue_160 = PHI <maxRemainingSingularValue_194(76), maxRemainingSingularValue_183(74)>

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: reduction used in loop.
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: Unknown def-use cycle pattern.
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: vect_is_simple_use: operand _185
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: def_stmt: _185 = (long unsigned int) pos_17;

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: get vectype with 2 units of type RealScalar
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: === vect_mark_stmts_to_be_vectorized ===
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: init: phi relevant? pos_17 = PHI <pos_190(76), 1(74)>

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: init: phi relevant? maxRemainingSingularValue_160 = PHI <maxRemainingSingularValue_194(76), maxRemainingSingularValue_183(74)>

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: init: phi relevant? pos_149 = PHI <pos_193(76), 0(74)>

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: init: stmt relevant? _185 = (long unsigned int) pos_17;

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: init: stmt relevant? _186 = _185 * 8;

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: init: stmt relevant? _187 = _451 + _186;

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: init: stmt relevant? maxRemainingSingularValue_188 = MEM[(const Scalar &)_187];

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: init: stmt relevant? pos_193 = maxRemainingSingularValue_160 < maxRemainingSingularValue_188 ? pos_17 : pos_149;

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: vec_stmt_relevant_p: used out of loop.
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: mark relevant 0, live 1.
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: init: stmt relevant? maxRemainingSingularValue_194 = MAX_EXPR <maxRemainingSingularValue_160, maxRemainingSingularValue_188>;

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: vec_stmt_relevant_p: used out of loop.
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: mark relevant 0, live 1.
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: init: stmt relevant? pos_190 = pos_17 + 1;

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: init: stmt relevant? if (_102 > pos_190)

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: worklist: examine stmt: maxRemainingSingularValue_194 = MAX_EXPR <maxRemainingSingularValue_160, maxRemainingSingularValue_188>;

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: vect_is_simple_use: operand maxRemainingSingularValue_160
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: def_stmt: maxRemainingSingularValue_160 = PHI <maxRemainingSingularValue_194(76), maxRemainingSingularValue_183(74)>

/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: Unsupported pattern.
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: not vectorized: unsupported use in stmt.
/usr/include/eigen3/Eigen/src/Core/Visitor.h:48: note: unexpected pattern.
Analyzing loop at /usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:806

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:806: note: ===== analyze_loop_nest =====
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:806: note: === vect_analyze_loop_form ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:806: note: not vectorized: control flow in loop.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:806: note: bad loop form.
Analyzing loop at /usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: ===== analyze_loop_nest =====
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: === vect_analyze_loop_form ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: not vectorized: multiple nested loops.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: bad loop form.
Analyzing loop at /usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: ===== analyze_loop_nest =====
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_analyze_loop_form ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: ===== analyze_loop_nest_1 =====
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_analyze_loop_form ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: not vectorized: control flow in loop.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: bad inner-loop form.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: not vectorized: Bad inner loop.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: bad loop form.
Analyzing loop at /usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: ===== analyze_loop_nest =====
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_loop_form ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: not vectorized: control flow in loop.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: bad loop form.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: vectorized 0 loops in function.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: can't force alignment of ref: this_28(D)->m_isAllocated
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: not consecutive access _254 = this_28(D)->m_isAllocated;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: can't force alignment of ref: this_28(D)->m_rows
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: not consecutive access _255 = this_28(D)->m_rows;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: can't force alignment of ref: this_28(D)->m_cols
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: not consecutive access _256 = this_28(D)->m_cols;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: get vectype with 4 units of type unsigned int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: vectype: vector(4) unsigned int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: can't force alignment of ref: this_28(D)->m_computationOptions
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: not consecutive access _257 = this_28(D)->m_computationOptions;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:697: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: can't force alignment of ref: this_28(D)->m_diagSize
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not consecutive access pretmp_581 = this_28(D)->m_diagSize;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 4 units of type unsigned int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(4) unsigned int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_is_simple_use: operand _259
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: def_stmt: _259 = _258 != 0;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: type of def: 3.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_is_simple_use: operand _261
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: def_stmt: _261 = _260 != 0;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: type of def: 3.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_is_simple_use: operand _263
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: def_stmt: _263 = _262 != 0;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: type of def: 3.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_is_simple_use: operand _265
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: def_stmt: _265 = _264 != 0;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: type of def: 3.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_rows and this_28(D)->m_cols
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_isInitialized and this_28(D)->m_isAllocated
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_isInitialized and this_28(D)->m_computeFullU
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_isInitialized and this_28(D)->m_computeThinU
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_isInitialized and this_28(D)->m_computeFullV
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_isInitialized and this_28(D)->m_computeThinV
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_isAllocated and this_28(D)->m_computeFullU
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_isAllocated and this_28(D)->m_computeThinU
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_isAllocated and this_28(D)->m_computeFullV
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_isAllocated and this_28(D)->m_computeThinV
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_computeFullU and this_28(D)->m_computeThinU
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_computeFullU and this_28(D)->m_computeFullV
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_computeFullU and this_28(D)->m_computeThinV
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_computeThinU and this_28(D)->m_computeFullV
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_computeThinU and this_28(D)->m_computeThinV
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving this_28(D)->m_computeFullV and this_28(D)->m_computeThinV
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: can't force alignment of ref: this_28(D)->m_rows
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: can't force alignment of ref: this_28(D)->m_cols
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: can't force alignment of ref: this_28(D)->m_isInitialized
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: can't force alignment of ref: this_28(D)->m_isAllocated
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: can't force alignment of ref: this_28(D)->m_computationOptions
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: can't force alignment of ref: this_28(D)->m_computeFullU
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: can't force alignment of ref: this_28(D)->m_computeThinU
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: can't force alignment of ref: this_28(D)->m_computeFullV
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: can't force alignment of ref: this_28(D)->m_computeThinV
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving of size 2
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Detected interleaving of size 6
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: not consecutive access this_28(D)->m_computationOptions = computationOptions_29(D);

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Build SLP for this_28(D)->m_rows = 3;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_is_simple_use: operand 3
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_model_store_cost: unaligned supported by hardware.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 1 .
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Build SLP for this_28(D)->m_cols = 3;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_is_simple_use: operand 3node 
	stmt 0 this_28(D)->m_rows = 3;

	stmt 1 this_28(D)->m_cols = 3;


/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Build SLP failed: unrolling required in basic block SLP
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Vectorizing an unaligned access.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: ==> examining statement: this_28(D)->m_rows = 3;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype for scalar type:  Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype:  vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_is_simple_use: operand 3
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_is_simple_use: operand 3
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: ==> examining statement: this_28(D)->m_cols = 3;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype for scalar type:  Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vectype:  vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: vect_is_simple_use: operand 3
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: Cost model analysis: 
  Vector inside of basic block cost: 2
  Vector prologue cost: 1
  Vector epilogue cost: 0
  Scalar cost of basic block: 2
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:705: note: not vectorized: vectorization is not profitable.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:714: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:714: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:714: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:714: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:714: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:714: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:715: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:715: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:715: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:715: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:715: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:715: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:715: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:715: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:715: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:716: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:716: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:716: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:716: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:716: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:716: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:716: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:716: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:716: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:724: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:724: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:724: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:724: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:724: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:724: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:724: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:724: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:724: note: can't force alignment of ref: this_28(D)->m_diagSize
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:724: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:724: note: not consecutive access this_28(D)->m_diagSize = 3;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:724: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:724: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:724: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:166: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:166: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:166: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/MapBase.h:146: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/MapBase.h:146: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/MapBase.h:146: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/MapBase.h:146: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/MapBase.h:146: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/MapBase.h:146: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:234: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:234: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:234: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: not vectorized: no vectype for stmt: D.847718 ={v} {CLOBBER};
 scalar_type: const struct Block
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: can't determine dependence between MEM[(const Scalar &)matrix_26(D)] and MEM[(Scalar &)this_28(D) + 168]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)matrix_26(D)] and MEM[(const Scalar &)matrix_26(D) + 8]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: can't determine dependence between MEM[(const Scalar &)matrix_26(D)] and MEM[(Scalar &)this_28(D) + 176]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)matrix_26(D)] and MEM[(const Scalar &)matrix_26(D) + 16]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: can't determine dependence between MEM[(const Scalar &)matrix_26(D)] and MEM[(Scalar &)this_28(D) + 184]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)matrix_26(D)] and MEM[(const Scalar &)matrix_26(D) + 24]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: can't determine dependence between MEM[(const Scalar &)matrix_26(D)] and MEM[(Scalar &)this_28(D) + 192]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)matrix_26(D)] and MEM[(const Scalar &)matrix_26(D) + 32]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: can't determine dependence between MEM[(const Scalar &)matrix_26(D)] and MEM[(Scalar &)this_28(D) + 200]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)matrix_26(D)] and MEM[(const Scalar &)matrix_26(D) + 40]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: can't determine dependence between MEM[(const Scalar &)matrix_26(D)] and MEM[(Scalar &)this_28(D) + 208]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)matrix_26(D)] and MEM[(const Scalar &)matrix_26(D) + 48]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: can't determine dependence between MEM[(const Scalar &)matrix_26(D)] and MEM[(Scalar &)this_28(D) + 216]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)matrix_26(D)] and MEM[(const Scalar &)matrix_26(D) + 56]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: can't determine dependence between MEM[(const Scalar &)matrix_26(D)] and MEM[(Scalar &)this_28(D) + 224]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)matrix_26(D)] and MEM[(const Scalar &)matrix_26(D) + 64]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: can't determine dependence between MEM[(const Scalar &)matrix_26(D)] and MEM[(Scalar &)this_28(D) + 232]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: can't determine dependence between MEM[(Scalar &)this_28(D) + 168] and MEM[(const Scalar &)matrix_26(D) + 8]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: not vectorized: unhandled data dependence in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:759: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:759: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:759: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: can't force alignment of ref: this_28(D)->m_computeThinU
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: not consecutive access _40 = this_28(D)->m_computeThinU;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: Detected interleaving this_28(D)->m_diagSize and this_28(D)->m_rows
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: can't force alignment of ref: this_28(D)->m_diagSize
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: can't force alignment of ref: this_28(D)->m_rows
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: Detected interleaving of size 2
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:760: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: can't force alignment of ref: this_28(D)->m_computeFullV
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: not consecutive access _45 = this_28(D)->m_computeFullV;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: can't force alignment of ref: this_28(D)->m_cols
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: not consecutive access _46 = this_28(D)->m_cols;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:761: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: can't force alignment of ref: this_28(D)->m_computeThinV
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: not consecutive access _49 = this_28(D)->m_computeThinV;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: Detected interleaving this_28(D)->m_diagSize and this_28(D)->m_cols
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: can't force alignment of ref: this_28(D)->m_diagSize
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: can't force alignment of ref: this_28(D)->m_cols
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: Detected interleaving of size 2
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:762: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand q_527
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: q_527 = PHI <q_87(33), 0(54)>

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _138
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _138 = (long unsigned int) _137;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _4
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _4 = MAX_EXPR <_141, _147>;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _151
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _151 = (long unsigned int) _150;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _156
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _156 = (long unsigned int) _155;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't force alignment of ref: *_140
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't force alignment of ref: MEM[(const Scalar &)pretmp_275]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: SLP: step doesn't divide the vector-size.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Unknown alignment for access: *((const Scalar &) &MEM[(const struct DenseStorage *)this_28(D) + 168B] + (sizetype) ((long unsigned int) p_635 * 24))
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: SLP: step doesn't divide the vector-size.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Unknown alignment for access: *((const Scalar &) &MEM[(const struct DenseStorage *)this_28(D) + 168B] + (sizetype) ((long unsigned int) p_635 * 8))
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Detected single element interleaving *_140 step 32
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: not consecutive access _57 = MEM[(const Scalar &)pretmp_275];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: not consecutive access _68 = *_158;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:791: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:791: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:791: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Block.h:116: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: get vectype with 2 units of type const double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: get vectype with 2 units of type const double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: Detected interleaving MEM[(const struct JacobiRotation *)&j_left] and MEM[(const struct JacobiRotation *)&j_left + 8B]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: misalign = 0 bytes of ref MEM[(const struct JacobiRotation *)&j_left]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: misalign = 8 bytes of ref MEM[(const struct JacobiRotation *)&j_left + 8B]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: Detected interleaving of size 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:301: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand _355
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: _355 = (long unsigned int) q_527;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand xi_606
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: xi_606 = MEM[(Scalar *)_349];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_607
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_607 = MEM[(Scalar *)_357];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand xi_606
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: xi_606 = MEM[(Scalar *)_349];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_607
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_607 = MEM[(Scalar *)_357];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand xi_624
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: xi_624 = MEM[(Scalar *)_349 + 24B];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_625
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_625 = MEM[(Scalar *)_357 + 24B];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand xi_624
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: xi_624 = MEM[(Scalar *)_349 + 24B];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_625
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_625 = MEM[(Scalar *)_357 + 24B];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand xi_642
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: xi_642 = MEM[(Scalar *)_349 + 48B];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_643
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_643 = MEM[(Scalar *)_357 + 48B];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand xi_642
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: xi_642 = MEM[(Scalar *)_349 + 48B];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_643
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_643 = MEM[(Scalar *)_357 + 48B];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: determined dependence between MEM[(Scalar *)_349] and MEM[(Scalar *)_349]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between MEM[(Scalar *)_349] and MEM[(Scalar *)_357]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: Detected interleaving MEM[(Scalar *)_349] and MEM[(Scalar *)_349 + 24B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between MEM[(Scalar *)_349] and MEM[(Scalar *)_357 + 24B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: Detected interleaving MEM[(Scalar *)_349] and MEM[(Scalar *)_349 + 48B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between MEM[(Scalar *)_349] and MEM[(Scalar *)_357 + 48B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between MEM[(Scalar *)_357] and MEM[(Scalar *)_349]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: determined dependence between MEM[(Scalar *)_357] and MEM[(Scalar *)_357]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between MEM[(Scalar *)_357] and MEM[(Scalar *)_349 + 24B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between MEM[(Scalar *)_357] and MEM[(Scalar *)_349 + 48B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between MEM[(Scalar *)_349] and MEM[(Scalar *)_357]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: not vectorized: unhandled data dependence in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: no vectype for stmt: x ={v} {CLOBBER};
 scalar_type: struct RowXpr
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: can't force alignment of ref: MEM[(const bool *)this_28(D) + 243B]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: not consecutive access _161 = MEM[(const bool *)this_28(D) + 243B];

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: get vectype with 2 units of type const double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: get vectype with 2 units of type const double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: Detected interleaving MEM[(const double &)&j_right + 8] and MEM[(const double &)&j_right]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: misalign = 8 bytes of ref MEM[(const double &)&j_right + 8]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: misalign = 0 bytes of ref MEM[(const double &)&j_right]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: Detected interleaving of size 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand _401
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: _401 = (long unsigned int) _136;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand xi_552
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: xi_552 = MEM[(Scalar *)_394];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_553
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_553 = MEM[(Scalar *)_403];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand _387
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: _387 = MEM[(const double &)&j_right + 8];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_553
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_553 = MEM[(Scalar *)_403];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand xi_570
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: xi_570 = MEM[(Scalar *)_394 + 8B];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_571
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_571 = MEM[(Scalar *)_403 + 8B];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand _387
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: _387 = MEM[(const double &)&j_right + 8];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_571
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_571 = MEM[(Scalar *)_403 + 8B];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand xi_588
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: xi_588 = MEM[(Scalar *)_394 + 16B];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_589
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_589 = MEM[(Scalar *)_403 + 16B];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand _387
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: _387 = MEM[(const double &)&j_right + 8];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: vect_is_simple_use: operand yi_589
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: def_stmt: yi_589 = MEM[(Scalar *)_403 + 16B];

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: determined dependence between MEM[(Scalar *)_394] and MEM[(Scalar *)_394]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between MEM[(Scalar *)_394] and MEM[(Scalar *)_403]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: Detected interleaving MEM[(Scalar *)_394] and MEM[(Scalar *)_394 + 8B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between MEM[(Scalar *)_394] and MEM[(Scalar *)_403 + 8B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: Detected interleaving MEM[(Scalar *)_394] and MEM[(Scalar *)_394 + 16B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between MEM[(Scalar *)_394] and MEM[(Scalar *)_403 + 16B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between MEM[(Scalar *)_403] and MEM[(Scalar *)_394]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: determined dependence between MEM[(Scalar *)_403] and MEM[(Scalar *)_403]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: Detected interleaving MEM[(Scalar *)_403] and MEM[(Scalar *)_403 + 8B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between MEM[(Scalar *)_403] and MEM[(Scalar *)_394 + 8B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: Detected interleaving MEM[(Scalar *)_403] and MEM[(Scalar *)_403 + 16B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between MEM[(Scalar *)_403] and MEM[(Scalar *)_394 + 16B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: can't determine dependence between MEM[(Scalar *)_394] and MEM[(Scalar *)_403]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: not vectorized: unhandled data dependence in basic block.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: not vectorized: no vectype for stmt: D.1130995 ={v} {CLOBBER};
 scalar_type: struct JacobiRotation
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:296: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: can't force alignment of ref: MEM[(const bool *)this_28(D) + 245B]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: not consecutive access _166 = MEM[(const bool *)this_28(D) + 245B];

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: no vectype for stmt: j_left ={v} {CLOBBER};
 scalar_type: struct JacobiRotation
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:776: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:776: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:776: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: can't force alignment of ref: this_28(D)->m_diagSize
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: not consecutive access _54 = this_28(D)->m_diagSize;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:768: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:768: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:768: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:806: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:806: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:806: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:153: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: can't force alignment of ref: this_28(D)->m_diagSize
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not consecutive access pretmp_594 = this_28(D)->m_diagSize;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:774: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand i_323
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: i_323 = PHI <i_99(63), 0(59)>

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand _171
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: _171 = (long unsigned int) _170;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: vect_is_simple_use: operand index.497_176
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: def_stmt: index.497_176 = (long unsigned int) i_323;

/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't determine dependence between *_173 and *_178
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: can't determine dependence between *_178 and MEM[(const struct JacobiSVD *)this_28(D) + 242B]
/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:140: note: not vectorized: unhandled data dependence in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: can't force alignment of ref: MEM[(const bool *)this_28(D) + 243B]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: not consecutive access _179 = MEM[(const bool *)this_28(D) + 243B];

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:806: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:806: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:806: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:815: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:815: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:815: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:815: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:815: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:815: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:815: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:815: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:815: note: can't force alignment of ref: this_28(D)->m_nonzeroSingularValues
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:815: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:815: note: not consecutive access this_28(D)->m_nonzeroSingularValues = _563;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:815: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:815: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:815: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/MapBase.h:146: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/MapBase.h:146: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/MapBase.h:146: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/MapBase.h:146: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/MapBase.h:146: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/MapBase.h:146: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Block.h:140: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/Visitor.h:47: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/Visitor.h:47: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/Visitor.h:47: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/Visitor.h:47: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/Visitor.h:47: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/Visitor.h:47: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/Visitor.h:47: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Core/Visitor.h:47: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/Visitor.h:47: note: can't force alignment of ref: MEM[(const Scalar &)_451]
/usr/include/eigen3/Eigen/src/Core/Visitor.h:47: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Core/Visitor.h:47: note: not consecutive access maxRemainingSingularValue_183 = MEM[(const Scalar &)_451];

/usr/include/eigen3/Eigen/src/Core/Visitor.h:47: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Core/Visitor.h:47: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Core/Visitor.h:47: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: vect_is_simple_use: operand _185
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: def_stmt: _185 = (long unsigned int) pos_17;

/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: get vectype with 2 units of type RealScalar
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: SLP: step doesn't divide the vector-size.
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: Unknown alignment for access: *((const Scalar &) &MEM[(struct DenseStorage *)this_28(D) + 144B] + (sizetype) ((long unsigned int) (i_324 - _124) * 8))
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Core/MapBase.h:92: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: not vectorized: no vectype for stmt: D.850739 ={v} {CLOBBER};
 scalar_type: struct SegmentReturnType
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:822: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:822: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:822: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:822: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:822: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:822: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:822: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:822: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:822: note: can't force alignment of ref: this_28(D)->m_nonzeroSingularValues
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:822: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:822: note: not consecutive access this_28(D)->m_nonzeroSingularValues = i_542;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:822: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:822: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:822: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:825: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:825: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:825: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: get vectype with 2 units of type type
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: get vectype with 2 units of type type
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: vect_is_simple_use: operand index.497_196
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: def_stmt: index.497_196 = (long unsigned int) pos_107;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: type of def: 3.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: vect_is_simple_use: operand index.497_199
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: def_stmt: index.497_199 = (long unsigned int) i_324;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: type of def: 3.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: can't determine dependence between MEM[(type &)_201] and MEM[(double &)_201]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: can't determine dependence between MEM[(type &)_201] and MEM[(double &)_198]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: can't determine dependence between MEM[(type &)_198] and MEM[(double &)_201]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: can't determine dependence between MEM[(type &)_198] and MEM[(double &)_198]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: can't determine dependence between MEM[(double &)_201] and MEM[(double &)_198]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:827: note: not vectorized: unhandled data dependence in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: can't force alignment of ref: MEM[(const bool *)this_28(D) + 243B]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: not consecutive access _204 = MEM[(const bool *)this_28(D) + 243B];

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: can't force alignment of ref: MEM[(const struct JacobiSVD *)this_28(D) + 244B]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not consecutive access _119 = MEM[(const struct JacobiSVD *)this_28(D) + 244B];

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: can't force alignment of ref: MEM[(const bool *)this_28(D) + 245B]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: not consecutive access _214 = MEM[(const bool *)this_28(D) + 245B];

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:816: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:816: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:816: note: get vectype with 2 units of type Index
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:816: note: vectype: vector(2) long int
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:816: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:816: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:816: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:816: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:816: note: can't force alignment of ref: this_28(D)->m_diagSize
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:816: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:816: note: not consecutive access _101 = this_28(D)->m_diagSize;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:816: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:816: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:816: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:834: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:834: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:834: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:834: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:834: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:834: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:834: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:834: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:834: note: can't force alignment of ref: this_28(D)->m_isInitialized
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:834: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:834: note: not consecutive access this_28(D)->m_isInitialized = 1;

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:834: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:834: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:834: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: Detected interleaving MEM[(struct JacobiRotation *)&D.847875] and MEM[(struct JacobiRotation *)&D.847875 + 8B]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: misalign = 0 bytes of ref MEM[(struct JacobiRotation *)&D.847875]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: misalign = 8 bytes of ref MEM[(struct JacobiRotation *)&D.847875 + 8B]
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: Detected interleaving of size 2
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: Build SLP for MEM[(struct JacobiRotation *)&D.847875] = _364;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vect_is_simple_use: operand _364
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: def_stmt: _364 = MEM[(const struct JacobiRotation *)&j_left];

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vect_model_store_cost: aligned.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 1 .
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: Build SLP for MEM[(struct JacobiRotation *)&D.847875 + 8B] = _164;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: get vectype with 2 units of type double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: vect_is_simple_use: operand _164
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: def_stmt: _164 = -_365;

/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: Build SLP failed: different types 
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Jacobi/Jacobi.h:59: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:798: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:798: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:798: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: can't force alignment of ref: *_173
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: Detected single element interleaving *_173 step 32
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:810: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:829: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:829: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:829: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:830: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:830: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:830: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:716: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:716: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:716: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: not vectorized: no vectype for stmt: D.850739 ={v} {CLOBBER};
 scalar_type: struct SegmentReturnType
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:819: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:742: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type long unsigned int
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: vector(2) long unsigned int
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type long unsigned int
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: vector(2) long unsigned int
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vect_is_simple_use: operand _8
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: def_stmt: _8 = MEM[(const Scalar &)_7];

/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vect_is_simple_use: operand _21
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: def_stmt: _21 = MEM[(const Scalar &)_7 + 8];

/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vect_is_simple_use: operand _24
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: def_stmt: _24 = MEM[(const Scalar &)_7 + 16];

/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vect_is_simple_use: operand _29
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: def_stmt: _29 = MEM[(const Scalar &)_7 + 24];

/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vect_is_simple_use: operand _32
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: def_stmt: _32 = MEM[(const Scalar &)_7 + 32];

/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vect_is_simple_use: operand _37
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: def_stmt: _37 = MEM[(const Scalar &)_7 + 40];

/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vect_is_simple_use: operand _40
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: def_stmt: _40 = MEM[(const Scalar &)_7 + 48];

/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vect_is_simple_use: operand _43
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: def_stmt: _43 = MEM[(const Scalar &)_7 + 56];

/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: vect_is_simple_use: operand _46
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: def_stmt: _46 = MEM[(const Scalar &)_7 + 64];

/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const struct DiagonalWrapper *)other_2(D) + 8B].m_diagonal and MEM[(const struct DiagonalProduct *)other_2(D)].m_matrix
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalWrapper *)other_2(D) + 8B].m_diagonal and MEM[(Scalar &)this_3(D)]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalWrapper *)other_2(D) + 8B].m_diagonal and MEM[(Scalar &)this_3(D) + 8]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalWrapper *)other_2(D) + 8B].m_diagonal and MEM[(Scalar &)this_3(D) + 16]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalWrapper *)other_2(D) + 8B].m_diagonal and MEM[(Scalar &)this_3(D) + 24]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalWrapper *)other_2(D) + 8B].m_diagonal and MEM[(Scalar &)this_3(D) + 32]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalWrapper *)other_2(D) + 8B].m_diagonal and MEM[(Scalar &)this_3(D) + 40]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalWrapper *)other_2(D) + 8B].m_diagonal and MEM[(Scalar &)this_3(D) + 48]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalWrapper *)other_2(D) + 8B].m_diagonal and MEM[(Scalar &)this_3(D) + 56]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalWrapper *)other_2(D) + 8B].m_diagonal and MEM[(Scalar &)this_3(D) + 64]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_5] and MEM[(Scalar &)this_3(D)]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: determined dependence between MEM[(const Scalar &)_5] and MEM[(const Scalar &)_5]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_5] and MEM[(Scalar &)this_3(D) + 8]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: determined dependence between MEM[(const Scalar &)_5] and MEM[(const Scalar &)_5]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_5] and MEM[(Scalar &)this_3(D) + 16]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const Scalar &)_5] and MEM[(const Scalar &)_5 + 8]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_5] and MEM[(Scalar &)this_3(D) + 24]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const Scalar &)_5] and MEM[(const Scalar &)_5 + 8]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_5] and MEM[(Scalar &)this_3(D) + 32]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const Scalar &)_5] and MEM[(const Scalar &)_5 + 8]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_5] and MEM[(Scalar &)this_3(D) + 40]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const Scalar &)_5] and MEM[(const Scalar &)_5 + 16]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_5] and MEM[(Scalar &)this_3(D) + 48]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const Scalar &)_5] and MEM[(const Scalar &)_5 + 16]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_5] and MEM[(Scalar &)this_3(D) + 56]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const Scalar &)_5] and MEM[(const Scalar &)_5 + 16]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_5] and MEM[(Scalar &)this_3(D) + 64]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalProduct *)other_2(D)].m_matrix and MEM[(Scalar &)this_3(D)]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalProduct *)other_2(D)].m_matrix and MEM[(Scalar &)this_3(D) + 8]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalProduct *)other_2(D)].m_matrix and MEM[(Scalar &)this_3(D) + 16]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalProduct *)other_2(D)].m_matrix and MEM[(Scalar &)this_3(D) + 24]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalProduct *)other_2(D)].m_matrix and MEM[(Scalar &)this_3(D) + 32]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalProduct *)other_2(D)].m_matrix and MEM[(Scalar &)this_3(D) + 40]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalProduct *)other_2(D)].m_matrix and MEM[(Scalar &)this_3(D) + 48]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalProduct *)other_2(D)].m_matrix and MEM[(Scalar &)this_3(D) + 56]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const struct DiagonalProduct *)other_2(D)].m_matrix and MEM[(Scalar &)this_3(D) + 64]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_7] and MEM[(Scalar &)this_3(D)]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const Scalar &)_7] and MEM[(const Scalar &)_7 + 8]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_7] and MEM[(Scalar &)this_3(D) + 8]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const Scalar &)_7] and MEM[(const Scalar &)_7 + 16]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_7] and MEM[(Scalar &)this_3(D) + 16]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const Scalar &)_7] and MEM[(const Scalar &)_7 + 24]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_7] and MEM[(Scalar &)this_3(D) + 24]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const Scalar &)_7] and MEM[(const Scalar &)_7 + 32]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_7] and MEM[(Scalar &)this_3(D) + 32]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const Scalar &)_7] and MEM[(const Scalar &)_7 + 40]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_7] and MEM[(Scalar &)this_3(D) + 40]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const Scalar &)_7] and MEM[(const Scalar &)_7 + 48]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_7] and MEM[(Scalar &)this_3(D) + 48]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const Scalar &)_7] and MEM[(const Scalar &)_7 + 56]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_7] and MEM[(Scalar &)this_3(D) + 56]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: Detected interleaving MEM[(const Scalar &)_7] and MEM[(const Scalar &)_7 + 64]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(const Scalar &)_7] and MEM[(Scalar &)this_3(D) + 64]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: can't determine dependence between MEM[(Scalar &)this_3(D)] and MEM[(const Scalar &)_5]
/usr/include/eigen3/Eigen/src/Core/DiagonalMatrix.h:261: note: not vectorized: unhandled data dependence in basic block.

/usr/include/c++/4.8/iostream:74: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/iostream:74: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/iostream:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: get vectype with 16 units of type char
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: vectype: vector(16) char
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_pattern_recog ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_dependences ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: force alignment of MEM[(char *)&_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE]
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE]
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: not consecutive access MEM[(char *)&_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_10bad_alloc_EE1eE] = 1;

/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_slp ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: Failed to SLP the basic block.
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: get vectype with 16 units of type char
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: vectype: vector(16) char
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_pattern_recog ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_dependences ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: force alignment of MEM[(char *)&_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE]
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE]
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: not consecutive access _7 = MEM[(char *)&_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE];

/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_slp ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: Failed to SLP the basic block.
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: ===vect_slp_analyze_bb===

/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_data_refs ===

/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: get vectype with 16 units of type char
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: vectype: vector(16) char
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_pattern_recog ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_dependences ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: vect_compute_data_ref_alignment:
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE]
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: not consecutive access MEM[(char *)&_ZGVN5boost16exception_detail37exception_ptr_static_exception_objectINS0_14bad_exception_EE1eE] = 1;

/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: === vect_analyze_slp ===
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: Failed to SLP the basic block.
/usr/include/boost/exception/detail/exception_ptr.hpp:138: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/asio/error.hpp:216: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/error.hpp:216: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/error.hpp:216: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:181: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:181: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:181: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:57: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:57: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:57: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:57: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:57: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:57: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/error.hpp:246: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/error.hpp:246: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/error.hpp:246: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/error.hpp:246: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/error.hpp:246: note: get vectype with 16 units of type char
/usr/include/boost/asio/error.hpp:246: note: vectype: vector(16) char
/usr/include/boost/asio/error.hpp:246: note: === vect_pattern_recog ===
/usr/include/boost/asio/error.hpp:246: note: === vect_analyze_dependences ===
/usr/include/boost/asio/error.hpp:246: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/asio/error.hpp:246: note: vect_compute_data_ref_alignment:
/usr/include/boost/asio/error.hpp:246: note: force alignment of netdb_category
/usr/include/boost/asio/error.hpp:246: note: misalign = 0 bytes of ref netdb_category
/usr/include/boost/asio/error.hpp:246: note: vect_compute_data_ref_alignment:
/usr/include/boost/asio/error.hpp:246: note: force alignment of MEM[(char *)&_ZGVZN5boost4asio5error21get_addrinfo_categoryEvE8instance]
/usr/include/boost/asio/error.hpp:246: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVZN5boost4asio5error21get_addrinfo_categoryEvE8instance]
/usr/include/boost/asio/error.hpp:246: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/asio/error.hpp:246: note: not consecutive access netdb_category = &instance.D.285871;

/usr/include/boost/asio/error.hpp:246: note: not consecutive access _19 = MEM[(char *)&_ZGVZN5boost4asio5error21get_addrinfo_categoryEvE8instance];

/usr/include/boost/asio/error.hpp:246: note: === vect_analyze_slp ===
/usr/include/boost/asio/error.hpp:246: note: Failed to SLP the basic block.
/usr/include/boost/asio/error.hpp:246: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:181: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:181: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:181: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:85: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:85: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:85: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:85: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:85: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:85: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/error.hpp:248: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/error.hpp:248: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/error.hpp:248: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/error.hpp:248: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/error.hpp:248: note: get vectype with 16 units of type char
/usr/include/boost/asio/error.hpp:248: note: vectype: vector(16) char
/usr/include/boost/asio/error.hpp:248: note: === vect_pattern_recog ===
/usr/include/boost/asio/error.hpp:248: note: === vect_analyze_dependences ===
/usr/include/boost/asio/error.hpp:248: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/asio/error.hpp:248: note: vect_compute_data_ref_alignment:
/usr/include/boost/asio/error.hpp:248: note: force alignment of addrinfo_category
/usr/include/boost/asio/error.hpp:248: note: misalign = 0 bytes of ref addrinfo_category
/usr/include/boost/asio/error.hpp:248: note: vect_compute_data_ref_alignment:
/usr/include/boost/asio/error.hpp:248: note: force alignment of MEM[(char *)&_ZGVZN5boost4asio5error17get_misc_categoryEvE8instance]
/usr/include/boost/asio/error.hpp:248: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVZN5boost4asio5error17get_misc_categoryEvE8instance]
/usr/include/boost/asio/error.hpp:248: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/asio/error.hpp:248: note: not consecutive access addrinfo_category = &instance.D.285952;

/usr/include/boost/asio/error.hpp:248: note: not consecutive access _21 = MEM[(char *)&_ZGVZN5boost4asio5error17get_misc_categoryEvE8instance];

/usr/include/boost/asio/error.hpp:248: note: === vect_analyze_slp ===
/usr/include/boost/asio/error.hpp:248: note: Failed to SLP the basic block.
/usr/include/boost/asio/error.hpp:248: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:181: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:181: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:181: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:119: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:119: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:119: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/impl/error.ipp:119: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/impl/error.ipp:119: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/impl/error.ipp:119: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/asio/error.hpp:250: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/error.hpp:250: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/error.hpp:250: note: get vectype with 2 units of type long unsigned int
/usr/include/boost/asio/error.hpp:250: note: vectype: vector(2) long unsigned int
/usr/include/boost/asio/error.hpp:250: note: === vect_pattern_recog ===
/usr/include/boost/asio/error.hpp:250: note: === vect_analyze_dependences ===
/usr/include/boost/asio/error.hpp:250: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/asio/error.hpp:250: note: vect_compute_data_ref_alignment:
/usr/include/boost/asio/error.hpp:250: note: force alignment of misc_category
/usr/include/boost/asio/error.hpp:250: note: misalign = 0 bytes of ref misc_category
/usr/include/boost/asio/error.hpp:250: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/asio/error.hpp:250: note: not consecutive access misc_category = &instance.D.286019;

/usr/include/boost/asio/error.hpp:250: note: === vect_analyze_slp ===
/usr/include/boost/asio/error.hpp:250: note: Failed to SLP the basic block.
/usr/include/boost/asio/error.hpp:250: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/asio/detail/call_stack.hpp:119: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/detail/call_stack.hpp:119: note: get vectype with 16 units of type char
/usr/include/boost/asio/detail/call_stack.hpp:119: note: vectype: vector(16) char
/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_pattern_recog ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_dependences ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: vect_compute_data_ref_alignment:
/usr/include/boost/asio/detail/call_stack.hpp:119: note: force alignment of MEM[(char *)&_ZGVN5boost4asio6detail10call_stackINS1_15task_io_serviceENS1_27task_io_service_thread_infoEE4top_E]
/usr/include/boost/asio/detail/call_stack.hpp:119: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVN5boost4asio6detail10call_stackINS1_15task_io_serviceENS1_27task_io_service_thread_infoEE4top_E]
/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: not consecutive access MEM[(char *)&_ZGVN5boost4asio6detail10call_stackINS1_15task_io_serviceENS1_27task_io_service_thread_infoEE4top_E] = 1;

/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_slp ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: Failed to SLP the basic block.
/usr/include/boost/asio/detail/call_stack.hpp:119: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/asio/io_service.hpp:762: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/io_service.hpp:762: note: get vectype with 16 units of type char
/usr/include/boost/asio/io_service.hpp:762: note: vectype: vector(16) char
/usr/include/boost/asio/io_service.hpp:762: note: === vect_pattern_recog ===
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_dependences ===
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/asio/io_service.hpp:762: note: vect_compute_data_ref_alignment:
/usr/include/boost/asio/io_service.hpp:762: note: force alignment of MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_13epoll_reactorEE2idE]
/usr/include/boost/asio/io_service.hpp:762: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_13epoll_reactorEE2idE]
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/asio/io_service.hpp:762: note: not consecutive access _13 = MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_13epoll_reactorEE2idE];

/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_slp ===
/usr/include/boost/asio/io_service.hpp:762: note: Failed to SLP the basic block.
/usr/include/boost/asio/io_service.hpp:762: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/asio/io_service.hpp:762: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/io_service.hpp:762: note: get vectype with 16 units of type char
/usr/include/boost/asio/io_service.hpp:762: note: vectype: vector(16) char
/usr/include/boost/asio/io_service.hpp:762: note: === vect_pattern_recog ===
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_dependences ===
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/asio/io_service.hpp:762: note: vect_compute_data_ref_alignment:
/usr/include/boost/asio/io_service.hpp:762: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_13epoll_reactorEE2idE]
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/asio/io_service.hpp:762: note: not consecutive access MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_13epoll_reactorEE2idE] = 1;

/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_slp ===
/usr/include/boost/asio/io_service.hpp:762: note: Failed to SLP the basic block.
/usr/include/boost/asio/io_service.hpp:762: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/asio/io_service.hpp:762: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/io_service.hpp:762: note: get vectype with 16 units of type char
/usr/include/boost/asio/io_service.hpp:762: note: vectype: vector(16) char
/usr/include/boost/asio/io_service.hpp:762: note: === vect_pattern_recog ===
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_dependences ===
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/asio/io_service.hpp:762: note: vect_compute_data_ref_alignment:
/usr/include/boost/asio/io_service.hpp:762: note: force alignment of MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_15task_io_serviceEE2idE]
/usr/include/boost/asio/io_service.hpp:762: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_15task_io_serviceEE2idE]
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/asio/io_service.hpp:762: note: not consecutive access _14 = MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_15task_io_serviceEE2idE];

/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_slp ===
/usr/include/boost/asio/io_service.hpp:762: note: Failed to SLP the basic block.
/usr/include/boost/asio/io_service.hpp:762: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/asio/io_service.hpp:762: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/io_service.hpp:762: note: get vectype with 16 units of type char
/usr/include/boost/asio/io_service.hpp:762: note: vectype: vector(16) char
/usr/include/boost/asio/io_service.hpp:762: note: === vect_pattern_recog ===
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_dependences ===
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/asio/io_service.hpp:762: note: vect_compute_data_ref_alignment:
/usr/include/boost/asio/io_service.hpp:762: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_15task_io_serviceEE2idE]
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/asio/io_service.hpp:762: note: not consecutive access MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_15task_io_serviceEE2idE] = 1;

/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_slp ===
/usr/include/boost/asio/io_service.hpp:762: note: Failed to SLP the basic block.
/usr/include/boost/asio/io_service.hpp:762: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/asio/detail/call_stack.hpp:119: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/detail/call_stack.hpp:119: note: get vectype with 16 units of type char
/usr/include/boost/asio/detail/call_stack.hpp:119: note: vectype: vector(16) char
/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_pattern_recog ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_dependences ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: vect_compute_data_ref_alignment:
/usr/include/boost/asio/detail/call_stack.hpp:119: note: force alignment of MEM[(char *)&_ZGVN5boost4asio6detail10call_stackINS1_14strand_service11strand_implEhE4top_E]
/usr/include/boost/asio/detail/call_stack.hpp:119: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVN5boost4asio6detail10call_stackINS1_14strand_service11strand_implEhE4top_E]
/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: not consecutive access _15 = MEM[(char *)&_ZGVN5boost4asio6detail10call_stackINS1_14strand_service11strand_implEhE4top_E];

/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_slp ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: Failed to SLP the basic block.
/usr/include/boost/asio/detail/call_stack.hpp:119: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/asio/detail/call_stack.hpp:119: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/detail/call_stack.hpp:119: note: get vectype with 16 units of type char
/usr/include/boost/asio/detail/call_stack.hpp:119: note: vectype: vector(16) char
/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_pattern_recog ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_dependences ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: vect_compute_data_ref_alignment:
/usr/include/boost/asio/detail/call_stack.hpp:119: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVN5boost4asio6detail10call_stackINS1_14strand_service11strand_implEhE4top_E]
/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: not consecutive access MEM[(char *)&_ZGVN5boost4asio6detail10call_stackINS1_14strand_service11strand_implEhE4top_E] = 1;

/usr/include/boost/asio/detail/call_stack.hpp:119: note: === vect_analyze_slp ===
/usr/include/boost/asio/detail/call_stack.hpp:119: note: Failed to SLP the basic block.
/usr/include/boost/asio/detail/call_stack.hpp:119: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/asio/io_service.hpp:762: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/io_service.hpp:762: note: get vectype with 16 units of type char
/usr/include/boost/asio/io_service.hpp:762: note: vectype: vector(16) char
/usr/include/boost/asio/io_service.hpp:762: note: === vect_pattern_recog ===
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_dependences ===
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/asio/io_service.hpp:762: note: vect_compute_data_ref_alignment:
/usr/include/boost/asio/io_service.hpp:762: note: force alignment of MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_14strand_serviceEE2idE]
/usr/include/boost/asio/io_service.hpp:762: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_14strand_serviceEE2idE]
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/asio/io_service.hpp:762: note: not consecutive access _16 = MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_14strand_serviceEE2idE];

/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_slp ===
/usr/include/boost/asio/io_service.hpp:762: note: Failed to SLP the basic block.
/usr/include/boost/asio/io_service.hpp:762: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/boost/asio/io_service.hpp:762: note: ===vect_slp_analyze_bb===

/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_refs ===

/usr/include/boost/asio/io_service.hpp:762: note: get vectype with 16 units of type char
/usr/include/boost/asio/io_service.hpp:762: note: vectype: vector(16) char
/usr/include/boost/asio/io_service.hpp:762: note: === vect_pattern_recog ===
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_dependences ===
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/asio/io_service.hpp:762: note: vect_compute_data_ref_alignment:
/usr/include/boost/asio/io_service.hpp:762: note: misalign = 0 bytes of ref MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_14strand_serviceEE2idE]
/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/asio/io_service.hpp:762: note: not consecutive access MEM[(char *)&_ZGVN5boost4asio6detail12service_baseINS1_14strand_serviceEE2idE] = 1;

/usr/include/boost/asio/io_service.hpp:762: note: === vect_analyze_slp ===
/usr/include/boost/asio/io_service.hpp:762: note: Failed to SLP the basic block.
/usr/include/boost/asio/io_service.hpp:762: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:181: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:181: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:181: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at /home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:118

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:118: note: ===== analyze_loop_nest =====
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:118: note: === vect_analyze_loop_form ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:118: note: not vectorized: control flow in loop.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:118: note: bad loop form.
Analyzing loop at /home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:106

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:106: note: ===== analyze_loop_nest =====
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:106: note: === vect_analyze_loop_form ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:106: note: not vectorized: control flow in loop.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:106: note: bad loop form.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: vectorized 0 loops in function.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:78: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:78: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:78: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:87: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:87: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:87: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:90: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:90: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:90: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:106: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:106: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:106: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:106: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:106: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:106: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:108: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:108: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:108: note: get vectype with 2 units of type int_type
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:108: note: vectype: vector(2) long int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:108: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:108: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:108: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:108: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:108: note: misalign = 0 bytes of ref MEM[(struct time_duration *)&D.693868]
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:108: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:108: note: not consecutive access MEM[(struct time_duration *)&D.693868] = 10000;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:108: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:108: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:108: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:109: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:109: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:109: note: not vectorized: no vectype for stmt: D.693868 ={v} {CLOBBER};
 scalar_type: struct milliseconds
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:109: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:109: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:109: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:109: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:109: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:109: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:109: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:104: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:104: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:104: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:118: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:118: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:118: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:119: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:119: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:119: note: not vectorized: not enough data-refs in basic block.

/usr/include/boost/date_time/time_duration.hpp:255: note: ===vect_slp_analyze_bb===

/usr/include/boost/date_time/time_duration.hpp:255: note: === vect_analyze_data_refs ===

/usr/include/boost/date_time/time_duration.hpp:255: note: get vectype with 2 units of type int_type
/usr/include/boost/date_time/time_duration.hpp:255: note: vectype: vector(2) long int
/usr/include/boost/date_time/time_duration.hpp:255: note: === vect_pattern_recog ===
/usr/include/boost/date_time/time_duration.hpp:255: note: === vect_analyze_dependences ===
/usr/include/boost/date_time/time_duration.hpp:255: note: === vect_analyze_data_refs_alignment ===
/usr/include/boost/date_time/time_duration.hpp:255: note: vect_compute_data_ref_alignment:
/usr/include/boost/date_time/time_duration.hpp:255: note: misalign = 0 bytes of ref MEM[(struct time_duration *)&D.693871]
/usr/include/boost/date_time/time_duration.hpp:255: note: === vect_analyze_data_ref_accesses ===
/usr/include/boost/date_time/time_duration.hpp:255: note: not consecutive access MEM[(struct time_duration *)&D.693871] = 10000;

/usr/include/boost/date_time/time_duration.hpp:255: note: === vect_analyze_slp ===
/usr/include/boost/date_time/time_duration.hpp:255: note: Failed to SLP the basic block.
/usr/include/boost/date_time/time_duration.hpp:255: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: not vectorized: no vectype for stmt: D.693871 ={v} {CLOBBER};
 scalar_type: struct milliseconds
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:113: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:113: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:113: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:138: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:138: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:138: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:138: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:138: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:138: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:143: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:143: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:143: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: not vectorized: no vectype for stmt: D.1131190 ={v} {CLOBBER};
 scalar_type: struct AffinePart
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 64] and MEM[(const Scalar &)&slam + 72]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 64] and MEM[(const Scalar &)&slam + 80]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 64] and MEM[(const Scalar &)&slam + 96]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 64] and MEM[(const Scalar &)&slam + 104]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 64] and MEM[(const Scalar &)&slam + 112]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 64] and MEM[(const Scalar &)&slam + 128]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 64] and MEM[(const Scalar &)&slam + 136]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 64] and MEM[(const Scalar &)&slam + 144]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 72] and MEM[(const Scalar &)&slam + 80]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 72] and MEM[(const Scalar &)&slam + 96]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 72] and MEM[(const Scalar &)&slam + 104]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 72] and MEM[(const Scalar &)&slam + 112]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 72] and MEM[(const Scalar &)&slam + 128]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 72] and MEM[(const Scalar &)&slam + 136]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 72] and MEM[(const Scalar &)&slam + 144]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 80] and MEM[(const Scalar &)&slam + 96]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 80] and MEM[(const Scalar &)&slam + 104]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 80] and MEM[(const Scalar &)&slam + 112]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 80] and MEM[(const Scalar &)&slam + 128]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 80] and MEM[(const Scalar &)&slam + 136]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 80] and MEM[(const Scalar &)&slam + 144]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 96] and MEM[(const Scalar &)&slam + 104]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 96] and MEM[(const Scalar &)&slam + 112]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 96] and MEM[(const Scalar &)&slam + 128]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 96] and MEM[(const Scalar &)&slam + 136]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 96] and MEM[(const Scalar &)&slam + 144]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 104] and MEM[(const Scalar &)&slam + 112]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 104] and MEM[(const Scalar &)&slam + 128]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 104] and MEM[(const Scalar &)&slam + 136]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 104] and MEM[(const Scalar &)&slam + 144]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 112] and MEM[(const Scalar &)&slam + 128]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 112] and MEM[(const Scalar &)&slam + 136]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 112] and MEM[(const Scalar &)&slam + 144]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 128] and MEM[(const Scalar &)&slam + 136]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 128] and MEM[(const Scalar &)&slam + 144]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving MEM[(const Scalar &)&slam + 136] and MEM[(const Scalar &)&slam + 144]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: misalign = 0 bytes of ref MEM[(const Scalar &)&slam + 64]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: misalign = 8 bytes of ref MEM[(const Scalar &)&slam + 72]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: misalign = 0 bytes of ref MEM[(const Scalar &)&slam + 80]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: misalign = 0 bytes of ref MEM[(const Scalar &)&slam + 96]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: misalign = 8 bytes of ref MEM[(const Scalar &)&slam + 104]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: misalign = 0 bytes of ref MEM[(const Scalar &)&slam + 112]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: misalign = 0 bytes of ref MEM[(const Scalar &)&slam + 128]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: misalign = 8 bytes of ref MEM[(const Scalar &)&slam + 136]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: misalign = 0 bytes of ref MEM[(const Scalar &)&slam + 144]
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Detected interleaving of size 9
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:480: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:620: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:620: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:620: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:618: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:618: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:618: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:618: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:618: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:618: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:618: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:618: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:618: note: misalign = 4 bytes of ref MEM[(const struct JacobiSVD *)&svd + 244B]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:618: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:618: note: not consecutive access _431 = MEM[(const struct JacobiSVD *)&svd + 244B];

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:618: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:618: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:618: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: misalign = 5 bytes of ref MEM[(const bool *)&svd + 245B]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: not consecutive access _432 = MEM[(const bool *)&svd + 245B];

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: misalign = 3 bytes of ref MEM[(const bool *)&svd + 243B]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: not consecutive access _437 = MEM[(const bool *)&svd + 243B];

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: misalign = 3 bytes of ref MEM[(const bool *)&svd + 243B]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: not consecutive access _1010 = MEM[(const bool *)&svd + 243B];

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:637: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: misalign = 5 bytes of ref MEM[(const bool *)&svd + 245B]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: not consecutive access _1053 = MEM[(const bool *)&svd + 245B];

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:639: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:143: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:143: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:143: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:64: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:64: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:64: note: get vectype with 2 units of type const double
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:64: note: vectype: const vector(2) double
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:64: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:64: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:64: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:64: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:64: note: can't force alignment of ref: MEM[(const double &)_1524]
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:64: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:64: note: not consecutive access _185 = MEM[(const double &)_1524];

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:64: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:64: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:64: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type size_type
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: misalign = 0 bytes of ref D.1131176._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: can't force alignment of ref: MEM[(struct _Rep *)_186 + -24B].D.20112._M_length
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _186 = D.1131176._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _187 = MEM[(struct _Rep *)_186 + -24B].D.20112._M_length;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/c++/4.8/ostream:535: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:535: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:535: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:221: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:221: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:221: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:535: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:535: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:535: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:221: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:221: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:221: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:535: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:535: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:535: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:221: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:221: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:221: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:535: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:535: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:535: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:221: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:221: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:221: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:535: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:535: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:535: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:221: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:221: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:221: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:535: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:535: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:535: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:221: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:221: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:221: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:535: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:535: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:535: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:221: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:221: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:221: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:113: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:113: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:113: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: misalign = 0 bytes of ref D.1131176._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _204 = D.1131176._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/basic_string.h:293: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/basic_string.h:293: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/basic_string.h:293: note: misalign = 0 bytes of ref D.1131176._M_dataplus._M_p
/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: not consecutive access _206 = D.1131176._M_dataplus._M_p;

/usr/include/c++/4.8/bits/basic_string.h:293: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/basic_string.h:293: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/basic_string.h:293: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:114: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:114: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:114: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:157: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:157: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:157: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:161: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:161: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:161: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:80: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:80: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:80: note: get vectype with 4 units of type unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:80: note: vectype: vector(4) unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:80: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:80: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:80: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:80: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:80: note: misalign = 8 bytes of ref slam.frameCounter
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:80: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:80: note: not consecutive access _101 = slam.frameCounter;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:80: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:80: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:80: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:196: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:196: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:196: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:113: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:113: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:113: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:81: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:81: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:81: note: get vectype with 4 units of type unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:81: note: vectype: vector(4) unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:81: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:81: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:81: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:81: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:81: note: misalign = 12 bytes of ref slam.badFrameCounter
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:81: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:81: note: not consecutive access _104 = slam.badFrameCounter;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:81: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:81: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:81: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:196: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:196: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:196: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:113: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:113: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:113: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:82: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:82: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:82: note: get vectype with 4 units of type unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:82: note: vectype: vector(4) unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:82: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:82: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:82: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:82: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:82: note: misalign = 0 bytes of ref slam.noTrafoFoundCounter
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:82: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:82: note: not consecutive access _107 = slam.noTrafoFoundCounter;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:82: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:82: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:82: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:196: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:196: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:196: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:113: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:113: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:113: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:86: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:86: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:86: note: get vectype with 4 units of type unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:86: note: vectype: vector(4) unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:86: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:86: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:86: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:86: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:86: note: misalign = 0 bytes of ref slam.dummyNodeCounter
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:86: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:86: note: not consecutive access _110 = slam.dummyNodeCounter;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:86: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:86: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:86: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:196: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:196: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:196: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:113: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:113: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:113: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:84: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:84: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:84: note: get vectype with 4 units of type unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:84: note: vectype: vector(4) unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:84: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:84: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:84: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:84: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:84: note: misalign = 8 bytes of ref slam.detLoopClsrsCounter
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:84: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:84: note: not consecutive access _113 = slam.detLoopClsrsCounter;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:84: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:84: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:84: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:196: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:196: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:196: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:113: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:113: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:113: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:83: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:83: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:83: note: get vectype with 4 units of type unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:83: note: vectype: vector(4) unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:83: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:83: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:83: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:83: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:83: note: misalign = 4 bytes of ref slam.trafoToSmallCounter
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:83: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:83: note: not consecutive access _116 = slam.trafoToSmallCounter;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:83: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:83: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:83: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:196: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:196: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:196: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:113: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:113: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:113: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:85: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:85: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:85: note: get vectype with 4 units of type unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:85: note: vectype: vector(4) unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:85: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:85: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:85: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:85: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:85: note: misalign = 12 bytes of ref slam.trafoVelocityToBigCounter
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:85: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:85: note: not consecutive access _119 = slam.trafoVelocityToBigCounter;

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:85: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:85: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Mapping.h:85: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:196: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:196: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:196: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:113: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:113: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:113: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: get vectype with 2 units of type long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: vectype: vector(2) long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: get vectype with 2 units of type long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: vectype: vector(2) long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: Detected interleaving MEM[(const struct vector *)&slam + 392B] and MEM[(const struct vector *)&slam + 400B]
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: misalign = 8 bytes of ref MEM[(const struct vector *)&slam + 392B]
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: misalign = 0 bytes of ref MEM[(const struct vector *)&slam + 400B]
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: Detected interleaving of size 2
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:173: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:171: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:171: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:171: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:113: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:113: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:113: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: get vectype with 2 units of type long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: vectype: vector(2) long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: get vectype with 2 units of type long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: vectype: vector(2) long unsigned int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: Detected interleaving MEM[(const struct vector *)&slam + 368B] and MEM[(const struct vector *)&slam + 376B]
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: misalign = 0 bytes of ref MEM[(const struct vector *)&slam + 368B]
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: misalign = 8 bytes of ref MEM[(const struct vector *)&slam + 376B]
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: Detected interleaving of size 2
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:174: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:171: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:171: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:171: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:113: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:113: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:113: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:113: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:113: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:113: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/bits/stl_vector.h:863: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/bits/stl_vector.h:863: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/bits/stl_vector.h:863: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/stl_vector.h:863: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/stl_vector.h:863: note: get vectype with 2 units of type long unsigned int
/usr/include/c++/4.8/bits/stl_vector.h:863: note: vectype: vector(2) long unsigned int
/usr/include/c++/4.8/bits/stl_vector.h:863: note: === vect_pattern_recog ===
/usr/include/c++/4.8/bits/stl_vector.h:863: note: === vect_analyze_dependences ===
/usr/include/c++/4.8/bits/stl_vector.h:863: note: === vect_analyze_data_refs_alignment ===
/usr/include/c++/4.8/bits/stl_vector.h:863: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/stl_vector.h:863: note: misalign = 8 bytes of ref MEM[(const struct vector *)&slam + 376B]
/usr/include/c++/4.8/bits/stl_vector.h:863: note: vect_compute_data_ref_alignment:
/usr/include/c++/4.8/bits/stl_vector.h:863: note: can't force alignment of ref: MEM[(const struct shared_ptr *)_135 + -176B]
/usr/include/c++/4.8/bits/stl_vector.h:863: note: === vect_analyze_data_ref_accesses ===
/usr/include/c++/4.8/bits/stl_vector.h:863: note: not consecutive access _135 = MEM[(const struct vector *)&slam + 376B];

/usr/include/c++/4.8/bits/stl_vector.h:863: note: not consecutive access _1539 = MEM[(const struct shared_ptr *)_135 + -176B];

/usr/include/c++/4.8/bits/stl_vector.h:863: note: === vect_analyze_slp ===
/usr/include/c++/4.8/bits/stl_vector.h:863: note: Failed to SLP the basic block.
/usr/include/c++/4.8/bits/stl_vector.h:863: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: get vectype with 4 units of type int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: vectype: vector(4) int
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: vect_compute_data_ref_alignment:
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: can't force alignment of ref: MEM[(int &)_1539]
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: not consecutive access _1540 = MEM[(int &)_1539];

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/include/Frame.h:101: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:175: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:175: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:175: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:113: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:113: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:113: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/c++/4.8/ostream:113: note: ===vect_slp_analyze_bb===

/usr/include/c++/4.8/ostream:113: note: === vect_analyze_data_refs ===

/usr/include/c++/4.8/ostream:113: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:87: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:87: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:87: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: not vectorized: no vectype for stmt: D.693871 ={v} {CLOBBER};
 scalar_type: struct milliseconds
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: === vect_pattern_recog ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: === vect_analyze_dependences ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: === vect_analyze_data_refs_alignment ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: === vect_analyze_data_ref_accesses ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: === vect_analyze_slp ===
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: Failed to SLP the basic block.
/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:121: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:180: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:180: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:180: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:602: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:602: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:602: note: get vectype with 16 units of type unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:602: note: vectype: vector(16) unsigned char
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:602: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:602: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:602: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:602: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:602: note: misalign = 2 bytes of ref MEM[(const struct JacobiSVD *)&svd + 242B]
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:602: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:602: note: not consecutive access _436 = MEM[(const struct JacobiSVD *)&svd + 242B];

/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:602: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:602: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/SVD/JacobiSVD.h:602: note: not vectorized: failed to find SLP opportunities in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: ===vect_slp_analyze_bb===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: === vect_analyze_data_refs ===

/home/tuofeichen/SLAM/MAV-Project/catkin_ws/src/backend/src/main.cpp:74: note: not vectorized: not enough data-refs in basic block.

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type const Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: const vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: not vectorized: no vectype for stmt: D.1131236 ={v} {CLOBBER};
 scalar_type: const struct Type
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _484
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _484 = MEM[(const Scalar &)&svd + 72];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _495
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _495 = MEM[(const Scalar &)&svd + 96];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _470
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _470 = MEM[(const Scalar &)&svd + 120];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _533
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _533 = MEM[(const Scalar &)&svd + 80];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _544
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _544 = MEM[(const Scalar &)&svd + 104];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _519
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _519 = MEM[(const Scalar &)&svd + 128];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _582
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _582 = MEM[(const Scalar &)&svd + 88];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _593
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _593 = MEM[(const Scalar &)&svd + 112];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _568
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _568 = MEM[(const Scalar &)&svd + 136];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _625
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _625 = MEM[(const Scalar &)&svd + 8];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _637
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _637 = MEM[(const Scalar &)&svd + 32];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _610
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _610 = MEM[(const Scalar &)&svd + 56];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _625
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _625 = MEM[(const Scalar &)&svd + 8];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _637
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _637 = MEM[(const Scalar &)&svd + 32];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _610
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _610 = MEM[(const Scalar &)&svd + 56];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _625
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _625 = MEM[(const Scalar &)&svd + 8];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _637
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _637 = MEM[(const Scalar &)&svd + 32];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _610
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _610 = MEM[(const Scalar &)&svd + 56];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _772
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _772 = MEM[(const Scalar &)&svd + 16];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _784
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _784 = MEM[(const Scalar &)&svd + 40];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _757
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _757 = MEM[(const Scalar &)&svd + 64];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _772
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _772 = MEM[(const Scalar &)&svd + 16];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _784
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _784 = MEM[(const Scalar &)&svd + 40];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _757
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _757 = MEM[(const Scalar &)&svd + 64];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _772
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _772 = MEM[(const Scalar &)&svd + 16];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _784
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _784 = MEM[(const Scalar &)&svd + 40];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _757
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _757 = MEM[(const Scalar &)&svd + 64];

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand res_865
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: res_865 = res_889 + _888;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand res_816
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: res_816 = res_840 + _839;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _925
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _925 = _913 - _924;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand res_865
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: res_865 = res_889 + _888;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand res_767
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: res_767 = res_791 + _790;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _957
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _957 = _945 - _956;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand res_816
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: res_816 = res_840 + _839;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand res_767
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: res_767 = res_791 + _790;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _989
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _989 = _977 - _988;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 72]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 96]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 120]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 80]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 104]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 128]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 88]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 112]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 136]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 96]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 120]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 80]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 104]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 128]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 88]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 112]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 136]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 72] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 96]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 120]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 80]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 104]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 128]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 88]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 112]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 136]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 24] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 96] and MEM[(const Scalar &)&svd + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 96] and MEM[(const Scalar &)&svd + 120]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 96] and MEM[(const Scalar &)&svd + 80]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 96] and MEM[(const Scalar &)&svd + 104]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 96] and MEM[(const Scalar &)&svd + 128]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 96] and MEM[(const Scalar &)&svd + 88]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 96] and MEM[(const Scalar &)&svd + 112]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 96] and MEM[(const Scalar &)&svd + 136]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 96] and MEM[(const Scalar &)&svd + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 96] and MEM[(const Scalar &)&svd + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 96] and MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 96] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 96] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 96] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 48] and MEM[(const Scalar &)&svd + 120]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 48] and MEM[(const Scalar &)&svd + 80]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 48] and MEM[(const Scalar &)&svd + 104]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 48] and MEM[(const Scalar &)&svd + 128]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 48] and MEM[(const Scalar &)&svd + 88]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 48] and MEM[(const Scalar &)&svd + 112]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 48] and MEM[(const Scalar &)&svd + 136]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 48] and MEM[(const Scalar &)&svd + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 48] and MEM[(const Scalar &)&svd + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 48] and MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 48] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 48] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 48] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 120] and MEM[(const Scalar &)&svd + 80]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 120] and MEM[(const Scalar &)&svd + 104]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 120] and MEM[(const Scalar &)&svd + 128]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 120] and MEM[(const Scalar &)&svd + 88]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 120] and MEM[(const Scalar &)&svd + 112]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 120] and MEM[(const Scalar &)&svd + 136]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 120] and MEM[(const Scalar &)&svd + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 120] and MEM[(const Scalar &)&svd + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 120] and MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 120] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 120] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 120] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 80] and MEM[(const Scalar &)&svd + 104]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 80] and MEM[(const Scalar &)&svd + 128]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 80] and MEM[(const Scalar &)&svd + 88]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 80] and MEM[(const Scalar &)&svd + 112]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 80] and MEM[(const Scalar &)&svd + 136]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 80] and MEM[(const Scalar &)&svd + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 80] and MEM[(const Scalar &)&svd + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 80] and MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 80] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 80] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 80] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 104] and MEM[(const Scalar &)&svd + 128]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 104] and MEM[(const Scalar &)&svd + 88]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 104] and MEM[(const Scalar &)&svd + 112]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 104] and MEM[(const Scalar &)&svd + 136]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 104] and MEM[(const Scalar &)&svd + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 104] and MEM[(const Scalar &)&svd + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 104] and MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 104] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 104] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 104] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 128] and MEM[(const Scalar &)&svd + 88]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 128] and MEM[(const Scalar &)&svd + 112]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 128] and MEM[(const Scalar &)&svd + 136]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 128] and MEM[(const Scalar &)&svd + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 128] and MEM[(const Scalar &)&svd + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 128] and MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 128] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 128] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 128] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 88] and MEM[(const Scalar &)&svd + 112]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 88] and MEM[(const Scalar &)&svd + 136]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 88] and MEM[(const Scalar &)&svd + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 88] and MEM[(const Scalar &)&svd + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 88] and MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 88] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 88] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 88] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 112] and MEM[(const Scalar &)&svd + 136]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 112] and MEM[(const Scalar &)&svd + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 112] and MEM[(const Scalar &)&svd + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 112] and MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 112] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 112] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 112] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 136] and MEM[(const Scalar &)&svd + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 136] and MEM[(const Scalar &)&svd + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 136] and MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 136] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 136] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 136] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 8] and MEM[(const Scalar &)&svd + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 8] and MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 8] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 8] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 8] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 32] and MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 32] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 32] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 32] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 56] and MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 56] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 56] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 16] and MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 16] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(const Scalar &)&svd + 40] and MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 0 bytes of ref MEM[(const Scalar &)&svd]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 8 bytes of ref MEM[(const Scalar &)&svd + 72]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 8 bytes of ref MEM[(const Scalar &)&svd + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 0 bytes of ref MEM[(const Scalar &)&svd + 96]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 0 bytes of ref MEM[(const Scalar &)&svd + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 8 bytes of ref MEM[(const Scalar &)&svd + 120]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 0 bytes of ref MEM[(const Scalar &)&svd + 80]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 8 bytes of ref MEM[(const Scalar &)&svd + 104]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 0 bytes of ref MEM[(const Scalar &)&svd + 128]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 8 bytes of ref MEM[(const Scalar &)&svd + 88]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 0 bytes of ref MEM[(const Scalar &)&svd + 112]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 8 bytes of ref MEM[(const Scalar &)&svd + 136]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 8 bytes of ref MEM[(const Scalar &)&svd + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 0 bytes of ref MEM[(const Scalar &)&svd + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 8 bytes of ref MEM[(const Scalar &)&svd + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 0 bytes of ref MEM[(const Scalar &)&svd + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 8 bytes of ref MEM[(const Scalar &)&svd + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 0 bytes of ref MEM[(const Scalar &)&svd + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving of size 18
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: not vectorized: no vectype for stmt: D.1131470 ={v} {CLOBBER};
 scalar_type: struct scalar_constant_op
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: vect_is_simple_use: operand actual_other_1038
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: def_stmt: actual_other_1038 = 1.0e+0 / _894;

/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: vect_is_simple_use: operand actual_other_1038
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: def_stmt: actual_other_1038 = 1.0e+0 / _894;

/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: vect_is_simple_use: operand actual_other_1038
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: def_stmt: actual_other_1038 = 1.0e+0 / _894;

/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: type of def: 3.
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Core/SelfCwiseBinaryOp.h:190: note: not vectorized: failed to find SLP opportunities in basic block.

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: ===vect_slp_analyze_bb===

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_analyze_data_refs ===

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: not vectorized: no vectype for stmt: D.1131240 ={v} {CLOBBER};
 scalar_type: const struct Type
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_pattern_recog ===
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _1042
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _1042 = actual_other_1038 * _478;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _1044
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _1044 = actual_other_1038 * _625;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _1046
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _1046 = actual_other_1038 * _772;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _1042
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _1042 = actual_other_1038 * _478;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _1044
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _1044 = actual_other_1038 * _625;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _1046
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _1046 = actual_other_1038 * _772;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _1042
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _1042 = actual_other_1038 * _478;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _1044
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _1044 = actual_other_1038 * _625;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_is_simple_use: operand _1046
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: def_stmt: _1046 = actual_other_1038 * _772;

/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: type of def: 2.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_analyze_dependences ===
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180] and MEM[(Scalar &)&D.1131180 + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180] and MEM[(Scalar &)&D.1131180 + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180] and MEM[(Scalar &)&D.1131180 + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180] and MEM[(Scalar &)&D.1131180 + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180] and MEM[(Scalar &)&D.1131180 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180] and MEM[(Scalar &)&D.1131180 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180] and MEM[(Scalar &)&D.1131180 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180] and MEM[(Scalar &)&D.1131180 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 8] and MEM[(Scalar &)&D.1131180 + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 8] and MEM[(Scalar &)&D.1131180 + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 8] and MEM[(Scalar &)&D.1131180 + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 8] and MEM[(Scalar &)&D.1131180 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 8] and MEM[(Scalar &)&D.1131180 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 8] and MEM[(Scalar &)&D.1131180 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 8] and MEM[(Scalar &)&D.1131180 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 16] and MEM[(Scalar &)&D.1131180 + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 16] and MEM[(Scalar &)&D.1131180 + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 16] and MEM[(Scalar &)&D.1131180 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 16] and MEM[(Scalar &)&D.1131180 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 16] and MEM[(Scalar &)&D.1131180 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 16] and MEM[(Scalar &)&D.1131180 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 24] and MEM[(Scalar &)&D.1131180 + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 24] and MEM[(Scalar &)&D.1131180 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 24] and MEM[(Scalar &)&D.1131180 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 24] and MEM[(Scalar &)&D.1131180 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 24] and MEM[(Scalar &)&D.1131180 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 32] and MEM[(Scalar &)&D.1131180 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 32] and MEM[(Scalar &)&D.1131180 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 32] and MEM[(Scalar &)&D.1131180 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 32] and MEM[(Scalar &)&D.1131180 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 40] and MEM[(Scalar &)&D.1131180 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 40] and MEM[(Scalar &)&D.1131180 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 40] and MEM[(Scalar &)&D.1131180 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 48] and MEM[(Scalar &)&D.1131180 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 48] and MEM[(Scalar &)&D.1131180 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving MEM[(Scalar &)&D.1131180 + 56] and MEM[(Scalar &)&D.1131180 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_analyze_data_refs_alignment ===
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 0 bytes of ref MEM[(Scalar &)&D.1131180]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 8 bytes of ref MEM[(Scalar &)&D.1131180 + 8]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 0 bytes of ref MEM[(Scalar &)&D.1131180 + 16]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 8 bytes of ref MEM[(Scalar &)&D.1131180 + 24]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 0 bytes of ref MEM[(Scalar &)&D.1131180 + 32]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 8 bytes of ref MEM[(Scalar &)&D.1131180 + 40]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 0 bytes of ref MEM[(Scalar &)&D.1131180 + 48]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 8 bytes of ref MEM[(Scalar &)&D.1131180 + 56]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vect_compute_data_ref_alignment:
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: misalign = 0 bytes of ref MEM[(Scalar &)&D.1131180 + 64]
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_analyze_data_ref_accesses ===
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Detected interleaving of size 9
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: === vect_analyze_slp ===
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: get vectype with 2 units of type Scalar
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: vectype: vector(2) double
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Build SLP failed: unrolling required in basic block SLP
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: Failed to SLP the basic block.
/usr/include/eigen3/Eigen/src/Core/products/CoeffBasedProduct.h:255: note: not vectorized: failed to find SLP opportunities in basic block.
